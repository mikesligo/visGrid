/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package visGrid.impl;
import java.util.HashMap;
        import java.util.Map;
        import java.util.Timer;
        import java.util.TimerTask;
        import java.io.File;
        import java.net.URI;
        import java.net.URISyntaxException;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import visGrid.Diesel_dg;
import visGrid.VisGridPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Diesel dg</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getGen_mode <em>Gen mode</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getGen_status <em>Gen status</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getRated_kVA <em>Rated kVA</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getRated_kV <em>Rated kV</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getRs <em>Rs</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getXs <em>Xs</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getRg <em>Rg</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getXg <em>Xg</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getVoltage_A <em>Voltage A</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getVoltage_B <em>Voltage B</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getVoltage_C <em>Voltage C</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getCurrent_A <em>Current A</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getCurrent_B <em>Current B</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getCurrent_C <em>Current C</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getEfA <em>Ef A</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getEfB <em>Ef B</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getEfC <em>Ef C</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPower_A <em>Power A</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPower_B <em>Power B</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPower_C <em>Power C</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPower_A_sch <em>Power Asch</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPower_B_sch <em>Power Bsch</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPower_C_sch <em>Power Csch</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getEfA_sch <em>Ef Asch</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getEfB_sch <em>Ef Bsch</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getEfC_sch <em>Ef Csch</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getSlackBus <em>Slack Bus</em>}</li>
 *   <li>{@link visGrid.impl.Diesel_dgImpl#getPhases <em>Phases</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class Diesel_dgImpl extends ConnectionImpl implements Diesel_dg {
	// Generated by python script located in this directory
       boolean threadLock = false;
       HashMap<String,Boolean> lock = new HashMap<String,Boolean>();

   private void checkUnlock() {
        if (threadLock) return;
        for (Map.Entry<String, Boolean> entry : lock.entrySet()){
            if (threadLock) return;
            if (entry.getValue() == false) return;
        }
        resetLock();
    }

    private void resetLock() {
        Timer timer = new Timer();
        class Task extends TimerTask{
            public void run() {
                threadLock = true;
                for (Map.Entry<String, Boolean> entry : lock.entrySet()){
                    entry.setValue(false);
                }
                threadLock = false;
            }   
        }
        timer.schedule(new Task(), lock.size()*30);
    }
    // END PYTHON GENERATED CODE
	/**
	 * The default value of the '{@link #getGen_mode() <em>Gen mode</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGen_mode()
	 * @generated
	 * @ordered
	 */
	protected static final String GEN_MODE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getGen_mode() <em>Gen mode</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGen_mode()
	 * @generated
	 * @ordered
	 */
	protected String gen_mode = GEN_MODE_EDEFAULT;

	/**
	 * The default value of the '{@link #getGen_status() <em>Gen status</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGen_status()
	 * @generated
	 * @ordered
	 */
	protected static final String GEN_STATUS_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getGen_status() <em>Gen status</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGen_status()
	 * @generated
	 * @ordered
	 */
	protected String gen_status = GEN_STATUS_EDEFAULT;

	/**
	 * The default value of the '{@link #getRated_kVA() <em>Rated kVA</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRated_kVA()
	 * @generated
	 * @ordered
	 */
	protected static final String RATED_KVA_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getRated_kVA() <em>Rated kVA</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRated_kVA()
	 * @generated
	 * @ordered
	 */
	protected String rated_kVA = RATED_KVA_EDEFAULT;

	/**
	 * The default value of the '{@link #getRated_kV() <em>Rated kV</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRated_kV()
	 * @generated
	 * @ordered
	 */
	protected static final String RATED_KV_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getRated_kV() <em>Rated kV</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRated_kV()
	 * @generated
	 * @ordered
	 */
	protected String rated_kV = RATED_KV_EDEFAULT;

	/**
	 * The default value of the '{@link #getRs() <em>Rs</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRs()
	 * @generated
	 * @ordered
	 */
	protected static final String RS_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getRs() <em>Rs</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRs()
	 * @generated
	 * @ordered
	 */
	protected String rs = RS_EDEFAULT;

	/**
	 * The default value of the '{@link #getXs() <em>Xs</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getXs()
	 * @generated
	 * @ordered
	 */
	protected static final String XS_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getXs() <em>Xs</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getXs()
	 * @generated
	 * @ordered
	 */
	protected String xs = XS_EDEFAULT;

	/**
	 * The default value of the '{@link #getRg() <em>Rg</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRg()
	 * @generated
	 * @ordered
	 */
	protected static final String RG_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getRg() <em>Rg</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRg()
	 * @generated
	 * @ordered
	 */
	protected String rg = RG_EDEFAULT;

	/**
	 * The default value of the '{@link #getXg() <em>Xg</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getXg()
	 * @generated
	 * @ordered
	 */
	protected static final String XG_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getXg() <em>Xg</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getXg()
	 * @generated
	 * @ordered
	 */
	protected String xg = XG_EDEFAULT;

	/**
	 * The default value of the '{@link #getVoltage_A() <em>Voltage A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVoltage_A()
	 * @generated
	 * @ordered
	 */
	protected static final String VOLTAGE_A_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getVoltage_A() <em>Voltage A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVoltage_A()
	 * @generated
	 * @ordered
	 */
	protected String voltage_A = VOLTAGE_A_EDEFAULT;

	/**
	 * The default value of the '{@link #getVoltage_B() <em>Voltage B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVoltage_B()
	 * @generated
	 * @ordered
	 */
	protected static final String VOLTAGE_B_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getVoltage_B() <em>Voltage B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVoltage_B()
	 * @generated
	 * @ordered
	 */
	protected String voltage_B = VOLTAGE_B_EDEFAULT;

	/**
	 * The default value of the '{@link #getVoltage_C() <em>Voltage C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVoltage_C()
	 * @generated
	 * @ordered
	 */
	protected static final String VOLTAGE_C_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getVoltage_C() <em>Voltage C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getVoltage_C()
	 * @generated
	 * @ordered
	 */
	protected String voltage_C = VOLTAGE_C_EDEFAULT;

	/**
	 * The default value of the '{@link #getCurrent_A() <em>Current A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrent_A()
	 * @generated
	 * @ordered
	 */
	protected static final String CURRENT_A_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getCurrent_A() <em>Current A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrent_A()
	 * @generated
	 * @ordered
	 */
	protected String current_A = CURRENT_A_EDEFAULT;

	/**
	 * The default value of the '{@link #getCurrent_B() <em>Current B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrent_B()
	 * @generated
	 * @ordered
	 */
	protected static final String CURRENT_B_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getCurrent_B() <em>Current B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrent_B()
	 * @generated
	 * @ordered
	 */
	protected String current_B = CURRENT_B_EDEFAULT;

	/**
	 * The default value of the '{@link #getCurrent_C() <em>Current C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrent_C()
	 * @generated
	 * @ordered
	 */
	protected static final String CURRENT_C_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getCurrent_C() <em>Current C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrent_C()
	 * @generated
	 * @ordered
	 */
	protected String current_C = CURRENT_C_EDEFAULT;

	/**
	 * The default value of the '{@link #getEfA() <em>Ef A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfA()
	 * @generated
	 * @ordered
	 */
	protected static final String EF_A_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEfA() <em>Ef A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfA()
	 * @generated
	 * @ordered
	 */
	protected String efA = EF_A_EDEFAULT;

	/**
	 * The default value of the '{@link #getEfB() <em>Ef B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfB()
	 * @generated
	 * @ordered
	 */
	protected static final String EF_B_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEfB() <em>Ef B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfB()
	 * @generated
	 * @ordered
	 */
	protected String efB = EF_B_EDEFAULT;

	/**
	 * The default value of the '{@link #getEfC() <em>Ef C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfC()
	 * @generated
	 * @ordered
	 */
	protected static final String EF_C_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEfC() <em>Ef C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfC()
	 * @generated
	 * @ordered
	 */
	protected String efC = EF_C_EDEFAULT;

	/**
	 * The default value of the '{@link #getPower_A() <em>Power A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_A()
	 * @generated
	 * @ordered
	 */
	protected static final String POWER_A_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPower_A() <em>Power A</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_A()
	 * @generated
	 * @ordered
	 */
	protected String power_A = POWER_A_EDEFAULT;

	/**
	 * The default value of the '{@link #getPower_B() <em>Power B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_B()
	 * @generated
	 * @ordered
	 */
	protected static final String POWER_B_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPower_B() <em>Power B</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_B()
	 * @generated
	 * @ordered
	 */
	protected String power_B = POWER_B_EDEFAULT;

	/**
	 * The default value of the '{@link #getPower_C() <em>Power C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_C()
	 * @generated
	 * @ordered
	 */
	protected static final String POWER_C_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPower_C() <em>Power C</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_C()
	 * @generated
	 * @ordered
	 */
	protected String power_C = POWER_C_EDEFAULT;

	/**
	 * The default value of the '{@link #getPower_A_sch() <em>Power Asch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_A_sch()
	 * @generated
	 * @ordered
	 */
	protected static final String POWER_ASCH_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPower_A_sch() <em>Power Asch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_A_sch()
	 * @generated
	 * @ordered
	 */
	protected String power_A_sch = POWER_ASCH_EDEFAULT;

	/**
	 * The default value of the '{@link #getPower_B_sch() <em>Power Bsch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_B_sch()
	 * @generated
	 * @ordered
	 */
	protected static final String POWER_BSCH_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPower_B_sch() <em>Power Bsch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_B_sch()
	 * @generated
	 * @ordered
	 */
	protected String power_B_sch = POWER_BSCH_EDEFAULT;

	/**
	 * The default value of the '{@link #getPower_C_sch() <em>Power Csch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_C_sch()
	 * @generated
	 * @ordered
	 */
	protected static final String POWER_CSCH_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPower_C_sch() <em>Power Csch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPower_C_sch()
	 * @generated
	 * @ordered
	 */
	protected String power_C_sch = POWER_CSCH_EDEFAULT;

	/**
	 * The default value of the '{@link #getEfA_sch() <em>Ef Asch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfA_sch()
	 * @generated
	 * @ordered
	 */
	protected static final String EF_ASCH_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEfA_sch() <em>Ef Asch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfA_sch()
	 * @generated
	 * @ordered
	 */
	protected String efA_sch = EF_ASCH_EDEFAULT;

	/**
	 * The default value of the '{@link #getEfB_sch() <em>Ef Bsch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfB_sch()
	 * @generated
	 * @ordered
	 */
	protected static final String EF_BSCH_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEfB_sch() <em>Ef Bsch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfB_sch()
	 * @generated
	 * @ordered
	 */
	protected String efB_sch = EF_BSCH_EDEFAULT;

	/**
	 * The default value of the '{@link #getEfC_sch() <em>Ef Csch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfC_sch()
	 * @generated
	 * @ordered
	 */
	protected static final String EF_CSCH_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEfC_sch() <em>Ef Csch</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEfC_sch()
	 * @generated
	 * @ordered
	 */
	protected String efC_sch = EF_CSCH_EDEFAULT;

	/**
	 * The default value of the '{@link #getSlackBus() <em>Slack Bus</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSlackBus()
	 * @generated
	 * @ordered
	 */
	protected static final String SLACK_BUS_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getSlackBus() <em>Slack Bus</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSlackBus()
	 * @generated
	 * @ordered
	 */
	protected String slackBus = SLACK_BUS_EDEFAULT;

	/**
	 * The default value of the '{@link #getPhases() <em>Phases</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPhases()
	 * @generated
	 * @ordered
	 */
	protected static final String PHASES_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getPhases() <em>Phases</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPhases()
	 * @generated
	 * @ordered
	 */
	protected String phases = PHASES_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Diesel_dgImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return VisGridPackage.eINSTANCE.getDiesel_dg();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getGen_mode() {
		// Generated by python script located in this directory
			if (!lock.containsKey("gen_mode")) lock.put("gen_mode", new Boolean(false));
			if (!(Boolean)lock.get("gen_mode")){
				lock.put("gen_mode", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"gen_mode");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Gen_mode");
					gen_mode= val;
			}
		return gen_mode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setGen_mode(String newGen_mode) {
		String oldGen_mode = gen_mode;
		gen_mode = newGen_mode;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__GEN_MODE, oldGen_mode, gen_mode));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getGen_status() {
		// Generated by python script located in this directory
			if (!lock.containsKey("gen_status")) lock.put("gen_status", new Boolean(false));
			if (!(Boolean)lock.get("gen_status")){
				lock.put("gen_status", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"gen_status");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Gen_status");
					gen_status= val;
			}
		return gen_status;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setGen_status(String newGen_status) {
		String oldGen_status = gen_status;
		gen_status = newGen_status;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__GEN_STATUS, oldGen_status, gen_status));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getRated_kVA() {
		// Generated by python script located in this directory
			if (!lock.containsKey("rated_kVA")) lock.put("rated_kVA", new Boolean(false));
			if (!(Boolean)lock.get("rated_kVA")){
				lock.put("rated_kVA", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"rated_kVA");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Rated_kVA");
					rated_kVA= val;
			}
		return rated_kVA;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setRated_kVA(String newRated_kVA) {
		String oldRated_kVA = rated_kVA;
		rated_kVA = newRated_kVA;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__RATED_KVA, oldRated_kVA, rated_kVA));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getRated_kV() {
		// Generated by python script located in this directory
			if (!lock.containsKey("rated_kV")) lock.put("rated_kV", new Boolean(false));
			if (!(Boolean)lock.get("rated_kV")){
				lock.put("rated_kV", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"rated_kV");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Rated_kV");
					rated_kV= val;
			}
		return rated_kV;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setRated_kV(String newRated_kV) {
		String oldRated_kV = rated_kV;
		rated_kV = newRated_kV;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__RATED_KV, oldRated_kV, rated_kV));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getRs() {
		// Generated by python script located in this directory
			if (!lock.containsKey("rs")) lock.put("rs", new Boolean(false));
			if (!(Boolean)lock.get("rs")){
				lock.put("rs", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"rs");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Rs");
					rs= val;
			}
		return rs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setRs(String newRs) {
		String oldRs = rs;
		rs = newRs;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__RS, oldRs, rs));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getXs() {
		// Generated by python script located in this directory
			if (!lock.containsKey("xs")) lock.put("xs", new Boolean(false));
			if (!(Boolean)lock.get("xs")){
				lock.put("xs", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"xs");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Xs");
					xs= val;
			}
		return xs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setXs(String newXs) {
		String oldXs = xs;
		xs = newXs;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__XS, oldXs, xs));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getRg() {
		// Generated by python script located in this directory
			if (!lock.containsKey("rg")) lock.put("rg", new Boolean(false));
			if (!(Boolean)lock.get("rg")){
				lock.put("rg", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"rg");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Rg");
					rg= val;
			}
		return rg;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setRg(String newRg) {
		String oldRg = rg;
		rg = newRg;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__RG, oldRg, rg));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getXg() {
		// Generated by python script located in this directory
			if (!lock.containsKey("xg")) lock.put("xg", new Boolean(false));
			if (!(Boolean)lock.get("xg")){
				lock.put("xg", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"xg");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Xg");
					xg= val;
			}
		return xg;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setXg(String newXg) {
		String oldXg = xg;
		xg = newXg;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__XG, oldXg, xg));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getVoltage_A() {
		// Generated by python script located in this directory
			if (!lock.containsKey("voltage_A")) lock.put("voltage_A", new Boolean(false));
			if (!(Boolean)lock.get("voltage_A")){
				lock.put("voltage_A", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"voltage_A");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Voltage_A");
					voltage_A= val;
			}
		return voltage_A;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setVoltage_A(String newVoltage_A) {
		String oldVoltage_A = voltage_A;
		voltage_A = newVoltage_A;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__VOLTAGE_A, oldVoltage_A, voltage_A));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getVoltage_B() {
		// Generated by python script located in this directory
			if (!lock.containsKey("voltage_B")) lock.put("voltage_B", new Boolean(false));
			if (!(Boolean)lock.get("voltage_B")){
				lock.put("voltage_B", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"voltage_B");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Voltage_B");
					voltage_B= val;
			}
		return voltage_B;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setVoltage_B(String newVoltage_B) {
		String oldVoltage_B = voltage_B;
		voltage_B = newVoltage_B;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__VOLTAGE_B, oldVoltage_B, voltage_B));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getVoltage_C() {
		// Generated by python script located in this directory
			if (!lock.containsKey("voltage_C")) lock.put("voltage_C", new Boolean(false));
			if (!(Boolean)lock.get("voltage_C")){
				lock.put("voltage_C", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"voltage_C");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Voltage_C");
					voltage_C= val;
			}
		return voltage_C;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setVoltage_C(String newVoltage_C) {
		String oldVoltage_C = voltage_C;
		voltage_C = newVoltage_C;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__VOLTAGE_C, oldVoltage_C, voltage_C));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getCurrent_A() {
		// Generated by python script located in this directory
			if (!lock.containsKey("current_A")) lock.put("current_A", new Boolean(false));
			if (!(Boolean)lock.get("current_A")){
				lock.put("current_A", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"current_A");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Current_A");
					current_A= val;
			}
		return current_A;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCurrent_A(String newCurrent_A) {
		String oldCurrent_A = current_A;
		current_A = newCurrent_A;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__CURRENT_A, oldCurrent_A, current_A));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getCurrent_B() {
		// Generated by python script located in this directory
			if (!lock.containsKey("current_B")) lock.put("current_B", new Boolean(false));
			if (!(Boolean)lock.get("current_B")){
				lock.put("current_B", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"current_B");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Current_B");
					current_B= val;
			}
		return current_B;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCurrent_B(String newCurrent_B) {
		String oldCurrent_B = current_B;
		current_B = newCurrent_B;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__CURRENT_B, oldCurrent_B, current_B));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getCurrent_C() {
		// Generated by python script located in this directory
			if (!lock.containsKey("current_C")) lock.put("current_C", new Boolean(false));
			if (!(Boolean)lock.get("current_C")){
				lock.put("current_C", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"current_C");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Current_C");
					current_C= val;
			}
		return current_C;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCurrent_C(String newCurrent_C) {
		String oldCurrent_C = current_C;
		current_C = newCurrent_C;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__CURRENT_C, oldCurrent_C, current_C));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEfA() {
		// Generated by python script located in this directory
			if (!lock.containsKey("efA")) lock.put("efA", new Boolean(false));
			if (!(Boolean)lock.get("efA")){
				lock.put("efA", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"efA");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"EfA");
					efA= val;
			}
		return efA;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEfA(String newEfA) {
		String oldEfA = efA;
		efA = newEfA;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__EF_A, oldEfA, efA));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEfB() {
		// Generated by python script located in this directory
			if (!lock.containsKey("efB")) lock.put("efB", new Boolean(false));
			if (!(Boolean)lock.get("efB")){
				lock.put("efB", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"efB");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"EfB");
					efB= val;
			}
		return efB;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEfB(String newEfB) {
		String oldEfB = efB;
		efB = newEfB;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__EF_B, oldEfB, efB));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEfC() {
		// Generated by python script located in this directory
			if (!lock.containsKey("efC")) lock.put("efC", new Boolean(false));
			if (!(Boolean)lock.get("efC")){
				lock.put("efC", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"efC");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"EfC");
					efC= val;
			}
		return efC;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEfC(String newEfC) {
		String oldEfC = efC;
		efC = newEfC;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__EF_C, oldEfC, efC));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPower_A() {
		// Generated by python script located in this directory
			if (!lock.containsKey("power_A")) lock.put("power_A", new Boolean(false));
			if (!(Boolean)lock.get("power_A")){
				lock.put("power_A", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"power_A");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Power_A");
					power_A= val;
			}
		return power_A;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPower_A(String newPower_A) {
		String oldPower_A = power_A;
		power_A = newPower_A;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__POWER_A, oldPower_A, power_A));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPower_B() {
		// Generated by python script located in this directory
			if (!lock.containsKey("power_B")) lock.put("power_B", new Boolean(false));
			if (!(Boolean)lock.get("power_B")){
				lock.put("power_B", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"power_B");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Power_B");
					power_B= val;
			}
		return power_B;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPower_B(String newPower_B) {
		String oldPower_B = power_B;
		power_B = newPower_B;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__POWER_B, oldPower_B, power_B));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPower_C() {
		// Generated by python script located in this directory
			if (!lock.containsKey("power_C")) lock.put("power_C", new Boolean(false));
			if (!(Boolean)lock.get("power_C")){
				lock.put("power_C", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"power_C");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Power_C");
					power_C= val;
			}
		return power_C;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPower_C(String newPower_C) {
		String oldPower_C = power_C;
		power_C = newPower_C;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__POWER_C, oldPower_C, power_C));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPower_A_sch() {
		// Generated by python script located in this directory
			if (!lock.containsKey("power_A_sch")) lock.put("power_A_sch", new Boolean(false));
			if (!(Boolean)lock.get("power_A_sch")){
				lock.put("power_A_sch", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"power_A_sch");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Power_A_sch");
					power_A_sch= val;
			}
		return power_A_sch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPower_A_sch(String newPower_A_sch) {
		String oldPower_A_sch = power_A_sch;
		power_A_sch = newPower_A_sch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__POWER_ASCH, oldPower_A_sch, power_A_sch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPower_B_sch() {
		// Generated by python script located in this directory
			if (!lock.containsKey("power_B_sch")) lock.put("power_B_sch", new Boolean(false));
			if (!(Boolean)lock.get("power_B_sch")){
				lock.put("power_B_sch", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"power_B_sch");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Power_B_sch");
					power_B_sch= val;
			}
		return power_B_sch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPower_B_sch(String newPower_B_sch) {
		String oldPower_B_sch = power_B_sch;
		power_B_sch = newPower_B_sch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__POWER_BSCH, oldPower_B_sch, power_B_sch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPower_C_sch() {
		// Generated by python script located in this directory
			if (!lock.containsKey("power_C_sch")) lock.put("power_C_sch", new Boolean(false));
			if (!(Boolean)lock.get("power_C_sch")){
				lock.put("power_C_sch", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"power_C_sch");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Power_C_sch");
					power_C_sch= val;
			}
		return power_C_sch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPower_C_sch(String newPower_C_sch) {
		String oldPower_C_sch = power_C_sch;
		power_C_sch = newPower_C_sch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__POWER_CSCH, oldPower_C_sch, power_C_sch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEfA_sch() {
		// Generated by python script located in this directory
			if (!lock.containsKey("efA_sch")) lock.put("efA_sch", new Boolean(false));
			if (!(Boolean)lock.get("efA_sch")){
				lock.put("efA_sch", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"efA_sch");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"EfA_sch");
					efA_sch= val;
			}
		return efA_sch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEfA_sch(String newEfA_sch) {
		String oldEfA_sch = efA_sch;
		efA_sch = newEfA_sch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__EF_ASCH, oldEfA_sch, efA_sch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEfB_sch() {
		// Generated by python script located in this directory
			if (!lock.containsKey("efB_sch")) lock.put("efB_sch", new Boolean(false));
			if (!(Boolean)lock.get("efB_sch")){
				lock.put("efB_sch", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"efB_sch");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"EfB_sch");
					efB_sch= val;
			}
		return efB_sch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEfB_sch(String newEfB_sch) {
		String oldEfB_sch = efB_sch;
		efB_sch = newEfB_sch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__EF_BSCH, oldEfB_sch, efB_sch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getEfC_sch() {
		// Generated by python script located in this directory
			if (!lock.containsKey("efC_sch")) lock.put("efC_sch", new Boolean(false));
			if (!(Boolean)lock.get("efC_sch")){
				lock.put("efC_sch", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"efC_sch");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"EfC_sch");
					efC_sch= val;
			}
		return efC_sch;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEfC_sch(String newEfC_sch) {
		String oldEfC_sch = efC_sch;
		efC_sch = newEfC_sch;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__EF_CSCH, oldEfC_sch, efC_sch));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getSlackBus() {
		// Generated by python script located in this directory
			if (!lock.containsKey("slackBus")) lock.put("slackBus", new Boolean(false));
			if (!(Boolean)lock.get("slackBus")){
				lock.put("slackBus", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"slackBus");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"SlackBus");
					slackBus= val;
			}
		return slackBus;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setSlackBus(String newSlackBus) {
		String oldSlackBus = slackBus;
		slackBus = newSlackBus;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__SLACK_BUS, oldSlackBus, slackBus));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getPhases() {
		// Generated by python script located in this directory
			if (!lock.containsKey("phases")) lock.put("phases", new Boolean(false));
			if (!(Boolean)lock.get("phases")){
				lock.put("phases", true);
				checkUnlock();
					String val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"phases");
					if (val == null) val = http.Property.getValueOfProperty(this.getName().replace(" ", "%20"),"Phases");
					phases= val;
			}
		return phases;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPhases(String newPhases) {
		String oldPhases = phases;
		phases = newPhases;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, VisGridPackage.DIESEL_DG__PHASES, oldPhases, phases));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case VisGridPackage.DIESEL_DG__GEN_MODE:
				return getGen_mode();
			case VisGridPackage.DIESEL_DG__GEN_STATUS:
				return getGen_status();
			case VisGridPackage.DIESEL_DG__RATED_KVA:
				return getRated_kVA();
			case VisGridPackage.DIESEL_DG__RATED_KV:
				return getRated_kV();
			case VisGridPackage.DIESEL_DG__RS:
				return getRs();
			case VisGridPackage.DIESEL_DG__XS:
				return getXs();
			case VisGridPackage.DIESEL_DG__RG:
				return getRg();
			case VisGridPackage.DIESEL_DG__XG:
				return getXg();
			case VisGridPackage.DIESEL_DG__VOLTAGE_A:
				return getVoltage_A();
			case VisGridPackage.DIESEL_DG__VOLTAGE_B:
				return getVoltage_B();
			case VisGridPackage.DIESEL_DG__VOLTAGE_C:
				return getVoltage_C();
			case VisGridPackage.DIESEL_DG__CURRENT_A:
				return getCurrent_A();
			case VisGridPackage.DIESEL_DG__CURRENT_B:
				return getCurrent_B();
			case VisGridPackage.DIESEL_DG__CURRENT_C:
				return getCurrent_C();
			case VisGridPackage.DIESEL_DG__EF_A:
				return getEfA();
			case VisGridPackage.DIESEL_DG__EF_B:
				return getEfB();
			case VisGridPackage.DIESEL_DG__EF_C:
				return getEfC();
			case VisGridPackage.DIESEL_DG__POWER_A:
				return getPower_A();
			case VisGridPackage.DIESEL_DG__POWER_B:
				return getPower_B();
			case VisGridPackage.DIESEL_DG__POWER_C:
				return getPower_C();
			case VisGridPackage.DIESEL_DG__POWER_ASCH:
				return getPower_A_sch();
			case VisGridPackage.DIESEL_DG__POWER_BSCH:
				return getPower_B_sch();
			case VisGridPackage.DIESEL_DG__POWER_CSCH:
				return getPower_C_sch();
			case VisGridPackage.DIESEL_DG__EF_ASCH:
				return getEfA_sch();
			case VisGridPackage.DIESEL_DG__EF_BSCH:
				return getEfB_sch();
			case VisGridPackage.DIESEL_DG__EF_CSCH:
				return getEfC_sch();
			case VisGridPackage.DIESEL_DG__SLACK_BUS:
				return getSlackBus();
			case VisGridPackage.DIESEL_DG__PHASES:
				return getPhases();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case VisGridPackage.DIESEL_DG__GEN_MODE:
				setGen_mode((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__GEN_STATUS:
				setGen_status((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__RATED_KVA:
				setRated_kVA((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__RATED_KV:
				setRated_kV((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__RS:
				setRs((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__XS:
				setXs((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__RG:
				setRg((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__XG:
				setXg((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__VOLTAGE_A:
				setVoltage_A((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__VOLTAGE_B:
				setVoltage_B((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__VOLTAGE_C:
				setVoltage_C((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__CURRENT_A:
				setCurrent_A((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__CURRENT_B:
				setCurrent_B((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__CURRENT_C:
				setCurrent_C((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__EF_A:
				setEfA((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__EF_B:
				setEfB((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__EF_C:
				setEfC((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__POWER_A:
				setPower_A((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__POWER_B:
				setPower_B((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__POWER_C:
				setPower_C((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__POWER_ASCH:
				setPower_A_sch((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__POWER_BSCH:
				setPower_B_sch((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__POWER_CSCH:
				setPower_C_sch((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__EF_ASCH:
				setEfA_sch((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__EF_BSCH:
				setEfB_sch((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__EF_CSCH:
				setEfC_sch((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__SLACK_BUS:
				setSlackBus((String)newValue);
				return;
			case VisGridPackage.DIESEL_DG__PHASES:
				setPhases((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case VisGridPackage.DIESEL_DG__GEN_MODE:
				setGen_mode(GEN_MODE_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__GEN_STATUS:
				setGen_status(GEN_STATUS_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__RATED_KVA:
				setRated_kVA(RATED_KVA_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__RATED_KV:
				setRated_kV(RATED_KV_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__RS:
				setRs(RS_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__XS:
				setXs(XS_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__RG:
				setRg(RG_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__XG:
				setXg(XG_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__VOLTAGE_A:
				setVoltage_A(VOLTAGE_A_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__VOLTAGE_B:
				setVoltage_B(VOLTAGE_B_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__VOLTAGE_C:
				setVoltage_C(VOLTAGE_C_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__CURRENT_A:
				setCurrent_A(CURRENT_A_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__CURRENT_B:
				setCurrent_B(CURRENT_B_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__CURRENT_C:
				setCurrent_C(CURRENT_C_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__EF_A:
				setEfA(EF_A_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__EF_B:
				setEfB(EF_B_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__EF_C:
				setEfC(EF_C_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__POWER_A:
				setPower_A(POWER_A_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__POWER_B:
				setPower_B(POWER_B_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__POWER_C:
				setPower_C(POWER_C_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__POWER_ASCH:
				setPower_A_sch(POWER_ASCH_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__POWER_BSCH:
				setPower_B_sch(POWER_BSCH_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__POWER_CSCH:
				setPower_C_sch(POWER_CSCH_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__EF_ASCH:
				setEfA_sch(EF_ASCH_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__EF_BSCH:
				setEfB_sch(EF_BSCH_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__EF_CSCH:
				setEfC_sch(EF_CSCH_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__SLACK_BUS:
				setSlackBus(SLACK_BUS_EDEFAULT);
				return;
			case VisGridPackage.DIESEL_DG__PHASES:
				setPhases(PHASES_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case VisGridPackage.DIESEL_DG__GEN_MODE:
				return GEN_MODE_EDEFAULT == null ? gen_mode != null : !GEN_MODE_EDEFAULT.equals(gen_mode);
			case VisGridPackage.DIESEL_DG__GEN_STATUS:
				return GEN_STATUS_EDEFAULT == null ? gen_status != null : !GEN_STATUS_EDEFAULT.equals(gen_status);
			case VisGridPackage.DIESEL_DG__RATED_KVA:
				return RATED_KVA_EDEFAULT == null ? rated_kVA != null : !RATED_KVA_EDEFAULT.equals(rated_kVA);
			case VisGridPackage.DIESEL_DG__RATED_KV:
				return RATED_KV_EDEFAULT == null ? rated_kV != null : !RATED_KV_EDEFAULT.equals(rated_kV);
			case VisGridPackage.DIESEL_DG__RS:
				return RS_EDEFAULT == null ? rs != null : !RS_EDEFAULT.equals(rs);
			case VisGridPackage.DIESEL_DG__XS:
				return XS_EDEFAULT == null ? xs != null : !XS_EDEFAULT.equals(xs);
			case VisGridPackage.DIESEL_DG__RG:
				return RG_EDEFAULT == null ? rg != null : !RG_EDEFAULT.equals(rg);
			case VisGridPackage.DIESEL_DG__XG:
				return XG_EDEFAULT == null ? xg != null : !XG_EDEFAULT.equals(xg);
			case VisGridPackage.DIESEL_DG__VOLTAGE_A:
				return VOLTAGE_A_EDEFAULT == null ? voltage_A != null : !VOLTAGE_A_EDEFAULT.equals(voltage_A);
			case VisGridPackage.DIESEL_DG__VOLTAGE_B:
				return VOLTAGE_B_EDEFAULT == null ? voltage_B != null : !VOLTAGE_B_EDEFAULT.equals(voltage_B);
			case VisGridPackage.DIESEL_DG__VOLTAGE_C:
				return VOLTAGE_C_EDEFAULT == null ? voltage_C != null : !VOLTAGE_C_EDEFAULT.equals(voltage_C);
			case VisGridPackage.DIESEL_DG__CURRENT_A:
				return CURRENT_A_EDEFAULT == null ? current_A != null : !CURRENT_A_EDEFAULT.equals(current_A);
			case VisGridPackage.DIESEL_DG__CURRENT_B:
				return CURRENT_B_EDEFAULT == null ? current_B != null : !CURRENT_B_EDEFAULT.equals(current_B);
			case VisGridPackage.DIESEL_DG__CURRENT_C:
				return CURRENT_C_EDEFAULT == null ? current_C != null : !CURRENT_C_EDEFAULT.equals(current_C);
			case VisGridPackage.DIESEL_DG__EF_A:
				return EF_A_EDEFAULT == null ? efA != null : !EF_A_EDEFAULT.equals(efA);
			case VisGridPackage.DIESEL_DG__EF_B:
				return EF_B_EDEFAULT == null ? efB != null : !EF_B_EDEFAULT.equals(efB);
			case VisGridPackage.DIESEL_DG__EF_C:
				return EF_C_EDEFAULT == null ? efC != null : !EF_C_EDEFAULT.equals(efC);
			case VisGridPackage.DIESEL_DG__POWER_A:
				return POWER_A_EDEFAULT == null ? power_A != null : !POWER_A_EDEFAULT.equals(power_A);
			case VisGridPackage.DIESEL_DG__POWER_B:
				return POWER_B_EDEFAULT == null ? power_B != null : !POWER_B_EDEFAULT.equals(power_B);
			case VisGridPackage.DIESEL_DG__POWER_C:
				return POWER_C_EDEFAULT == null ? power_C != null : !POWER_C_EDEFAULT.equals(power_C);
			case VisGridPackage.DIESEL_DG__POWER_ASCH:
				return POWER_ASCH_EDEFAULT == null ? power_A_sch != null : !POWER_ASCH_EDEFAULT.equals(power_A_sch);
			case VisGridPackage.DIESEL_DG__POWER_BSCH:
				return POWER_BSCH_EDEFAULT == null ? power_B_sch != null : !POWER_BSCH_EDEFAULT.equals(power_B_sch);
			case VisGridPackage.DIESEL_DG__POWER_CSCH:
				return POWER_CSCH_EDEFAULT == null ? power_C_sch != null : !POWER_CSCH_EDEFAULT.equals(power_C_sch);
			case VisGridPackage.DIESEL_DG__EF_ASCH:
				return EF_ASCH_EDEFAULT == null ? efA_sch != null : !EF_ASCH_EDEFAULT.equals(efA_sch);
			case VisGridPackage.DIESEL_DG__EF_BSCH:
				return EF_BSCH_EDEFAULT == null ? efB_sch != null : !EF_BSCH_EDEFAULT.equals(efB_sch);
			case VisGridPackage.DIESEL_DG__EF_CSCH:
				return EF_CSCH_EDEFAULT == null ? efC_sch != null : !EF_CSCH_EDEFAULT.equals(efC_sch);
			case VisGridPackage.DIESEL_DG__SLACK_BUS:
				return SLACK_BUS_EDEFAULT == null ? slackBus != null : !SLACK_BUS_EDEFAULT.equals(slackBus);
			case VisGridPackage.DIESEL_DG__PHASES:
				return PHASES_EDEFAULT == null ? phases != null : !PHASES_EDEFAULT.equals(phases);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (Gen_mode: ");
		result.append(gen_mode);
		result.append(", Gen_status: ");
		result.append(gen_status);
		result.append(", Rated_kVA: ");
		result.append(rated_kVA);
		result.append(", Rated_kV: ");
		result.append(rated_kV);
		result.append(", Rs: ");
		result.append(rs);
		result.append(", Xs: ");
		result.append(xs);
		result.append(", Rg: ");
		result.append(rg);
		result.append(", Xg: ");
		result.append(xg);
		result.append(", voltage_A: ");
		result.append(voltage_A);
		result.append(", voltage_B: ");
		result.append(voltage_B);
		result.append(", voltage_C: ");
		result.append(voltage_C);
		result.append(", current_A: ");
		result.append(current_A);
		result.append(", current_B: ");
		result.append(current_B);
		result.append(", current_C: ");
		result.append(current_C);
		result.append(", EfA: ");
		result.append(efA);
		result.append(", EfB: ");
		result.append(efB);
		result.append(", EfC: ");
		result.append(efC);
		result.append(", power_A: ");
		result.append(power_A);
		result.append(", power_B: ");
		result.append(power_B);
		result.append(", power_C: ");
		result.append(power_C);
		result.append(", power_A_sch: ");
		result.append(power_A_sch);
		result.append(", power_B_sch: ");
		result.append(power_B_sch);
		result.append(", power_C_sch: ");
		result.append(power_C_sch);
		result.append(", EfA_sch: ");
		result.append(efA_sch);
		result.append(", EfB_sch: ");
		result.append(efB_sch);
		result.append(", EfC_sch: ");
		result.append(efC_sch);
		result.append(", SlackBus: ");
		result.append(slackBus);
		result.append(", phases: ");
		result.append(phases);
		result.append(')');
		return result.toString();
	}

} //Diesel_dgImpl
