	package visGrid.diagram.part;

	/**
 * @generated
 */
public class VisGridDiagramUpdater {
		
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridNodeDescriptor> getSemanticChildren(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.GridEditPart.VISUAL_ID:
	return getGrid_1000SemanticChildren(view);
	}
		return java.util.Collections.emptyList();
}
	
	/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridNodeDescriptor> getGrid_1000SemanticChildren(org.eclipse.gmf.runtime.notation.View view) {
		if (!view.isSetElement()) {
	return java.util.Collections.emptyList();
}
visGrid.Grid modelElement = (visGrid.Grid) view.getElement();
	java.util.LinkedList<visGrid.diagram.part.VisGridNodeDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridNodeDescriptor>();
						for (java.util.Iterator<?> it = modelElement.getNode().iterator(); it.hasNext();) {
		visGrid.Node childElement = (visGrid.Node) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getUnderground_line().iterator(); it.hasNext();) {
		visGrid.Underground_line childElement = (visGrid.Underground_line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMotor().iterator(); it.hasNext();) {
		visGrid.Motor childElement = (visGrid.Motor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLink().iterator(); it.hasNext();) {
		visGrid.Link childElement = (visGrid.Link) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCapacitor().iterator(); it.hasNext();) {
		visGrid.Capacitor childElement = (visGrid.Capacitor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOffice().iterator(); it.hasNext();) {
		visGrid.Office childElement = (visGrid.Office) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOverhead_line_conductor().iterator(); it.hasNext();) {
		visGrid.Overhead_line_conductor childElement = (visGrid.Overhead_line_conductor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getController().iterator(); it.hasNext();) {
		visGrid.Controller childElement = (visGrid.Controller) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getClotheswasher().iterator(); it.hasNext();) {
		visGrid.Clotheswasher childElement = (visGrid.Clotheswasher) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFreezer().iterator(); it.hasNext();) {
		visGrid.Freezer childElement = (visGrid.Freezer) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getWaterheater().iterator(); it.hasNext();) {
		visGrid.Waterheater childElement = (visGrid.Waterheater) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getEnergy_storage().iterator(); it.hasNext();) {
		visGrid.Energy_storage childElement = (visGrid.Energy_storage) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSwitch().iterator(); it.hasNext();) {
		visGrid.Switch childElement = (visGrid.Switch) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMicrowave().iterator(); it.hasNext();) {
		visGrid.Microwave childElement = (visGrid.Microwave) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSeries_reactor().iterator(); it.hasNext();) {
		visGrid.Series_reactor childElement = (visGrid.Series_reactor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getDc_dc_converter().iterator(); it.hasNext();) {
		visGrid.Dc_dc_converter childElement = (visGrid.Dc_dc_converter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getEvcharger().iterator(); it.hasNext();) {
		visGrid.Evcharger childElement = (visGrid.Evcharger) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPlugload().iterator(); it.hasNext();) {
		visGrid.Plugload childElement = (visGrid.Plugload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRecorder().iterator(); it.hasNext();) {
		visGrid.Recorder childElement = (visGrid.Recorder) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMicroturbine().iterator(); it.hasNext();) {
		visGrid.Microturbine childElement = (visGrid.Microturbine) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLoad().iterator(); it.hasNext();) {
		visGrid.Load childElement = (visGrid.Load) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_line().iterator(); it.hasNext();) {
		visGrid.Triplex_line childElement = (visGrid.Triplex_line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSubstation().iterator(); it.hasNext();) {
		visGrid.Substation childElement = (visGrid.Substation) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCollector().iterator(); it.hasNext();) {
		visGrid.Collector childElement = (visGrid.Collector) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRegulator().iterator(); it.hasNext();) {
		visGrid.Regulator childElement = (visGrid.Regulator) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getInverter().iterator(); it.hasNext();) {
		visGrid.Inverter childElement = (visGrid.Inverter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLine().iterator(); it.hasNext();) {
		visGrid.Line childElement = (visGrid.Line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getShaper().iterator(); it.hasNext();) {
		visGrid.Shaper childElement = (visGrid.Shaper) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_line_configuration().iterator(); it.hasNext();) {
		visGrid.Triplex_line_configuration childElement = (visGrid.Triplex_line_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getController2().iterator(); it.hasNext();) {
		visGrid.Controller2 childElement = (visGrid.Controller2) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPlc().iterator(); it.hasNext();) {
		visGrid.Plc childElement = (visGrid.Plc) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTransformer_configuration().iterator(); it.hasNext();) {
		visGrid.Transformer_configuration childElement = (visGrid.Transformer_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRectifier().iterator(); it.hasNext();) {
		visGrid.Rectifier childElement = (visGrid.Rectifier) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPqload().iterator(); it.hasNext();) {
		visGrid.Pqload childElement = (visGrid.Pqload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						{ visGrid.Diesel_dg childElement = modelElement.getDiesel_dg();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
}
	}
						for (java.util.Iterator<?> it = modelElement.getWeather().iterator(); it.hasNext();) {
		visGrid.Weather childElement = (visGrid.Weather) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getVolt_var_control().iterator(); it.hasNext();) {
		visGrid.Volt_var_control childElement = (visGrid.Volt_var_control) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getHouse().iterator(); it.hasNext();) {
		visGrid.House childElement = (visGrid.House) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRefrigerator().iterator(); it.hasNext();) {
		visGrid.Refrigerator childElement = (visGrid.Refrigerator) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_line_conductor().iterator(); it.hasNext();) {
		visGrid.Triplex_line_conductor childElement = (visGrid.Triplex_line_conductor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getUnderground_line_conductor().iterator(); it.hasNext();) {
		visGrid.Underground_line_conductor childElement = (visGrid.Underground_line_conductor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLine_configuration().iterator(); it.hasNext();) {
		visGrid.Line_configuration childElement = (visGrid.Line_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOverhead_line().iterator(); it.hasNext();) {
		visGrid.Overhead_line childElement = (visGrid.Overhead_line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPower_electronics().iterator(); it.hasNext();) {
		visGrid.Power_electronics childElement = (visGrid.Power_electronics) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getZIPload().iterator(); it.hasNext();) {
		visGrid.ZIPload childElement = (visGrid.ZIPload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCapbank().iterator(); it.hasNext();) {
		visGrid.Capbank childElement = (visGrid.Capbank) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getConnection().iterator(); it.hasNext();) {
		visGrid.Connections childElement = (visGrid.Connections) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ConnectionsEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRestoration().iterator(); it.hasNext();) {
		visGrid.Restoration childElement = (visGrid.Restoration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLights().iterator(); it.hasNext();) {
		visGrid.Lights childElement = (visGrid.Lights) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getAuction().iterator(); it.hasNext();) {
		visGrid.Auction childElement = (visGrid.Auction) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLine_spacing().iterator(); it.hasNext();) {
		visGrid.Line_spacing childElement = (visGrid.Line_spacing) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRegulator_configuration().iterator(); it.hasNext();) {
		visGrid.Regulator_configuration childElement = (visGrid.Regulator_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getBattery().iterator(); it.hasNext();) {
		visGrid.Battery childElement = (visGrid.Battery) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRange().iterator(); it.hasNext();) {
		visGrid.Range childElement = (visGrid.Range) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSolar().iterator(); it.hasNext();) {
		visGrid.Solar childElement = (visGrid.Solar) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTransformer().iterator(); it.hasNext();) {
		visGrid.Transformer childElement = (visGrid.Transformer) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getClimate().iterator(); it.hasNext();) {
		visGrid.Climate childElement = (visGrid.Climate) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFault_check().iterator(); it.hasNext();) {
		visGrid.Fault_check childElement = (visGrid.Fault_check) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPlayer().iterator(); it.hasNext();) {
		visGrid.Player childElement = (visGrid.Player) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getDishwasher().iterator(); it.hasNext();) {
		visGrid.Dishwasher childElement = (visGrid.Dishwasher) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_node().iterator(); it.hasNext();) {
		visGrid.Triplex_node childElement = (visGrid.Triplex_node) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMultizone().iterator(); it.hasNext();) {
		visGrid.Multizone childElement = (visGrid.Multizone) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCsv_reader().iterator(); it.hasNext();) {
		visGrid.Csv_reader childElement = (visGrid.Csv_reader) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getDryer().iterator(); it.hasNext();) {
		visGrid.Dryer childElement = (visGrid.Dryer) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFuse().iterator(); it.hasNext();) {
		visGrid.Fuse childElement = (visGrid.Fuse) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOccupantload().iterator(); it.hasNext();) {
		visGrid.Occupantload childElement = (visGrid.Occupantload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_meter().iterator(); it.hasNext();) {
		visGrid.Triplex_meter childElement = (visGrid.Triplex_meter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getGenerator().iterator(); it.hasNext();) {
		visGrid.Generator childElement = (visGrid.Generator) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFrequency_gen().iterator(); it.hasNext();) {
		visGrid.Frequency_gen childElement = (visGrid.Frequency_gen) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getHistogram().iterator(); it.hasNext();) {
		visGrid.Histogram childElement = (visGrid.Histogram) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getComm().iterator(); it.hasNext();) {
		visGrid.Comm childElement = (visGrid.Comm) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRelay().iterator(); it.hasNext();) {
		visGrid.Relay childElement = (visGrid.Relay) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getHouse_a().iterator(); it.hasNext();) {
		visGrid.House_a childElement = (visGrid.House_a) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getStubauction().iterator(); it.hasNext();) {
		visGrid.Stubauction childElement = (visGrid.Stubauction) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMeter().iterator(); it.hasNext();) {
		visGrid.Meter childElement = (visGrid.Meter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getResidential_enduse().iterator(); it.hasNext();) {
		visGrid.Residential_enduse childElement = (visGrid.Residential_enduse) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getWindturb_dg().iterator(); it.hasNext();) {
		visGrid.Windturb_dg childElement = (visGrid.Windturb_dg) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getBilldump().iterator(); it.hasNext();) {
		visGrid.Billdump childElement = (visGrid.Billdump) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getVoltdump().iterator(); it.hasNext();) {
		visGrid.Voltdump childElement = (visGrid.Voltdump) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
			return result;
	}
	
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.GridEditPart.VISUAL_ID:
	return getGrid_1000ContainedLinks(view);
case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:
	return getNode_2001ContainedLinks(view);
case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:
	return getUnderground_line_2002ContainedLinks(view);
case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:
	return getMotor_2003ContainedLinks(view);
case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:
	return getLink_2004ContainedLinks(view);
case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:
	return getCapacitor_2005ContainedLinks(view);
case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:
	return getOffice_2006ContainedLinks(view);
case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:
	return getOverhead_line_conductor_2007ContainedLinks(view);
case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:
	return getController_2008ContainedLinks(view);
case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:
	return getClotheswasher_2009ContainedLinks(view);
case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:
	return getFreezer_2010ContainedLinks(view);
case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:
	return getWaterheater_2011ContainedLinks(view);
case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:
	return getEnergy_storage_2012ContainedLinks(view);
case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:
	return getSwitch_2013ContainedLinks(view);
case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:
	return getMicrowave_2014ContainedLinks(view);
case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:
	return getSeries_reactor_2015ContainedLinks(view);
case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:
	return getDc_dc_converter_2016ContainedLinks(view);
case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:
	return getEvcharger_2017ContainedLinks(view);
case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:
	return getPlugload_2018ContainedLinks(view);
case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:
	return getRecorder_2019ContainedLinks(view);
case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:
	return getMicroturbine_2020ContainedLinks(view);
case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:
	return getLoad_2021ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:
	return getTriplex_line_2022ContainedLinks(view);
case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:
	return getSubstation_2023ContainedLinks(view);
case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
	return getCollector_2024ContainedLinks(view);
case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:
	return getRegulator_2025ContainedLinks(view);
case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:
	return getInverter_2026ContainedLinks(view);
case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:
	return getLine_2027ContainedLinks(view);
case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:
	return getShaper_2028ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:
	return getTriplex_line_configuration_2029ContainedLinks(view);
case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:
	return getController2_2030ContainedLinks(view);
case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:
	return getPlc_2031ContainedLinks(view);
case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:
	return getTransformer_configuration_2032ContainedLinks(view);
case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:
	return getRectifier_2033ContainedLinks(view);
case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:
	return getPqload_2034ContainedLinks(view);
case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:
	return getDiesel_dg_2035ContainedLinks(view);
case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:
	return getWeather_2036ContainedLinks(view);
case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:
	return getVolt_var_control_2037ContainedLinks(view);
case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:
	return getHouse_2038ContainedLinks(view);
case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:
	return getRefrigerator_2039ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:
	return getTriplex_line_conductor_2040ContainedLinks(view);
case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:
	return getUnderground_line_conductor_2041ContainedLinks(view);
case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:
	return getLine_configuration_2042ContainedLinks(view);
case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:
	return getOverhead_line_2043ContainedLinks(view);
case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:
	return getPower_electronics_2044ContainedLinks(view);
case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:
	return getZIPload_2045ContainedLinks(view);
case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:
	return getCapbank_2046ContainedLinks(view);
case visGrid.diagram.edit.parts.ConnectionsEditPart.VISUAL_ID:
	return getConnections_2047ContainedLinks(view);
case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:
	return getRestoration_2048ContainedLinks(view);
case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:
	return getLights_2049ContainedLinks(view);
case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:
	return getAuction_2050ContainedLinks(view);
case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:
	return getLine_spacing_2051ContainedLinks(view);
case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:
	return getRegulator_configuration_2052ContainedLinks(view);
case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:
	return getBattery_2053ContainedLinks(view);
case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:
	return getRange_2054ContainedLinks(view);
case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:
	return getSolar_2055ContainedLinks(view);
case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:
	return getTransformer_2056ContainedLinks(view);
case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:
	return getClimate_2057ContainedLinks(view);
case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:
	return getFault_check_2058ContainedLinks(view);
case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:
	return getPlayer_2059ContainedLinks(view);
case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:
	return getDishwasher_2060ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:
	return getTriplex_node_2061ContainedLinks(view);
case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:
	return getMultizone_2062ContainedLinks(view);
case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:
	return getCsv_reader_2063ContainedLinks(view);
case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:
	return getDryer_2064ContainedLinks(view);
case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:
	return getFuse_2065ContainedLinks(view);
case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:
	return getOccupantload_2066ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:
	return getTriplex_meter_2067ContainedLinks(view);
case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:
	return getGenerator_2068ContainedLinks(view);
case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:
	return getFrequency_gen_2069ContainedLinks(view);
case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:
	return getHistogram_2070ContainedLinks(view);
case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:
	return getComm_2071ContainedLinks(view);
case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:
	return getRelay_2072ContainedLinks(view);
case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:
	return getHouse_a_2073ContainedLinks(view);
case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:
	return getStubauction_2074ContainedLinks(view);
case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:
	return getMeter_2075ContainedLinks(view);
case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:
	return getResidential_enduse_2076ContainedLinks(view);
case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:
	return getWindturb_dg_2077ContainedLinks(view);
case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:
	return getBilldump_2078ContainedLinks(view);
case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:
	return getVoltdump_2079ContainedLinks(view);
	}
		return java.util.Collections.emptyList();
}
	
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:
	return getNode_2001IncomingLinks(view);
case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:
	return getUnderground_line_2002IncomingLinks(view);
case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:
	return getMotor_2003IncomingLinks(view);
case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:
	return getLink_2004IncomingLinks(view);
case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:
	return getCapacitor_2005IncomingLinks(view);
case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:
	return getOffice_2006IncomingLinks(view);
case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:
	return getOverhead_line_conductor_2007IncomingLinks(view);
case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:
	return getController_2008IncomingLinks(view);
case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:
	return getClotheswasher_2009IncomingLinks(view);
case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:
	return getFreezer_2010IncomingLinks(view);
case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:
	return getWaterheater_2011IncomingLinks(view);
case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:
	return getEnergy_storage_2012IncomingLinks(view);
case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:
	return getSwitch_2013IncomingLinks(view);
case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:
	return getMicrowave_2014IncomingLinks(view);
case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:
	return getSeries_reactor_2015IncomingLinks(view);
case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:
	return getDc_dc_converter_2016IncomingLinks(view);
case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:
	return getEvcharger_2017IncomingLinks(view);
case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:
	return getPlugload_2018IncomingLinks(view);
case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:
	return getRecorder_2019IncomingLinks(view);
case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:
	return getMicroturbine_2020IncomingLinks(view);
case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:
	return getLoad_2021IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:
	return getTriplex_line_2022IncomingLinks(view);
case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:
	return getSubstation_2023IncomingLinks(view);
case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
	return getCollector_2024IncomingLinks(view);
case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:
	return getRegulator_2025IncomingLinks(view);
case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:
	return getInverter_2026IncomingLinks(view);
case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:
	return getLine_2027IncomingLinks(view);
case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:
	return getShaper_2028IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:
	return getTriplex_line_configuration_2029IncomingLinks(view);
case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:
	return getController2_2030IncomingLinks(view);
case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:
	return getPlc_2031IncomingLinks(view);
case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:
	return getTransformer_configuration_2032IncomingLinks(view);
case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:
	return getRectifier_2033IncomingLinks(view);
case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:
	return getPqload_2034IncomingLinks(view);
case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:
	return getDiesel_dg_2035IncomingLinks(view);
case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:
	return getWeather_2036IncomingLinks(view);
case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:
	return getVolt_var_control_2037IncomingLinks(view);
case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:
	return getHouse_2038IncomingLinks(view);
case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:
	return getRefrigerator_2039IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:
	return getTriplex_line_conductor_2040IncomingLinks(view);
case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:
	return getUnderground_line_conductor_2041IncomingLinks(view);
case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:
	return getLine_configuration_2042IncomingLinks(view);
case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:
	return getOverhead_line_2043IncomingLinks(view);
case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:
	return getPower_electronics_2044IncomingLinks(view);
case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:
	return getZIPload_2045IncomingLinks(view);
case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:
	return getCapbank_2046IncomingLinks(view);
case visGrid.diagram.edit.parts.ConnectionsEditPart.VISUAL_ID:
	return getConnections_2047IncomingLinks(view);
case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:
	return getRestoration_2048IncomingLinks(view);
case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:
	return getLights_2049IncomingLinks(view);
case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:
	return getAuction_2050IncomingLinks(view);
case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:
	return getLine_spacing_2051IncomingLinks(view);
case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:
	return getRegulator_configuration_2052IncomingLinks(view);
case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:
	return getBattery_2053IncomingLinks(view);
case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:
	return getRange_2054IncomingLinks(view);
case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:
	return getSolar_2055IncomingLinks(view);
case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:
	return getTransformer_2056IncomingLinks(view);
case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:
	return getClimate_2057IncomingLinks(view);
case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:
	return getFault_check_2058IncomingLinks(view);
case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:
	return getPlayer_2059IncomingLinks(view);
case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:
	return getDishwasher_2060IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:
	return getTriplex_node_2061IncomingLinks(view);
case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:
	return getMultizone_2062IncomingLinks(view);
case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:
	return getCsv_reader_2063IncomingLinks(view);
case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:
	return getDryer_2064IncomingLinks(view);
case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:
	return getFuse_2065IncomingLinks(view);
case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:
	return getOccupantload_2066IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:
	return getTriplex_meter_2067IncomingLinks(view);
case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:
	return getGenerator_2068IncomingLinks(view);
case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:
	return getFrequency_gen_2069IncomingLinks(view);
case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:
	return getHistogram_2070IncomingLinks(view);
case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:
	return getComm_2071IncomingLinks(view);
case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:
	return getRelay_2072IncomingLinks(view);
case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:
	return getHouse_a_2073IncomingLinks(view);
case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:
	return getStubauction_2074IncomingLinks(view);
case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:
	return getMeter_2075IncomingLinks(view);
case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:
	return getResidential_enduse_2076IncomingLinks(view);
case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:
	return getWindturb_dg_2077IncomingLinks(view);
case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:
	return getBilldump_2078IncomingLinks(view);
case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:
	return getVoltdump_2079IncomingLinks(view);
	}
		return java.util.Collections.emptyList();
}
	
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:
	return getNode_2001OutgoingLinks(view);
case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:
	return getUnderground_line_2002OutgoingLinks(view);
case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:
	return getMotor_2003OutgoingLinks(view);
case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:
	return getLink_2004OutgoingLinks(view);
case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:
	return getCapacitor_2005OutgoingLinks(view);
case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:
	return getOffice_2006OutgoingLinks(view);
case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:
	return getOverhead_line_conductor_2007OutgoingLinks(view);
case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:
	return getController_2008OutgoingLinks(view);
case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:
	return getClotheswasher_2009OutgoingLinks(view);
case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:
	return getFreezer_2010OutgoingLinks(view);
case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:
	return getWaterheater_2011OutgoingLinks(view);
case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:
	return getEnergy_storage_2012OutgoingLinks(view);
case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:
	return getSwitch_2013OutgoingLinks(view);
case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:
	return getMicrowave_2014OutgoingLinks(view);
case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:
	return getSeries_reactor_2015OutgoingLinks(view);
case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:
	return getDc_dc_converter_2016OutgoingLinks(view);
case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:
	return getEvcharger_2017OutgoingLinks(view);
case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:
	return getPlugload_2018OutgoingLinks(view);
case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:
	return getRecorder_2019OutgoingLinks(view);
case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:
	return getMicroturbine_2020OutgoingLinks(view);
case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:
	return getLoad_2021OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:
	return getTriplex_line_2022OutgoingLinks(view);
case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:
	return getSubstation_2023OutgoingLinks(view);
case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
	return getCollector_2024OutgoingLinks(view);
case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:
	return getRegulator_2025OutgoingLinks(view);
case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:
	return getInverter_2026OutgoingLinks(view);
case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:
	return getLine_2027OutgoingLinks(view);
case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:
	return getShaper_2028OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:
	return getTriplex_line_configuration_2029OutgoingLinks(view);
case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:
	return getController2_2030OutgoingLinks(view);
case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:
	return getPlc_2031OutgoingLinks(view);
case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:
	return getTransformer_configuration_2032OutgoingLinks(view);
case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:
	return getRectifier_2033OutgoingLinks(view);
case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:
	return getPqload_2034OutgoingLinks(view);
case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:
	return getDiesel_dg_2035OutgoingLinks(view);
case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:
	return getWeather_2036OutgoingLinks(view);
case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:
	return getVolt_var_control_2037OutgoingLinks(view);
case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:
	return getHouse_2038OutgoingLinks(view);
case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:
	return getRefrigerator_2039OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:
	return getTriplex_line_conductor_2040OutgoingLinks(view);
case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:
	return getUnderground_line_conductor_2041OutgoingLinks(view);
case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:
	return getLine_configuration_2042OutgoingLinks(view);
case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:
	return getOverhead_line_2043OutgoingLinks(view);
case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:
	return getPower_electronics_2044OutgoingLinks(view);
case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:
	return getZIPload_2045OutgoingLinks(view);
case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:
	return getCapbank_2046OutgoingLinks(view);
case visGrid.diagram.edit.parts.ConnectionsEditPart.VISUAL_ID:
	return getConnections_2047OutgoingLinks(view);
case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:
	return getRestoration_2048OutgoingLinks(view);
case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:
	return getLights_2049OutgoingLinks(view);
case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:
	return getAuction_2050OutgoingLinks(view);
case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:
	return getLine_spacing_2051OutgoingLinks(view);
case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:
	return getRegulator_configuration_2052OutgoingLinks(view);
case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:
	return getBattery_2053OutgoingLinks(view);
case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:
	return getRange_2054OutgoingLinks(view);
case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:
	return getSolar_2055OutgoingLinks(view);
case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:
	return getTransformer_2056OutgoingLinks(view);
case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:
	return getClimate_2057OutgoingLinks(view);
case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:
	return getFault_check_2058OutgoingLinks(view);
case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:
	return getPlayer_2059OutgoingLinks(view);
case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:
	return getDishwasher_2060OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:
	return getTriplex_node_2061OutgoingLinks(view);
case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:
	return getMultizone_2062OutgoingLinks(view);
case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:
	return getCsv_reader_2063OutgoingLinks(view);
case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:
	return getDryer_2064OutgoingLinks(view);
case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:
	return getFuse_2065OutgoingLinks(view);
case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:
	return getOccupantload_2066OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:
	return getTriplex_meter_2067OutgoingLinks(view);
case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:
	return getGenerator_2068OutgoingLinks(view);
case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:
	return getFrequency_gen_2069OutgoingLinks(view);
case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:
	return getHistogram_2070OutgoingLinks(view);
case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:
	return getComm_2071OutgoingLinks(view);
case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:
	return getRelay_2072OutgoingLinks(view);
case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:
	return getHouse_a_2073OutgoingLinks(view);
case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:
	return getStubauction_2074OutgoingLinks(view);
case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:
	return getMeter_2075OutgoingLinks(view);
case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:
	return getResidential_enduse_2076OutgoingLinks(view);
case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:
	return getWindturb_dg_2077OutgoingLinks(view);
case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:
	return getBilldump_2078OutgoingLinks(view);
case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:
	return getVoltdump_2079OutgoingLinks(view);
	}
		return java.util.Collections.emptyList();
}
		
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGrid_1000ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getNode_2001ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_2002ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMotor_2003ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLink_2004ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapacitor_2005ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOffice_2006ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_conductor_2007ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController_2008ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClotheswasher_2009ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFreezer_2010ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWaterheater_2011ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEnergy_storage_2012ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSwitch_2013ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicrowave_2014ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSeries_reactor_2015ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDc_dc_converter_2016ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEvcharger_2017ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlugload_2018ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRecorder_2019ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicroturbine_2020ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLoad_2021ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_2022ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSubstation_2023ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCollector_2024ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_2025ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getInverter_2026ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_2027ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getShaper_2028ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_configuration_2029ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController2_2030ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlc_2031ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_configuration_2032ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRectifier_2033ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPqload_2034ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDiesel_dg_2035ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWeather_2036ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVolt_var_control_2037ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_2038ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRefrigerator_2039ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_conductor_2040ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_conductor_2041ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_configuration_2042ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_2043ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPower_electronics_2044ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getZIPload_2045ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapbank_2046ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getConnections_2047ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Connections modelElement = (visGrid.Connections) view.getElement();
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Microwave_4001(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Climate_4002(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_4003(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_meter_4004(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Link_4005(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Clotheswasher_4006(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_ZIPload_4007(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Overhead_line_conductor_4008(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Line_spacing_4009(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Inverter_4010(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Transformer_configuration_4011(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Node_4012(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Refrigerator_4013(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Plc_4014(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Controller2_4015(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_configuration_4016(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Transformer_4017(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Rectifier_4018(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Volt_var_control_4019(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Underground_line_conductor_4020(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_House_a_4021(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Lights_4022(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Waterheater_4023(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Shaper_4024(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Stubauction_4025(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Csv_reader_4026(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Diesel_dg_4027(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Controller_4028(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Line_configuration_4029(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Pqload_4030(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Regulator_4031(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Dc_dc_converter_4032(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Occupantload_4033(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Fuse_4034(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Capacitor_4035(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Battery_4036(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Billdump_4037(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Line_4038(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Meter_4039(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Overhead_line_4040(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Relay_4041(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Recorder_4042(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Plugload_4043(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Windturb_dg_4044(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Office_4045(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Histogram_4046(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Collector_4047(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Auction_4048(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Evcharger_4049(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Freezer_4050(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Multizone_4051(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Load_4052(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Underground_line_4053(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Substation_4054(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Generator_4055(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Range_4056(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Player_4057(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Power_electronics_4058(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Fault_check_4059(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Energy_storage_4060(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Dryer_4061(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Series_reactor_4062(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Comm_4063(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Capbank_4064(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Frequency_gen_4065(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Motor_4066(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Microturbine_4067(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Weather_4068(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Regulator_configuration_4069(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Switch_4070(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Residential_enduse_4071(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Solar_4072(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_House_4073(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Voltdump_4074(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Dishwasher_4075(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_conductor_4076(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Restoration_4077(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_node_4078(modelElement));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRestoration_2048ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLights_2049ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getAuction_2050ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_spacing_2051ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_configuration_2052ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBattery_2053ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRange_2054ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSolar_2055ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_2056ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClimate_2057ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFault_check_2058ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlayer_2059ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDishwasher_2060ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_node_2061ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMultizone_2062ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCsv_reader_2063ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDryer_2064ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFuse_2065ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOccupantload_2066ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_meter_2067ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGenerator_2068ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFrequency_gen_2069ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHistogram_2070ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getComm_2071ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRelay_2072ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_a_2073ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getStubauction_2074ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMeter_2075ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getResidential_enduse_2076ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWindturb_dg_2077ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBilldump_2078ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVoltdump_2079ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
		
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getNode_2001IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Node modelElement = (visGrid.Node) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Node_4012(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_2002IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Underground_line modelElement = (visGrid.Underground_line) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Underground_line_4053(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMotor_2003IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Motor modelElement = (visGrid.Motor) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Motor_4066(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLink_2004IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Link modelElement = (visGrid.Link) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Link_4005(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapacitor_2005IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Capacitor modelElement = (visGrid.Capacitor) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Capacitor_4035(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOffice_2006IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Office modelElement = (visGrid.Office) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Office_4045(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_conductor_2007IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Overhead_line_conductor modelElement = (visGrid.Overhead_line_conductor) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Overhead_line_conductor_4008(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController_2008IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Controller modelElement = (visGrid.Controller) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Controller_4028(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClotheswasher_2009IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Clotheswasher modelElement = (visGrid.Clotheswasher) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Clotheswasher_4006(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFreezer_2010IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Freezer modelElement = (visGrid.Freezer) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Freezer_4050(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWaterheater_2011IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Waterheater modelElement = (visGrid.Waterheater) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Waterheater_4023(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEnergy_storage_2012IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Energy_storage modelElement = (visGrid.Energy_storage) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Energy_storage_4060(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSwitch_2013IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Switch modelElement = (visGrid.Switch) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Switch_4070(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicrowave_2014IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Microwave modelElement = (visGrid.Microwave) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Microwave_4001(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSeries_reactor_2015IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Series_reactor modelElement = (visGrid.Series_reactor) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Series_reactor_4062(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDc_dc_converter_2016IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Dc_dc_converter modelElement = (visGrid.Dc_dc_converter) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Dc_dc_converter_4032(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEvcharger_2017IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Evcharger modelElement = (visGrid.Evcharger) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Evcharger_4049(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlugload_2018IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Plugload modelElement = (visGrid.Plugload) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Plugload_4043(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRecorder_2019IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Recorder modelElement = (visGrid.Recorder) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Recorder_4042(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicroturbine_2020IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Microturbine modelElement = (visGrid.Microturbine) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Microturbine_4067(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLoad_2021IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Load modelElement = (visGrid.Load) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Load_4052(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_2022IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Triplex_line modelElement = (visGrid.Triplex_line) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Triplex_line_4003(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSubstation_2023IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Substation modelElement = (visGrid.Substation) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Substation_4054(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCollector_2024IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Collector modelElement = (visGrid.Collector) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Collector_4047(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_2025IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Regulator modelElement = (visGrid.Regulator) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Regulator_4031(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getInverter_2026IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Inverter modelElement = (visGrid.Inverter) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Inverter_4010(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_2027IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Line modelElement = (visGrid.Line) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Line_4038(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getShaper_2028IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Shaper modelElement = (visGrid.Shaper) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Shaper_4024(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_configuration_2029IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Triplex_line_configuration modelElement = (visGrid.Triplex_line_configuration) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Triplex_line_configuration_4016(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController2_2030IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Controller2 modelElement = (visGrid.Controller2) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Controller2_4015(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlc_2031IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Plc modelElement = (visGrid.Plc) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Plc_4014(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_configuration_2032IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Transformer_configuration modelElement = (visGrid.Transformer_configuration) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Transformer_configuration_4011(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRectifier_2033IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Rectifier modelElement = (visGrid.Rectifier) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Rectifier_4018(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPqload_2034IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Pqload modelElement = (visGrid.Pqload) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Pqload_4030(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDiesel_dg_2035IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Diesel_dg modelElement = (visGrid.Diesel_dg) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Diesel_dg_4027(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWeather_2036IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Weather modelElement = (visGrid.Weather) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Weather_4068(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVolt_var_control_2037IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Volt_var_control modelElement = (visGrid.Volt_var_control) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Volt_var_control_4019(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_2038IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.House modelElement = (visGrid.House) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_House_4073(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRefrigerator_2039IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Refrigerator modelElement = (visGrid.Refrigerator) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Refrigerator_4013(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_conductor_2040IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Triplex_line_conductor modelElement = (visGrid.Triplex_line_conductor) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Triplex_line_conductor_4076(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_conductor_2041IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Underground_line_conductor modelElement = (visGrid.Underground_line_conductor) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Underground_line_conductor_4020(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_configuration_2042IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Line_configuration modelElement = (visGrid.Line_configuration) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Line_configuration_4029(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_2043IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Overhead_line modelElement = (visGrid.Overhead_line) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Overhead_line_4040(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPower_electronics_2044IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Power_electronics modelElement = (visGrid.Power_electronics) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Power_electronics_4058(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getZIPload_2045IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.ZIPload modelElement = (visGrid.ZIPload) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_ZIPload_4007(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapbank_2046IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Capbank modelElement = (visGrid.Capbank) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Capbank_4064(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getConnections_2047IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRestoration_2048IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Restoration modelElement = (visGrid.Restoration) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Restoration_4077(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLights_2049IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Lights modelElement = (visGrid.Lights) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Lights_4022(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getAuction_2050IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Auction modelElement = (visGrid.Auction) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Auction_4048(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_spacing_2051IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Line_spacing modelElement = (visGrid.Line_spacing) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Line_spacing_4009(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_configuration_2052IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Regulator_configuration modelElement = (visGrid.Regulator_configuration) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Regulator_configuration_4069(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBattery_2053IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Battery modelElement = (visGrid.Battery) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Battery_4036(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRange_2054IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Range modelElement = (visGrid.Range) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Range_4056(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSolar_2055IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Solar modelElement = (visGrid.Solar) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Solar_4072(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_2056IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Transformer modelElement = (visGrid.Transformer) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Transformer_4017(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClimate_2057IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Climate modelElement = (visGrid.Climate) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Climate_4002(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFault_check_2058IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Fault_check modelElement = (visGrid.Fault_check) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Fault_check_4059(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlayer_2059IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Player modelElement = (visGrid.Player) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Player_4057(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDishwasher_2060IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Dishwasher modelElement = (visGrid.Dishwasher) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Dishwasher_4075(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_node_2061IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Triplex_node modelElement = (visGrid.Triplex_node) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Triplex_node_4078(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMultizone_2062IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Multizone modelElement = (visGrid.Multizone) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Multizone_4051(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCsv_reader_2063IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Csv_reader modelElement = (visGrid.Csv_reader) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Csv_reader_4026(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDryer_2064IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Dryer modelElement = (visGrid.Dryer) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Dryer_4061(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFuse_2065IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Fuse modelElement = (visGrid.Fuse) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Fuse_4034(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOccupantload_2066IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Occupantload modelElement = (visGrid.Occupantload) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Occupantload_4033(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_meter_2067IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Triplex_meter modelElement = (visGrid.Triplex_meter) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Triplex_meter_4004(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGenerator_2068IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Generator modelElement = (visGrid.Generator) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Generator_4055(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFrequency_gen_2069IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Frequency_gen modelElement = (visGrid.Frequency_gen) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Frequency_gen_4065(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHistogram_2070IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Histogram modelElement = (visGrid.Histogram) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Histogram_4046(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getComm_2071IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Comm modelElement = (visGrid.Comm) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Comm_4063(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRelay_2072IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Relay modelElement = (visGrid.Relay) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Relay_4041(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_a_2073IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.House_a modelElement = (visGrid.House_a) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_House_a_4021(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getStubauction_2074IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Stubauction modelElement = (visGrid.Stubauction) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Stubauction_4025(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMeter_2075IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Meter modelElement = (visGrid.Meter) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Meter_4039(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getResidential_enduse_2076IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Residential_enduse modelElement = (visGrid.Residential_enduse) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Residential_enduse_4071(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWindturb_dg_2077IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Windturb_dg modelElement = (visGrid.Windturb_dg) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Windturb_dg_4044(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBilldump_2078IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Billdump modelElement = (visGrid.Billdump) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Billdump_4037(modelElement, crossReferences));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVoltdump_2079IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Voltdump modelElement = (visGrid.Voltdump) view.getElement();
	java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences = org.eclipse.emf.ecore.util.EcoreUtil.CrossReferencer.find(view.eResource().getResourceSet().getResources());
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getIncomingFeatureModelFacetLinks_Connections_Voltdump_4074(modelElement, crossReferences));	
	return result;
}
		
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getNode_2001OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_2002OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMotor_2003OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLink_2004OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapacitor_2005OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOffice_2006OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_conductor_2007OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController_2008OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClotheswasher_2009OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFreezer_2010OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWaterheater_2011OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEnergy_storage_2012OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSwitch_2013OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicrowave_2014OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSeries_reactor_2015OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDc_dc_converter_2016OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEvcharger_2017OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlugload_2018OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRecorder_2019OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicroturbine_2020OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLoad_2021OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_2022OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSubstation_2023OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCollector_2024OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_2025OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getInverter_2026OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_2027OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getShaper_2028OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_configuration_2029OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController2_2030OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlc_2031OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_configuration_2032OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRectifier_2033OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPqload_2034OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDiesel_dg_2035OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWeather_2036OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVolt_var_control_2037OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_2038OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRefrigerator_2039OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_conductor_2040OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_conductor_2041OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_configuration_2042OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_2043OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPower_electronics_2044OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getZIPload_2045OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapbank_2046OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getConnections_2047OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	visGrid.Connections modelElement = (visGrid.Connections) view.getElement();
		java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Microwave_4001(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Climate_4002(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_4003(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_meter_4004(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Link_4005(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Clotheswasher_4006(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_ZIPload_4007(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Overhead_line_conductor_4008(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Line_spacing_4009(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Inverter_4010(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Transformer_configuration_4011(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Node_4012(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Refrigerator_4013(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Plc_4014(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Controller2_4015(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_configuration_4016(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Transformer_4017(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Rectifier_4018(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Volt_var_control_4019(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Underground_line_conductor_4020(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_House_a_4021(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Lights_4022(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Waterheater_4023(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Shaper_4024(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Stubauction_4025(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Csv_reader_4026(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Diesel_dg_4027(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Controller_4028(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Line_configuration_4029(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Pqload_4030(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Regulator_4031(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Dc_dc_converter_4032(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Occupantload_4033(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Fuse_4034(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Capacitor_4035(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Battery_4036(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Billdump_4037(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Line_4038(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Meter_4039(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Overhead_line_4040(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Relay_4041(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Recorder_4042(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Plugload_4043(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Windturb_dg_4044(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Office_4045(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Histogram_4046(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Collector_4047(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Auction_4048(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Evcharger_4049(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Freezer_4050(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Multizone_4051(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Load_4052(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Underground_line_4053(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Substation_4054(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Generator_4055(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Range_4056(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Player_4057(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Power_electronics_4058(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Fault_check_4059(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Energy_storage_4060(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Dryer_4061(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Series_reactor_4062(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Comm_4063(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Capbank_4064(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Frequency_gen_4065(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Motor_4066(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Microturbine_4067(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Weather_4068(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Regulator_configuration_4069(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Switch_4070(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Residential_enduse_4071(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Solar_4072(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_House_4073(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Voltdump_4074(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Dishwasher_4075(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_conductor_4076(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Restoration_4077(modelElement));	
	result.addAll(getOutgoingFeatureModelFacetLinks_Connections_Triplex_node_4078(modelElement));	
	return result;
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRestoration_2048OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLights_2049OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getAuction_2050OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_spacing_2051OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_configuration_2052OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBattery_2053OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRange_2054OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSolar_2055OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_2056OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClimate_2057OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFault_check_2058OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlayer_2059OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDishwasher_2060OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_node_2061OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMultizone_2062OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCsv_reader_2063OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDryer_2064OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFuse_2065OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOccupantload_2066OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_meter_2067OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGenerator_2068OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFrequency_gen_2069OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHistogram_2070OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getComm_2071OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRelay_2072OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_a_2073OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getStubauction_2074OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMeter_2075OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getResidential_enduse_2076OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWindturb_dg_2077OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBilldump_2078OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVoltdump_2079OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
		
/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Microwave_4001(visGrid.Microwave target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Microwave()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicrowave_4001, visGrid.diagram.edit.parts.ConnectionsMicrowaveEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Climate_4002(visGrid.Climate target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Climate()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsClimate_4002, visGrid.diagram.edit.parts.ConnectionsClimateEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Triplex_line_4003(visGrid.Triplex_line target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Triplex_line()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_4003, visGrid.diagram.edit.parts.ConnectionsTriplex_lineEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Triplex_meter_4004(visGrid.Triplex_meter target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Triplex_meter()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_meter_4004, visGrid.diagram.edit.parts.ConnectionsTriplex_meterEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Link_4005(visGrid.Link target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Link()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLink_4005, visGrid.diagram.edit.parts.ConnectionsLinkEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Clotheswasher_4006(visGrid.Clotheswasher target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Clotheswasher()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsClotheswasher_4006, visGrid.diagram.edit.parts.ConnectionsClotheswasherEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_ZIPload_4007(visGrid.ZIPload target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_ZIPload()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsZIPload_4007, visGrid.diagram.edit.parts.ConnectionsZIPloadEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Overhead_line_conductor_4008(visGrid.Overhead_line_conductor target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Overhead_line_conductor()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_conductor_4008, visGrid.diagram.edit.parts.ConnectionsOverhead_line_conductorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Line_spacing_4009(visGrid.Line_spacing target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Line_spacing()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_spacing_4009, visGrid.diagram.edit.parts.ConnectionsLine_spacingEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Inverter_4010(visGrid.Inverter target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Inverter()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsInverter_4010, visGrid.diagram.edit.parts.ConnectionsInverterEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Transformer_configuration_4011(visGrid.Transformer_configuration target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Transformer_configuration()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_configuration_4011, visGrid.diagram.edit.parts.ConnectionsTransformer_configurationEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Node_4012(visGrid.Node target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Node()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsNode_4012, visGrid.diagram.edit.parts.ConnectionsNodeEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Refrigerator_4013(visGrid.Refrigerator target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Refrigerator()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRefrigerator_4013, visGrid.diagram.edit.parts.ConnectionsRefrigeratorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Plc_4014(visGrid.Plc target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Plc()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlc_4014, visGrid.diagram.edit.parts.ConnectionsPlcEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Controller2_4015(visGrid.Controller2 target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Controller2()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsController2_4015, visGrid.diagram.edit.parts.ConnectionsController2EditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Triplex_line_configuration_4016(visGrid.Triplex_line_configuration target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Triplex_line_configuration()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_configuration_4016, visGrid.diagram.edit.parts.ConnectionsTriplex_line_configurationEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Transformer_4017(visGrid.Transformer target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Transformer()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_4017, visGrid.diagram.edit.parts.ConnectionsTransformerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Rectifier_4018(visGrid.Rectifier target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Rectifier()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRectifier_4018, visGrid.diagram.edit.parts.ConnectionsRectifierEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Volt_var_control_4019(visGrid.Volt_var_control target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Volt_var_control()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsVolt_var_control_4019, visGrid.diagram.edit.parts.ConnectionsVolt_var_controlEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Underground_line_conductor_4020(visGrid.Underground_line_conductor target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Underground_line_conductor()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_conductor_4020, visGrid.diagram.edit.parts.ConnectionsUnderground_line_conductorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_House_a_4021(visGrid.House_a target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_House_a()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_a_4021, visGrid.diagram.edit.parts.ConnectionsHouse_aEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Lights_4022(visGrid.Lights target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Lights()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLights_4022, visGrid.diagram.edit.parts.ConnectionsLightsEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Waterheater_4023(visGrid.Waterheater target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Waterheater()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsWaterheater_4023, visGrid.diagram.edit.parts.ConnectionsWaterheaterEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Shaper_4024(visGrid.Shaper target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Shaper()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsShaper_4024, visGrid.diagram.edit.parts.ConnectionsShaperEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Stubauction_4025(visGrid.Stubauction target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Stubauction()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsStubauction_4025, visGrid.diagram.edit.parts.ConnectionsStubauctionEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Csv_reader_4026(visGrid.Csv_reader target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Csv_reader()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCsv_reader_4026, visGrid.diagram.edit.parts.ConnectionsCsv_readerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Diesel_dg_4027(visGrid.Diesel_dg target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Diesel_dg()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDiesel_dg_4027, visGrid.diagram.edit.parts.ConnectionsDiesel_dgEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Controller_4028(visGrid.Controller target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Controller()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsController_4028, visGrid.diagram.edit.parts.ConnectionsControllerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Line_configuration_4029(visGrid.Line_configuration target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Line_configuration()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_configuration_4029, visGrid.diagram.edit.parts.ConnectionsLine_configurationEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Pqload_4030(visGrid.Pqload target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Pqload()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPqload_4030, visGrid.diagram.edit.parts.ConnectionsPqloadEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Regulator_4031(visGrid.Regulator target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Regulator()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_4031, visGrid.diagram.edit.parts.ConnectionsRegulatorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Dc_dc_converter_4032(visGrid.Dc_dc_converter target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Dc_dc_converter()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDc_dc_converter_4032, visGrid.diagram.edit.parts.ConnectionsDc_dc_converterEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Occupantload_4033(visGrid.Occupantload target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Occupantload()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOccupantload_4033, visGrid.diagram.edit.parts.ConnectionsOccupantloadEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Fuse_4034(visGrid.Fuse target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Fuse()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFuse_4034, visGrid.diagram.edit.parts.ConnectionsFuseEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Capacitor_4035(visGrid.Capacitor target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Capacitor()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapacitor_4035, visGrid.diagram.edit.parts.ConnectionsCapacitorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Battery_4036(visGrid.Battery target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Battery()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsBattery_4036, visGrid.diagram.edit.parts.ConnectionsBatteryEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Billdump_4037(visGrid.Billdump target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Billdump()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsBilldump_4037, visGrid.diagram.edit.parts.ConnectionsBilldumpEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Line_4038(visGrid.Line target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Line()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_4038, visGrid.diagram.edit.parts.ConnectionsLineEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Meter_4039(visGrid.Meter target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Meter()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMeter_4039, visGrid.diagram.edit.parts.ConnectionsMeterEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Overhead_line_4040(visGrid.Overhead_line target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Overhead_line()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_4040, visGrid.diagram.edit.parts.ConnectionsOverhead_lineEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Relay_4041(visGrid.Relay target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Relay()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRelay_4041, visGrid.diagram.edit.parts.ConnectionsRelayEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Recorder_4042(visGrid.Recorder target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Recorder()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRecorder_4042, visGrid.diagram.edit.parts.ConnectionsRecorderEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Plugload_4043(visGrid.Plugload target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Plugload()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlugload_4043, visGrid.diagram.edit.parts.ConnectionsPlugloadEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Windturb_dg_4044(visGrid.Windturb_dg target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Windturb_dg()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsWindturb_dg_4044, visGrid.diagram.edit.parts.ConnectionsWindturb_dgEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Office_4045(visGrid.Office target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Office()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOffice_4045, visGrid.diagram.edit.parts.ConnectionsOfficeEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Histogram_4046(visGrid.Histogram target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Histogram()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsHistogram_4046, visGrid.diagram.edit.parts.ConnectionsHistogramEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Collector_4047(visGrid.Collector target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Collector()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCollector_4047, visGrid.diagram.edit.parts.ConnectionsCollectorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Auction_4048(visGrid.Auction target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Auction()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsAuction_4048, visGrid.diagram.edit.parts.ConnectionsAuctionEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Evcharger_4049(visGrid.Evcharger target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Evcharger()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsEvcharger_4049, visGrid.diagram.edit.parts.ConnectionsEvchargerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Freezer_4050(visGrid.Freezer target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Freezer()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFreezer_4050, visGrid.diagram.edit.parts.ConnectionsFreezerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Multizone_4051(visGrid.Multizone target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Multizone()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMultizone_4051, visGrid.diagram.edit.parts.ConnectionsMultizoneEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Load_4052(visGrid.Load target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Load()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLoad_4052, visGrid.diagram.edit.parts.ConnectionsLoadEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Underground_line_4053(visGrid.Underground_line target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Underground_line()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_4053, visGrid.diagram.edit.parts.ConnectionsUnderground_lineEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Substation_4054(visGrid.Substation target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Substation()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSubstation_4054, visGrid.diagram.edit.parts.ConnectionsSubstationEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Generator_4055(visGrid.Generator target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Generator()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsGenerator_4055, visGrid.diagram.edit.parts.ConnectionsGeneratorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Range_4056(visGrid.Range target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Range()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRange_4056, visGrid.diagram.edit.parts.ConnectionsRangeEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Player_4057(visGrid.Player target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Player()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlayer_4057, visGrid.diagram.edit.parts.ConnectionsPlayerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Power_electronics_4058(visGrid.Power_electronics target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Power_electronics()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPower_electronics_4058, visGrid.diagram.edit.parts.ConnectionsPower_electronicsEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Fault_check_4059(visGrid.Fault_check target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Fault_check()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFault_check_4059, visGrid.diagram.edit.parts.ConnectionsFault_checkEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Energy_storage_4060(visGrid.Energy_storage target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Energy_storage()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsEnergy_storage_4060, visGrid.diagram.edit.parts.ConnectionsEnergy_storageEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Dryer_4061(visGrid.Dryer target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Dryer()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDryer_4061, visGrid.diagram.edit.parts.ConnectionsDryerEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Series_reactor_4062(visGrid.Series_reactor target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Series_reactor()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSeries_reactor_4062, visGrid.diagram.edit.parts.ConnectionsSeries_reactorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Comm_4063(visGrid.Comm target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Comm()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsComm_4063, visGrid.diagram.edit.parts.ConnectionsCommEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Capbank_4064(visGrid.Capbank target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Capbank()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapbank_4064, visGrid.diagram.edit.parts.ConnectionsCapbankEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Frequency_gen_4065(visGrid.Frequency_gen target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Frequency_gen()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFrequency_gen_4065, visGrid.diagram.edit.parts.ConnectionsFrequency_genEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Motor_4066(visGrid.Motor target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Motor()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMotor_4066, visGrid.diagram.edit.parts.ConnectionsMotorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Microturbine_4067(visGrid.Microturbine target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Microturbine()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicroturbine_4067, visGrid.diagram.edit.parts.ConnectionsMicroturbineEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Weather_4068(visGrid.Weather target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Weather()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsWeather_4068, visGrid.diagram.edit.parts.ConnectionsWeatherEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Regulator_configuration_4069(visGrid.Regulator_configuration target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Regulator_configuration()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_configuration_4069, visGrid.diagram.edit.parts.ConnectionsRegulator_configurationEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Switch_4070(visGrid.Switch target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Switch()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSwitch_4070, visGrid.diagram.edit.parts.ConnectionsSwitchEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Residential_enduse_4071(visGrid.Residential_enduse target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Residential_enduse()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsResidential_enduse_4071, visGrid.diagram.edit.parts.ConnectionsResidential_enduseEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Solar_4072(visGrid.Solar target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Solar()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSolar_4072, visGrid.diagram.edit.parts.ConnectionsSolarEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_House_4073(visGrid.House target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_House()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_4073, visGrid.diagram.edit.parts.ConnectionsHouseEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Voltdump_4074(visGrid.Voltdump target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Voltdump()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsVoltdump_4074, visGrid.diagram.edit.parts.ConnectionsVoltdumpEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Dishwasher_4075(visGrid.Dishwasher target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Dishwasher()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDishwasher_4075, visGrid.diagram.edit.parts.ConnectionsDishwasherEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Triplex_line_conductor_4076(visGrid.Triplex_line_conductor target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Triplex_line_conductor()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_conductor_4076, visGrid.diagram.edit.parts.ConnectionsTriplex_line_conductorEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Restoration_4077(visGrid.Restoration target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Restoration()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRestoration_4077, visGrid.diagram.edit.parts.ConnectionsRestorationEditPart.VISUAL_ID));
}
	}
	return result;	
}

/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingFeatureModelFacetLinks_Connections_Triplex_node_4078(visGrid.Triplex_node target, java.util.Map<org.eclipse.emf.ecore.EObject, java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting>> crossReferences) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
	java.util.Collection<org.eclipse.emf.ecore.EStructuralFeature.Setting> settings = crossReferences.get(target);
	for (org.eclipse.emf.ecore.EStructuralFeature.Setting setting : settings) {
		if (setting.getEStructuralFeature() == visGrid.VisGridPackage.eINSTANCE.getConnections_Triplex_node()) {
	result.add(new visGrid.diagram.part.VisGridLinkDescriptor(setting.getEObject(), target, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_node_4078, visGrid.diagram.edit.parts.ConnectionsTriplex_nodeEditPart.VISUAL_ID));
}
	}
	return result;	
}
		
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Microwave_4001(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getMicrowave().iterator(); destinations.hasNext();) {
		visGrid.Microwave destination = (visGrid.Microwave) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicrowave_4001, visGrid.diagram.edit.parts.ConnectionsMicrowaveEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Climate_4002(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getClimate().iterator(); destinations.hasNext();) {
		visGrid.Climate destination = (visGrid.Climate) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsClimate_4002, visGrid.diagram.edit.parts.ConnectionsClimateEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_4003(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTriplex_line().iterator(); destinations.hasNext();) {
		visGrid.Triplex_line destination = (visGrid.Triplex_line) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_4003, visGrid.diagram.edit.parts.ConnectionsTriplex_lineEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Triplex_meter_4004(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTriplex_meter().iterator(); destinations.hasNext();) {
		visGrid.Triplex_meter destination = (visGrid.Triplex_meter) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_meter_4004, visGrid.diagram.edit.parts.ConnectionsTriplex_meterEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Link_4005(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getLink().iterator(); destinations.hasNext();) {
		visGrid.Link destination = (visGrid.Link) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLink_4005, visGrid.diagram.edit.parts.ConnectionsLinkEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Clotheswasher_4006(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getClotheswasher().iterator(); destinations.hasNext();) {
		visGrid.Clotheswasher destination = (visGrid.Clotheswasher) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsClotheswasher_4006, visGrid.diagram.edit.parts.ConnectionsClotheswasherEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_ZIPload_4007(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getZIPload().iterator(); destinations.hasNext();) {
		visGrid.ZIPload destination = (visGrid.ZIPload) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsZIPload_4007, visGrid.diagram.edit.parts.ConnectionsZIPloadEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Overhead_line_conductor_4008(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getOverhead_line_conductor().iterator(); destinations.hasNext();) {
		visGrid.Overhead_line_conductor destination = (visGrid.Overhead_line_conductor) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_conductor_4008, visGrid.diagram.edit.parts.ConnectionsOverhead_line_conductorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Line_spacing_4009(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getLine_spacing().iterator(); destinations.hasNext();) {
		visGrid.Line_spacing destination = (visGrid.Line_spacing) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_spacing_4009, visGrid.diagram.edit.parts.ConnectionsLine_spacingEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Inverter_4010(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getInverter().iterator(); destinations.hasNext();) {
		visGrid.Inverter destination = (visGrid.Inverter) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsInverter_4010, visGrid.diagram.edit.parts.ConnectionsInverterEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Transformer_configuration_4011(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTransformer_configuration().iterator(); destinations.hasNext();) {
		visGrid.Transformer_configuration destination = (visGrid.Transformer_configuration) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_configuration_4011, visGrid.diagram.edit.parts.ConnectionsTransformer_configurationEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Node_4012(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getNode().iterator(); destinations.hasNext();) {
		visGrid.Node destination = (visGrid.Node) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsNode_4012, visGrid.diagram.edit.parts.ConnectionsNodeEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Refrigerator_4013(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRefrigerator().iterator(); destinations.hasNext();) {
		visGrid.Refrigerator destination = (visGrid.Refrigerator) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRefrigerator_4013, visGrid.diagram.edit.parts.ConnectionsRefrigeratorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Plc_4014(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getPlc().iterator(); destinations.hasNext();) {
		visGrid.Plc destination = (visGrid.Plc) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlc_4014, visGrid.diagram.edit.parts.ConnectionsPlcEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Controller2_4015(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getController2().iterator(); destinations.hasNext();) {
		visGrid.Controller2 destination = (visGrid.Controller2) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsController2_4015, visGrid.diagram.edit.parts.ConnectionsController2EditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_configuration_4016(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTriplex_line_configuration().iterator(); destinations.hasNext();) {
		visGrid.Triplex_line_configuration destination = (visGrid.Triplex_line_configuration) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_configuration_4016, visGrid.diagram.edit.parts.ConnectionsTriplex_line_configurationEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Transformer_4017(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTransformer().iterator(); destinations.hasNext();) {
		visGrid.Transformer destination = (visGrid.Transformer) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_4017, visGrid.diagram.edit.parts.ConnectionsTransformerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Rectifier_4018(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRectifier().iterator(); destinations.hasNext();) {
		visGrid.Rectifier destination = (visGrid.Rectifier) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRectifier_4018, visGrid.diagram.edit.parts.ConnectionsRectifierEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Volt_var_control_4019(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getVolt_var_control().iterator(); destinations.hasNext();) {
		visGrid.Volt_var_control destination = (visGrid.Volt_var_control) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsVolt_var_control_4019, visGrid.diagram.edit.parts.ConnectionsVolt_var_controlEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Underground_line_conductor_4020(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getUnderground_line_conductor().iterator(); destinations.hasNext();) {
		visGrid.Underground_line_conductor destination = (visGrid.Underground_line_conductor) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_conductor_4020, visGrid.diagram.edit.parts.ConnectionsUnderground_line_conductorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_House_a_4021(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getHouse_a().iterator(); destinations.hasNext();) {
		visGrid.House_a destination = (visGrid.House_a) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_a_4021, visGrid.diagram.edit.parts.ConnectionsHouse_aEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Lights_4022(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getLights().iterator(); destinations.hasNext();) {
		visGrid.Lights destination = (visGrid.Lights) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLights_4022, visGrid.diagram.edit.parts.ConnectionsLightsEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Waterheater_4023(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getWaterheater().iterator(); destinations.hasNext();) {
		visGrid.Waterheater destination = (visGrid.Waterheater) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsWaterheater_4023, visGrid.diagram.edit.parts.ConnectionsWaterheaterEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Shaper_4024(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getShaper().iterator(); destinations.hasNext();) {
		visGrid.Shaper destination = (visGrid.Shaper) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsShaper_4024, visGrid.diagram.edit.parts.ConnectionsShaperEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Stubauction_4025(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getStubauction().iterator(); destinations.hasNext();) {
		visGrid.Stubauction destination = (visGrid.Stubauction) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsStubauction_4025, visGrid.diagram.edit.parts.ConnectionsStubauctionEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Csv_reader_4026(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getCsv_reader().iterator(); destinations.hasNext();) {
		visGrid.Csv_reader destination = (visGrid.Csv_reader) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCsv_reader_4026, visGrid.diagram.edit.parts.ConnectionsCsv_readerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Diesel_dg_4027(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getDiesel_dg().iterator(); destinations.hasNext();) {
		visGrid.Diesel_dg destination = (visGrid.Diesel_dg) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDiesel_dg_4027, visGrid.diagram.edit.parts.ConnectionsDiesel_dgEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Controller_4028(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getController().iterator(); destinations.hasNext();) {
		visGrid.Controller destination = (visGrid.Controller) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsController_4028, visGrid.diagram.edit.parts.ConnectionsControllerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Line_configuration_4029(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getLine_configuration().iterator(); destinations.hasNext();) {
		visGrid.Line_configuration destination = (visGrid.Line_configuration) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_configuration_4029, visGrid.diagram.edit.parts.ConnectionsLine_configurationEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Pqload_4030(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getPqload().iterator(); destinations.hasNext();) {
		visGrid.Pqload destination = (visGrid.Pqload) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPqload_4030, visGrid.diagram.edit.parts.ConnectionsPqloadEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Regulator_4031(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRegulator().iterator(); destinations.hasNext();) {
		visGrid.Regulator destination = (visGrid.Regulator) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_4031, visGrid.diagram.edit.parts.ConnectionsRegulatorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Dc_dc_converter_4032(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getDc_dc_converter().iterator(); destinations.hasNext();) {
		visGrid.Dc_dc_converter destination = (visGrid.Dc_dc_converter) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDc_dc_converter_4032, visGrid.diagram.edit.parts.ConnectionsDc_dc_converterEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Occupantload_4033(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getOccupantload().iterator(); destinations.hasNext();) {
		visGrid.Occupantload destination = (visGrid.Occupantload) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOccupantload_4033, visGrid.diagram.edit.parts.ConnectionsOccupantloadEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Fuse_4034(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getFuse().iterator(); destinations.hasNext();) {
		visGrid.Fuse destination = (visGrid.Fuse) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFuse_4034, visGrid.diagram.edit.parts.ConnectionsFuseEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Capacitor_4035(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getCapacitor().iterator(); destinations.hasNext();) {
		visGrid.Capacitor destination = (visGrid.Capacitor) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapacitor_4035, visGrid.diagram.edit.parts.ConnectionsCapacitorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Battery_4036(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getBattery().iterator(); destinations.hasNext();) {
		visGrid.Battery destination = (visGrid.Battery) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsBattery_4036, visGrid.diagram.edit.parts.ConnectionsBatteryEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Billdump_4037(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getBilldump().iterator(); destinations.hasNext();) {
		visGrid.Billdump destination = (visGrid.Billdump) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsBilldump_4037, visGrid.diagram.edit.parts.ConnectionsBilldumpEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Line_4038(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getLine().iterator(); destinations.hasNext();) {
		visGrid.Line destination = (visGrid.Line) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_4038, visGrid.diagram.edit.parts.ConnectionsLineEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Meter_4039(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getMeter().iterator(); destinations.hasNext();) {
		visGrid.Meter destination = (visGrid.Meter) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMeter_4039, visGrid.diagram.edit.parts.ConnectionsMeterEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Overhead_line_4040(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getOverhead_line().iterator(); destinations.hasNext();) {
		visGrid.Overhead_line destination = (visGrid.Overhead_line) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_4040, visGrid.diagram.edit.parts.ConnectionsOverhead_lineEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Relay_4041(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRelay().iterator(); destinations.hasNext();) {
		visGrid.Relay destination = (visGrid.Relay) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRelay_4041, visGrid.diagram.edit.parts.ConnectionsRelayEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Recorder_4042(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRecorder().iterator(); destinations.hasNext();) {
		visGrid.Recorder destination = (visGrid.Recorder) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRecorder_4042, visGrid.diagram.edit.parts.ConnectionsRecorderEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Plugload_4043(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getPlugload().iterator(); destinations.hasNext();) {
		visGrid.Plugload destination = (visGrid.Plugload) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlugload_4043, visGrid.diagram.edit.parts.ConnectionsPlugloadEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Windturb_dg_4044(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getWindturb_dg().iterator(); destinations.hasNext();) {
		visGrid.Windturb_dg destination = (visGrid.Windturb_dg) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsWindturb_dg_4044, visGrid.diagram.edit.parts.ConnectionsWindturb_dgEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Office_4045(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getOffice().iterator(); destinations.hasNext();) {
		visGrid.Office destination = (visGrid.Office) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsOffice_4045, visGrid.diagram.edit.parts.ConnectionsOfficeEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Histogram_4046(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getHistogram().iterator(); destinations.hasNext();) {
		visGrid.Histogram destination = (visGrid.Histogram) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsHistogram_4046, visGrid.diagram.edit.parts.ConnectionsHistogramEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Collector_4047(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getCollector().iterator(); destinations.hasNext();) {
		visGrid.Collector destination = (visGrid.Collector) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCollector_4047, visGrid.diagram.edit.parts.ConnectionsCollectorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Auction_4048(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getAuction().iterator(); destinations.hasNext();) {
		visGrid.Auction destination = (visGrid.Auction) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsAuction_4048, visGrid.diagram.edit.parts.ConnectionsAuctionEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Evcharger_4049(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getEvcharger().iterator(); destinations.hasNext();) {
		visGrid.Evcharger destination = (visGrid.Evcharger) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsEvcharger_4049, visGrid.diagram.edit.parts.ConnectionsEvchargerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Freezer_4050(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getFreezer().iterator(); destinations.hasNext();) {
		visGrid.Freezer destination = (visGrid.Freezer) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFreezer_4050, visGrid.diagram.edit.parts.ConnectionsFreezerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Multizone_4051(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getMultizone().iterator(); destinations.hasNext();) {
		visGrid.Multizone destination = (visGrid.Multizone) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMultizone_4051, visGrid.diagram.edit.parts.ConnectionsMultizoneEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Load_4052(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getLoad().iterator(); destinations.hasNext();) {
		visGrid.Load destination = (visGrid.Load) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsLoad_4052, visGrid.diagram.edit.parts.ConnectionsLoadEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Underground_line_4053(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getUnderground_line().iterator(); destinations.hasNext();) {
		visGrid.Underground_line destination = (visGrid.Underground_line) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_4053, visGrid.diagram.edit.parts.ConnectionsUnderground_lineEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Substation_4054(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getSubstation().iterator(); destinations.hasNext();) {
		visGrid.Substation destination = (visGrid.Substation) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSubstation_4054, visGrid.diagram.edit.parts.ConnectionsSubstationEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Generator_4055(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getGenerator().iterator(); destinations.hasNext();) {
		visGrid.Generator destination = (visGrid.Generator) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsGenerator_4055, visGrid.diagram.edit.parts.ConnectionsGeneratorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Range_4056(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRange().iterator(); destinations.hasNext();) {
		visGrid.Range destination = (visGrid.Range) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRange_4056, visGrid.diagram.edit.parts.ConnectionsRangeEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Player_4057(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getPlayer().iterator(); destinations.hasNext();) {
		visGrid.Player destination = (visGrid.Player) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlayer_4057, visGrid.diagram.edit.parts.ConnectionsPlayerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Power_electronics_4058(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getPower_electronics().iterator(); destinations.hasNext();) {
		visGrid.Power_electronics destination = (visGrid.Power_electronics) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsPower_electronics_4058, visGrid.diagram.edit.parts.ConnectionsPower_electronicsEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Fault_check_4059(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getFault_check().iterator(); destinations.hasNext();) {
		visGrid.Fault_check destination = (visGrid.Fault_check) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFault_check_4059, visGrid.diagram.edit.parts.ConnectionsFault_checkEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Energy_storage_4060(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getEnergy_storage().iterator(); destinations.hasNext();) {
		visGrid.Energy_storage destination = (visGrid.Energy_storage) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsEnergy_storage_4060, visGrid.diagram.edit.parts.ConnectionsEnergy_storageEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Dryer_4061(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getDryer().iterator(); destinations.hasNext();) {
		visGrid.Dryer destination = (visGrid.Dryer) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDryer_4061, visGrid.diagram.edit.parts.ConnectionsDryerEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Series_reactor_4062(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getSeries_reactor().iterator(); destinations.hasNext();) {
		visGrid.Series_reactor destination = (visGrid.Series_reactor) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSeries_reactor_4062, visGrid.diagram.edit.parts.ConnectionsSeries_reactorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Comm_4063(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getComm().iterator(); destinations.hasNext();) {
		visGrid.Comm destination = (visGrid.Comm) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsComm_4063, visGrid.diagram.edit.parts.ConnectionsCommEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Capbank_4064(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getCapbank().iterator(); destinations.hasNext();) {
		visGrid.Capbank destination = (visGrid.Capbank) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapbank_4064, visGrid.diagram.edit.parts.ConnectionsCapbankEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Frequency_gen_4065(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getFrequency_gen().iterator(); destinations.hasNext();) {
		visGrid.Frequency_gen destination = (visGrid.Frequency_gen) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsFrequency_gen_4065, visGrid.diagram.edit.parts.ConnectionsFrequency_genEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Motor_4066(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getMotor().iterator(); destinations.hasNext();) {
		visGrid.Motor destination = (visGrid.Motor) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMotor_4066, visGrid.diagram.edit.parts.ConnectionsMotorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Microturbine_4067(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getMicroturbine().iterator(); destinations.hasNext();) {
		visGrid.Microturbine destination = (visGrid.Microturbine) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicroturbine_4067, visGrid.diagram.edit.parts.ConnectionsMicroturbineEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Weather_4068(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getWeather().iterator(); destinations.hasNext();) {
		visGrid.Weather destination = (visGrid.Weather) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsWeather_4068, visGrid.diagram.edit.parts.ConnectionsWeatherEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Regulator_configuration_4069(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRegulator_configuration().iterator(); destinations.hasNext();) {
		visGrid.Regulator_configuration destination = (visGrid.Regulator_configuration) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_configuration_4069, visGrid.diagram.edit.parts.ConnectionsRegulator_configurationEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Switch_4070(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getSwitch().iterator(); destinations.hasNext();) {
		visGrid.Switch destination = (visGrid.Switch) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSwitch_4070, visGrid.diagram.edit.parts.ConnectionsSwitchEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Residential_enduse_4071(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getResidential_enduse().iterator(); destinations.hasNext();) {
		visGrid.Residential_enduse destination = (visGrid.Residential_enduse) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsResidential_enduse_4071, visGrid.diagram.edit.parts.ConnectionsResidential_enduseEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Solar_4072(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getSolar().iterator(); destinations.hasNext();) {
		visGrid.Solar destination = (visGrid.Solar) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsSolar_4072, visGrid.diagram.edit.parts.ConnectionsSolarEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_House_4073(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getHouse().iterator(); destinations.hasNext();) {
		visGrid.House destination = (visGrid.House) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_4073, visGrid.diagram.edit.parts.ConnectionsHouseEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Voltdump_4074(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getVoltdump().iterator(); destinations.hasNext();) {
		visGrid.Voltdump destination = (visGrid.Voltdump) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsVoltdump_4074, visGrid.diagram.edit.parts.ConnectionsVoltdumpEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Dishwasher_4075(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getDishwasher().iterator(); destinations.hasNext();) {
		visGrid.Dishwasher destination = (visGrid.Dishwasher) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsDishwasher_4075, visGrid.diagram.edit.parts.ConnectionsDishwasherEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Triplex_line_conductor_4076(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTriplex_line_conductor().iterator(); destinations.hasNext();) {
		visGrid.Triplex_line_conductor destination = (visGrid.Triplex_line_conductor) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_conductor_4076, visGrid.diagram.edit.parts.ConnectionsTriplex_line_conductorEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Restoration_4077(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getRestoration().iterator(); destinations.hasNext();) {
		visGrid.Restoration destination = (visGrid.Restoration) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsRestoration_4077, visGrid.diagram.edit.parts.ConnectionsRestorationEditPart.VISUAL_ID));
		}
		return result;
}
	
	/**
 * @generated
 */
private static java.util.Collection<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingFeatureModelFacetLinks_Connections_Triplex_node_4078(visGrid.Connections source) {
	java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridLinkDescriptor>();
		for (java.util.Iterator<?> destinations = source.getTriplex_node().iterator(); destinations.hasNext();) {
		visGrid.Triplex_node destination = (visGrid.Triplex_node) destinations.next();
		result.add(new visGrid.diagram.part.VisGridLinkDescriptor(source, destination, visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_node_4078, visGrid.diagram.edit.parts.ConnectionsTriplex_nodeEditPart.VISUAL_ID));
		}
		return result;
}

	}
