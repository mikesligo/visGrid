package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class EvchargerEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2009;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public EvchargerEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.EvchargerItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new EvchargerFigure();
	}

		/**
 * @generated
 */
	public EvchargerFigure getPrimaryShape() {
		return (EvchargerFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.EvchargerNameEditPart) {
			((visGrid.diagram.edit.parts.EvchargerNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureEvchargerNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.EvchargerNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.EvchargerNameEditPart.VISUAL_ID));
		}
	



		
	
	
	
/**
 * @generated
 */
public class EvchargerFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerCharger_typeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerVehicle_typeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerStateFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerP_go_homeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerP_go_workFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerWork_distFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerCapacityFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerChargeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerCharge_at_workFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerCharge_throttleFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerDemand_profileFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerShapeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerLoadFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerEnergyFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerPowerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerPeak_demandFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerHeatgainFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerHeatgain_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerCurrent_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerImpedance_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerPower_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerPower_factorFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerConstant_powerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerConstant_currentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerConstant_admittanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerVoltage_factorFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerConfigurationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEvchargerOverrideFigure; 


	/**
	 * @generated
	 */
	public EvchargerFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureEvchargerNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerNameFigure.setText("<...>");

this.add(fFigureEvchargerNameFigure);



fFigureEvchargerCharger_typeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerCharger_typeFigure.setText("<...>");

this.add(fFigureEvchargerCharger_typeFigure);



fFigureEvchargerVehicle_typeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerVehicle_typeFigure.setText("<...>");

this.add(fFigureEvchargerVehicle_typeFigure);



fFigureEvchargerStateFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerStateFigure.setText("<...>");

this.add(fFigureEvchargerStateFigure);



fFigureEvchargerP_go_homeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerP_go_homeFigure.setText("<...>");

this.add(fFigureEvchargerP_go_homeFigure);



fFigureEvchargerP_go_workFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerP_go_workFigure.setText("<...>");

this.add(fFigureEvchargerP_go_workFigure);



fFigureEvchargerWork_distFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerWork_distFigure.setText("<...>");

this.add(fFigureEvchargerWork_distFigure);



fFigureEvchargerCapacityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerCapacityFigure.setText("<...>");

this.add(fFigureEvchargerCapacityFigure);



fFigureEvchargerChargeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerChargeFigure.setText("<...>");

this.add(fFigureEvchargerChargeFigure);



fFigureEvchargerCharge_at_workFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerCharge_at_workFigure.setText("<...>");

this.add(fFigureEvchargerCharge_at_workFigure);



fFigureEvchargerCharge_throttleFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerCharge_throttleFigure.setText("<...>");

this.add(fFigureEvchargerCharge_throttleFigure);



fFigureEvchargerDemand_profileFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerDemand_profileFigure.setText("<...>");

this.add(fFigureEvchargerDemand_profileFigure);



fFigureEvchargerShapeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerShapeFigure.setText("<...>");

this.add(fFigureEvchargerShapeFigure);



fFigureEvchargerLoadFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerLoadFigure.setText("<...>");

this.add(fFigureEvchargerLoadFigure);



fFigureEvchargerEnergyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerEnergyFigure.setText("<...>");

this.add(fFigureEvchargerEnergyFigure);



fFigureEvchargerPowerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerPowerFigure.setText("<...>");

this.add(fFigureEvchargerPowerFigure);



fFigureEvchargerPeak_demandFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerPeak_demandFigure.setText("<...>");

this.add(fFigureEvchargerPeak_demandFigure);



fFigureEvchargerHeatgainFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerHeatgainFigure.setText("<...>");

this.add(fFigureEvchargerHeatgainFigure);



fFigureEvchargerHeatgain_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerHeatgain_fractionFigure.setText("<...>");

this.add(fFigureEvchargerHeatgain_fractionFigure);



fFigureEvchargerCurrent_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerCurrent_fractionFigure.setText("<...>");

this.add(fFigureEvchargerCurrent_fractionFigure);



fFigureEvchargerImpedance_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerImpedance_fractionFigure.setText("<...>");

this.add(fFigureEvchargerImpedance_fractionFigure);



fFigureEvchargerPower_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerPower_fractionFigure.setText("<...>");

this.add(fFigureEvchargerPower_fractionFigure);



fFigureEvchargerPower_factorFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerPower_factorFigure.setText("<...>");

this.add(fFigureEvchargerPower_factorFigure);



fFigureEvchargerConstant_powerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerConstant_powerFigure.setText("<...>");

this.add(fFigureEvchargerConstant_powerFigure);



fFigureEvchargerConstant_currentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerConstant_currentFigure.setText("<...>");

this.add(fFigureEvchargerConstant_currentFigure);



fFigureEvchargerConstant_admittanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerConstant_admittanceFigure.setText("<...>");

this.add(fFigureEvchargerConstant_admittanceFigure);



fFigureEvchargerVoltage_factorFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerVoltage_factorFigure.setText("<...>");

this.add(fFigureEvchargerVoltage_factorFigure);



fFigureEvchargerConfigurationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerConfigurationFigure.setText("<...>");

this.add(fFigureEvchargerConfigurationFigure);



fFigureEvchargerOverrideFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureEvchargerOverrideFigure.setText("<...>");

this.add(fFigureEvchargerOverrideFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerNameFigure() {
		return fFigureEvchargerNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerCharger_typeFigure() {
		return fFigureEvchargerCharger_typeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerVehicle_typeFigure() {
		return fFigureEvchargerVehicle_typeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerStateFigure() {
		return fFigureEvchargerStateFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerP_go_homeFigure() {
		return fFigureEvchargerP_go_homeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerP_go_workFigure() {
		return fFigureEvchargerP_go_workFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerWork_distFigure() {
		return fFigureEvchargerWork_distFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerCapacityFigure() {
		return fFigureEvchargerCapacityFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerChargeFigure() {
		return fFigureEvchargerChargeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerCharge_at_workFigure() {
		return fFigureEvchargerCharge_at_workFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerCharge_throttleFigure() {
		return fFigureEvchargerCharge_throttleFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerDemand_profileFigure() {
		return fFigureEvchargerDemand_profileFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerShapeFigure() {
		return fFigureEvchargerShapeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerLoadFigure() {
		return fFigureEvchargerLoadFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerEnergyFigure() {
		return fFigureEvchargerEnergyFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerPowerFigure() {
		return fFigureEvchargerPowerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerPeak_demandFigure() {
		return fFigureEvchargerPeak_demandFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerHeatgainFigure() {
		return fFigureEvchargerHeatgainFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerHeatgain_fractionFigure() {
		return fFigureEvchargerHeatgain_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerCurrent_fractionFigure() {
		return fFigureEvchargerCurrent_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerImpedance_fractionFigure() {
		return fFigureEvchargerImpedance_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerPower_fractionFigure() {
		return fFigureEvchargerPower_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerPower_factorFigure() {
		return fFigureEvchargerPower_factorFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerConstant_powerFigure() {
		return fFigureEvchargerConstant_powerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerConstant_currentFigure() {
		return fFigureEvchargerConstant_currentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerConstant_admittanceFigure() {
		return fFigureEvchargerConstant_admittanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerVoltage_factorFigure() {
		return fFigureEvchargerVoltage_factorFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerConfigurationFigure() {
		return fFigureEvchargerConfigurationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEvchargerOverrideFigure() {
		return fFigureEvchargerOverrideFigure;
	}


}


	
	}
