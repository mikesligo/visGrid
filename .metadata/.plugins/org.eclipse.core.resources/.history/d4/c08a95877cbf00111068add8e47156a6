package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class Controller2EditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2034;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public Controller2EditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.Controller2ItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new Controller2Figure();
	}

		/**
 * @generated
 */
	public Controller2Figure getPrimaryShape() {
		return (Controller2Figure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.Controller2NameEditPart) {
			((visGrid.diagram.edit.parts.Controller2NameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureController2NameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.Controller2NameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.Controller2NameEditPart.VISUAL_ID));
		}
	



		
	
	
	
/**
 * @generated
 */
public class Controller2Figure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2NameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Input_stateFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Input_setpointFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Input_chainedFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2ObservationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Mean_observationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Stdev_observationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2ExpectationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2SetpointFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2SensitivityFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2PeriodFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Expectation_propFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Expectation_objFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Setpoint_propFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2State_propFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Observation_objFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Observation_propFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Mean_observation_propFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Stdev_observation_propFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Cycle_lengthFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Base_setpointFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Ramp_highFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Ramp_lowFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Range_highFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Range_lowFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Prob_offFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Output_stateFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Output_setpointFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureController2Control_modeFigure; 


	/**
	 * @generated
	 */
	public Controller2Figure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureController2NameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2NameFigure.setText("<...>");

this.add(fFigureController2NameFigure);



fFigureController2Input_stateFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Input_stateFigure.setText("<...>");

this.add(fFigureController2Input_stateFigure);



fFigureController2Input_setpointFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Input_setpointFigure.setText("<...>");

this.add(fFigureController2Input_setpointFigure);



fFigureController2Input_chainedFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Input_chainedFigure.setText("<...>");

this.add(fFigureController2Input_chainedFigure);



fFigureController2ObservationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2ObservationFigure.setText("<...>");

this.add(fFigureController2ObservationFigure);



fFigureController2Mean_observationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Mean_observationFigure.setText("<...>");

this.add(fFigureController2Mean_observationFigure);



fFigureController2Stdev_observationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Stdev_observationFigure.setText("<...>");

this.add(fFigureController2Stdev_observationFigure);



fFigureController2ExpectationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2ExpectationFigure.setText("<...>");

this.add(fFigureController2ExpectationFigure);



fFigureController2SetpointFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2SetpointFigure.setText("<...>");

this.add(fFigureController2SetpointFigure);



fFigureController2SensitivityFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2SensitivityFigure.setText("<...>");

this.add(fFigureController2SensitivityFigure);



fFigureController2PeriodFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2PeriodFigure.setText("<...>");

this.add(fFigureController2PeriodFigure);



fFigureController2Expectation_propFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Expectation_propFigure.setText("<...>");

this.add(fFigureController2Expectation_propFigure);



fFigureController2Expectation_objFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Expectation_objFigure.setText("<...>");

this.add(fFigureController2Expectation_objFigure);



fFigureController2Setpoint_propFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Setpoint_propFigure.setText("<...>");

this.add(fFigureController2Setpoint_propFigure);



fFigureController2State_propFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2State_propFigure.setText("<...>");

this.add(fFigureController2State_propFigure);



fFigureController2Observation_objFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Observation_objFigure.setText("<...>");

this.add(fFigureController2Observation_objFigure);



fFigureController2Observation_propFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Observation_propFigure.setText("<...>");

this.add(fFigureController2Observation_propFigure);



fFigureController2Mean_observation_propFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Mean_observation_propFigure.setText("<...>");

this.add(fFigureController2Mean_observation_propFigure);



fFigureController2Stdev_observation_propFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Stdev_observation_propFigure.setText("<...>");

this.add(fFigureController2Stdev_observation_propFigure);



fFigureController2Cycle_lengthFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Cycle_lengthFigure.setText("<...>");

this.add(fFigureController2Cycle_lengthFigure);



fFigureController2Base_setpointFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Base_setpointFigure.setText("<...>");

this.add(fFigureController2Base_setpointFigure);



fFigureController2Ramp_highFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Ramp_highFigure.setText("<...>");

this.add(fFigureController2Ramp_highFigure);



fFigureController2Ramp_lowFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Ramp_lowFigure.setText("<...>");

this.add(fFigureController2Ramp_lowFigure);



fFigureController2Range_highFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Range_highFigure.setText("<...>");

this.add(fFigureController2Range_highFigure);



fFigureController2Range_lowFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Range_lowFigure.setText("<...>");

this.add(fFigureController2Range_lowFigure);



fFigureController2Prob_offFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Prob_offFigure.setText("<...>");

this.add(fFigureController2Prob_offFigure);



fFigureController2Output_stateFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Output_stateFigure.setText("<...>");

this.add(fFigureController2Output_stateFigure);



fFigureController2Output_setpointFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Output_setpointFigure.setText("<...>");

this.add(fFigureController2Output_setpointFigure);



fFigureController2Control_modeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureController2Control_modeFigure.setText("<...>");

this.add(fFigureController2Control_modeFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2NameFigure() {
		return fFigureController2NameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Input_stateFigure() {
		return fFigureController2Input_stateFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Input_setpointFigure() {
		return fFigureController2Input_setpointFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Input_chainedFigure() {
		return fFigureController2Input_chainedFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2ObservationFigure() {
		return fFigureController2ObservationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Mean_observationFigure() {
		return fFigureController2Mean_observationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Stdev_observationFigure() {
		return fFigureController2Stdev_observationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2ExpectationFigure() {
		return fFigureController2ExpectationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2SetpointFigure() {
		return fFigureController2SetpointFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2SensitivityFigure() {
		return fFigureController2SensitivityFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2PeriodFigure() {
		return fFigureController2PeriodFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Expectation_propFigure() {
		return fFigureController2Expectation_propFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Expectation_objFigure() {
		return fFigureController2Expectation_objFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Setpoint_propFigure() {
		return fFigureController2Setpoint_propFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2State_propFigure() {
		return fFigureController2State_propFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Observation_objFigure() {
		return fFigureController2Observation_objFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Observation_propFigure() {
		return fFigureController2Observation_propFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Mean_observation_propFigure() {
		return fFigureController2Mean_observation_propFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Stdev_observation_propFigure() {
		return fFigureController2Stdev_observation_propFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Cycle_lengthFigure() {
		return fFigureController2Cycle_lengthFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Base_setpointFigure() {
		return fFigureController2Base_setpointFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Ramp_highFigure() {
		return fFigureController2Ramp_highFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Ramp_lowFigure() {
		return fFigureController2Ramp_lowFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Range_highFigure() {
		return fFigureController2Range_highFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Range_lowFigure() {
		return fFigureController2Range_lowFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Prob_offFigure() {
		return fFigureController2Prob_offFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Output_stateFigure() {
		return fFigureController2Output_stateFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Output_setpointFigure() {
		return fFigureController2Output_setpointFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureController2Control_modeFigure() {
		return fFigureController2Control_modeFigure;
	}


}


	
	}
