package visGrid.diagram.providers;

/**
 * @generated
 */
public class VisGridModelingAssistantProvider
		extends org.eclipse.gmf.runtime.emf.ui.services.modelingassistant.ModelingAssistantProvider {

		/**
 * @generated
 */
	public java.util.List getTypesForPopupBar(org.eclipse.core.runtime.IAdaptable host) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) host.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
							if (editPart instanceof visGrid.diagram.edit.parts.GridEditPart) {
			java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(78);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Solar_2001);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Volt_var_control_2002);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Billdump_2003);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Restoration_2004);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Meter_2005);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Fuse_2006);
							types.add(visGrid.diagram.providers.VisGridElementTypes.House_2007);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Generator_2008);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Node_2009);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Range_2010);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Occupantload_2011);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Plc_2012);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Fault_check_2013);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Underground_line_2014);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Histogram_2015);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Transformer_2016);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Energy_storage_2017);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Regulator_2018);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_configuration_2019);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Evcharger_2020);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Capbank_2021);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Stubauction_2022);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Transformer_configuration_2023);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Climate_2024);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Pqload_2025);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_conductor_2026);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Clotheswasher_2027);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Recorder_2028);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Link_2029);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Switch_2030);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Refrigerator_2031);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_node_2032);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_2033);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Frequency_gen_2034);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Shaper_2035);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Freezer_2036);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Line_configuration_2037);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Weather_2038);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Microwave_2039);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Rectifier_2040);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Line_2041);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Overhead_line_2042);
							types.add(visGrid.diagram.providers.VisGridElementTypes.ZIPload_2043);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Overhead_line_conductor_2044);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Battery_2045);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Load_2046);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Line_spacing_2047);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Voltdump_2048);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Capacitor_2049);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Controller_2050);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Collector_2051);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Dryer_2052);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Lights_2053);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Motor_2054);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Csv_reader_2055);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Plugload_2056);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Underground_line_conductor_2057);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Office_2058);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Regulator_configuration_2059);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_meter_2060);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Auction_2061);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Microturbine_2062);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Dishwasher_2063);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Relay_2064);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Power_electronics_2065);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Diesel_dg_2066);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Comm_2067);
							types.add(visGrid.diagram.providers.VisGridElementTypes.House_a_2068);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Residential_enduse_2069);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Dc_dc_converter_2070);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Inverter_2071);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Controller2_2072);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Windturb_dg_2073);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Multizone_2074);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Series_reactor_2075);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Substation_2076);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Player_2077);
							types.add(visGrid.diagram.providers.VisGridElementTypes.Waterheater_2078);
							return types;
		}
																																																																																																																																																																																																																																																																																																																																																																																																													return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getRelTypesOnSource(org.eclipse.core.runtime.IAdaptable source) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart sourceEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) source.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
																																																																																																																																																																																																																																																																																																																																																																																																										return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getRelTypesOnTarget(org.eclipse.core.runtime.IAdaptable target) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) target.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
																																																																																																																																																																																																																																																																																																																																																																																																										return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getRelTypesOnSourceAndTarget(
			org.eclipse.core.runtime.IAdaptable source, org.eclipse.core.runtime.IAdaptable target) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart sourceEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) source.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) target.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
																																																																																																																																																																																																																																																																																																																																																																																																										return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getTypesForSource(org.eclipse.core.runtime.IAdaptable target,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) target.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
																																																																																																																																																																																																																																																																																																																																																																																																										return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public java.util.List getTypesForTarget(org.eclipse.core.runtime.IAdaptable source,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart sourceEditPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) source.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
																																																																																																																																																																																																																																																																																																																																																																																																										return java.util.Collections.EMPTY_LIST;
	}

		/**
 * @generated
 */
	public org.eclipse.emf.ecore.EObject selectExistingElementForSource(
			org.eclipse.core.runtime.IAdaptable target,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		return selectExistingElement(target, getTypesForSource(target, relationshipType));
	}

		/**
 * @generated
 */
	public org.eclipse.emf.ecore.EObject selectExistingElementForTarget(
			org.eclipse.core.runtime.IAdaptable source,
			org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		return selectExistingElement(source, getTypesForTarget(source, relationshipType));
	}

		/**
 * @generated
 */
	protected org.eclipse.emf.ecore.EObject selectExistingElement(
			org.eclipse.core.runtime.IAdaptable host, java.util.Collection types) {
		if (types.isEmpty()) {
			return null;
		}
		org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart =
				(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) host.getAdapter(
						org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart.class);
		if (editPart == null) {
			return null;
		}
		org.eclipse.gmf.runtime.notation.Diagram diagram =
				(org.eclipse.gmf.runtime.notation.Diagram) editPart.getRoot().getContents().getModel();
		java.util.HashSet<org.eclipse.emf.ecore.EObject> elements = new java.util.HashSet<org.eclipse.emf.ecore.EObject>();
		for (java.util.Iterator<org.eclipse.emf.ecore.EObject> it = diagram.getElement().eAllContents(); it.hasNext();) {
	org.eclipse.emf.ecore.EObject element = it.next();
			if (isApplicableElement(element, types)) {
				elements.add(element);
			}
		}
		if (elements.isEmpty()) {
			return null;
		}
		return selectElement((org.eclipse.emf.ecore.EObject[]) elements.toArray(
				new org.eclipse.emf.ecore.EObject[elements.size()]));
	}

		/**
 * @generated
 */
	protected boolean isApplicableElement(org.eclipse.emf.ecore.EObject element, java.util.Collection types) {
		org.eclipse.gmf.runtime.emf.type.core.IElementType type =
				org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getElementType(element);
		return types.contains(type);
	}

		/**
 * @generated
 */
	protected org.eclipse.emf.ecore.EObject selectElement(org.eclipse.emf.ecore.EObject[] elements) {
		org.eclipse.swt.widgets.Shell shell = org.eclipse.swt.widgets.Display.getCurrent().getActiveShell();
		org.eclipse.jface.viewers.ILabelProvider labelProvider =
			new org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider(
				visGrid.diagram.part.VisGridDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());
		org.eclipse.ui.dialogs.ElementListSelectionDialog dialog =
				new org.eclipse.ui.dialogs.ElementListSelectionDialog(shell, labelProvider);
		dialog.setMessage(visGrid.diagram.part.Messages.VisGridModelingAssistantProviderMessage);
		dialog.setTitle(visGrid.diagram.part.Messages.VisGridModelingAssistantProviderTitle);
		dialog.setMultipleSelection(false);
		dialog.setElements(elements);
		org.eclipse.emf.ecore.EObject selected = null;
		if (dialog.open() == org.eclipse.jface.window.Window.OK) {
			selected = (org.eclipse.emf.ecore.EObject) dialog.getFirstResult();
		}
		return selected;
	}
	}
