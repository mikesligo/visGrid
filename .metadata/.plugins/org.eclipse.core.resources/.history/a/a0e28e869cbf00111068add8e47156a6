/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package testLink;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see testLink.TestLinkFactory
 * @model kind="package"
 * @generated
 */
public interface TestLinkPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "testLink";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://d.c";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "testLink";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	TestLinkPackage eINSTANCE = testLink.impl.TestLinkPackageImpl.init();

	/**
	 * The meta object id for the '{@link testLink.impl.topImpl <em>top</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see testLink.impl.topImpl
	 * @see testLink.impl.TestLinkPackageImpl#gettop()
	 * @generated
	 */
	int TOP = 0;

	/**
	 * The feature id for the '<em><b>EReference0</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP__EREFERENCE0 = 0;

	/**
	 * The feature id for the '<em><b>EReference1</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP__EREFERENCE1 = 1;

	/**
	 * The feature id for the '<em><b>EReference2</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP__EREFERENCE2 = 2;

	/**
	 * The feature id for the '<em><b>EReference3</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP__EREFERENCE3 = 3;

	/**
	 * The number of structural features of the '<em>top</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TOP_FEATURE_COUNT = 4;

	/**
	 * The meta object id for the '{@link testLink.impl.connectImpl <em>connect</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see testLink.impl.connectImpl
	 * @see testLink.impl.TestLinkPackageImpl#getconnect()
	 * @generated
	 */
	int CONNECT = 4;

	/**
	 * The feature id for the '<em><b>EReference0</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONNECT__EREFERENCE0 = 0;

	/**
	 * The number of structural features of the '<em>connect</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONNECT_FEATURE_COUNT = 1;

	/**
	 * The meta object id for the '{@link testLink.impl.oneImpl <em>one</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see testLink.impl.oneImpl
	 * @see testLink.impl.TestLinkPackageImpl#getone()
	 * @generated
	 */
	int ONE = 1;

	/**
	 * The feature id for the '<em><b>EReference0</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ONE__EREFERENCE0 = CONNECT__EREFERENCE0;

	/**
	 * The number of structural features of the '<em>one</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ONE_FEATURE_COUNT = CONNECT_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link testLink.impl.twoImpl <em>two</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see testLink.impl.twoImpl
	 * @see testLink.impl.TestLinkPackageImpl#gettwo()
	 * @generated
	 */
	int TWO = 2;

	/**
	 * The feature id for the '<em><b>EReference0</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TWO__EREFERENCE0 = CONNECT__EREFERENCE0;

	/**
	 * The number of structural features of the '<em>two</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TWO_FEATURE_COUNT = CONNECT_FEATURE_COUNT + 0;

	/**
	 * The meta object id for the '{@link testLink.impl.threeImpl <em>three</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see testLink.impl.threeImpl
	 * @see testLink.impl.TestLinkPackageImpl#getthree()
	 * @generated
	 */
	int THREE = 3;

	/**
	 * The feature id for the '<em><b>EReference0</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THREE__EREFERENCE0 = CONNECT__EREFERENCE0;

	/**
	 * The number of structural features of the '<em>three</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THREE_FEATURE_COUNT = CONNECT_FEATURE_COUNT + 0;


	/**
	 * Returns the meta object for class '{@link testLink.top <em>top</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>top</em>'.
	 * @see testLink.top
	 * @generated
	 */
	EClass gettop();

	/**
	 * Returns the meta object for the containment reference list '{@link testLink.top#getEReference0 <em>EReference0</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>EReference0</em>'.
	 * @see testLink.top#getEReference0()
	 * @see #gettop()
	 * @generated
	 */
	EReference gettop_EReference0();

	/**
	 * Returns the meta object for the containment reference list '{@link testLink.top#getEReference1 <em>EReference1</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>EReference1</em>'.
	 * @see testLink.top#getEReference1()
	 * @see #gettop()
	 * @generated
	 */
	EReference gettop_EReference1();

	/**
	 * Returns the meta object for the containment reference list '{@link testLink.top#getEReference2 <em>EReference2</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>EReference2</em>'.
	 * @see testLink.top#getEReference2()
	 * @see #gettop()
	 * @generated
	 */
	EReference gettop_EReference2();

	/**
	 * Returns the meta object for the containment reference list '{@link testLink.top#getEReference3 <em>EReference3</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>EReference3</em>'.
	 * @see testLink.top#getEReference3()
	 * @see #gettop()
	 * @generated
	 */
	EReference gettop_EReference3();

	/**
	 * Returns the meta object for class '{@link testLink.one <em>one</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>one</em>'.
	 * @see testLink.one
	 * @generated
	 */
	EClass getone();

	/**
	 * Returns the meta object for class '{@link testLink.two <em>two</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>two</em>'.
	 * @see testLink.two
	 * @generated
	 */
	EClass gettwo();

	/**
	 * Returns the meta object for class '{@link testLink.three <em>three</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>three</em>'.
	 * @see testLink.three
	 * @generated
	 */
	EClass getthree();

	/**
	 * Returns the meta object for class '{@link testLink.connect <em>connect</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>connect</em>'.
	 * @see testLink.connect
	 * @generated
	 */
	EClass getconnect();

	/**
	 * Returns the meta object for the reference '{@link testLink.connect#getEReference0 <em>EReference0</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>EReference0</em>'.
	 * @see testLink.connect#getEReference0()
	 * @see #getconnect()
	 * @generated
	 */
	EReference getconnect_EReference0();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	TestLinkFactory getTestLinkFactory();

	/**
	 * <!-- begin-user-doc -->
	 * Defines literals for the meta objects that represent
	 * <ul>
	 *   <li>each class,</li>
	 *   <li>each feature of each class,</li>
	 *   <li>each enum,</li>
	 *   <li>and each data type</li>
	 * </ul>
	 * <!-- end-user-doc -->
	 * @generated
	 */
	interface Literals {
		/**
		 * The meta object literal for the '{@link testLink.impl.topImpl <em>top</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see testLink.impl.topImpl
		 * @see testLink.impl.TestLinkPackageImpl#gettop()
		 * @generated
		 */
		EClass TOP = eINSTANCE.gettop();

		/**
		 * The meta object literal for the '<em><b>EReference0</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP__EREFERENCE0 = eINSTANCE.gettop_EReference0();

		/**
		 * The meta object literal for the '<em><b>EReference1</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP__EREFERENCE1 = eINSTANCE.gettop_EReference1();

		/**
		 * The meta object literal for the '<em><b>EReference2</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP__EREFERENCE2 = eINSTANCE.gettop_EReference2();

		/**
		 * The meta object literal for the '<em><b>EReference3</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TOP__EREFERENCE3 = eINSTANCE.gettop_EReference3();

		/**
		 * The meta object literal for the '{@link testLink.impl.oneImpl <em>one</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see testLink.impl.oneImpl
		 * @see testLink.impl.TestLinkPackageImpl#getone()
		 * @generated
		 */
		EClass ONE = eINSTANCE.getone();

		/**
		 * The meta object literal for the '{@link testLink.impl.twoImpl <em>two</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see testLink.impl.twoImpl
		 * @see testLink.impl.TestLinkPackageImpl#gettwo()
		 * @generated
		 */
		EClass TWO = eINSTANCE.gettwo();

		/**
		 * The meta object literal for the '{@link testLink.impl.threeImpl <em>three</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see testLink.impl.threeImpl
		 * @see testLink.impl.TestLinkPackageImpl#getthree()
		 * @generated
		 */
		EClass THREE = eINSTANCE.getthree();

		/**
		 * The meta object literal for the '{@link testLink.impl.connectImpl <em>connect</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see testLink.impl.connectImpl
		 * @see testLink.impl.TestLinkPackageImpl#getconnect()
		 * @generated
		 */
		EClass CONNECT = eINSTANCE.getconnect();

		/**
		 * The meta object literal for the '<em><b>EReference0</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONNECT__EREFERENCE0 = eINSTANCE.getconnect_EReference0();

	}

} //TestLinkPackage
