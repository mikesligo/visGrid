package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class TransformerEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2056;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public TransformerEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.TransformerItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new Transformer_configurationFigure();
	}

		/**
 * @generated
 */
	public Transformer_configurationFigure getPrimaryShape() {
		return (Transformer_configurationFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.TransformerNameEditPart) {
			((visGrid.diagram.edit.parts.TransformerNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureTransformer_configurationNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.TransformerNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.TransformerNameEditPart.VISUAL_ID));
		}
	

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnTarget() {
		java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(1);
				types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_4017);
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMATypesForSource(org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_4017) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Connections_2047);
					}
				return types;
	}


		
	
	
	
/**
 * @generated
 */
public class Transformer_configurationFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationConnect_typeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationInstall_typeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationPrimary_voltageFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationSecondary_voltageFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationPower_ratingFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationPowerA_ratingFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationPowerB_ratingFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationPowerC_ratingFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationResistanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationReactanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationImpedanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationResistance1Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationReactance1Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationImpedance1Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationResistance2Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationReactance2Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationImpedance2Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationShunt_resistanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationShunt_reactanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformer_configurationShunt_impedanceFigure; 


	/**
	 * @generated
	 */
	public Transformer_configurationFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureTransformer_configurationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationNameFigure.setText("<...>");

this.add(fFigureTransformer_configurationNameFigure);



fFigureTransformer_configurationConnect_typeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationConnect_typeFigure.setText("<...>");

this.add(fFigureTransformer_configurationConnect_typeFigure);



fFigureTransformer_configurationInstall_typeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationInstall_typeFigure.setText("<...>");

this.add(fFigureTransformer_configurationInstall_typeFigure);



fFigureTransformer_configurationPrimary_voltageFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationPrimary_voltageFigure.setText("<...>");

this.add(fFigureTransformer_configurationPrimary_voltageFigure);



fFigureTransformer_configurationSecondary_voltageFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationSecondary_voltageFigure.setText("<...>");

this.add(fFigureTransformer_configurationSecondary_voltageFigure);



fFigureTransformer_configurationPower_ratingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationPower_ratingFigure.setText("<...>");

this.add(fFigureTransformer_configurationPower_ratingFigure);



fFigureTransformer_configurationPowerA_ratingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationPowerA_ratingFigure.setText("<...>");

this.add(fFigureTransformer_configurationPowerA_ratingFigure);



fFigureTransformer_configurationPowerB_ratingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationPowerB_ratingFigure.setText("<...>");

this.add(fFigureTransformer_configurationPowerB_ratingFigure);



fFigureTransformer_configurationPowerC_ratingFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationPowerC_ratingFigure.setText("<...>");

this.add(fFigureTransformer_configurationPowerC_ratingFigure);



fFigureTransformer_configurationResistanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationResistanceFigure.setText("<...>");

this.add(fFigureTransformer_configurationResistanceFigure);



fFigureTransformer_configurationReactanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationReactanceFigure.setText("<...>");

this.add(fFigureTransformer_configurationReactanceFigure);



fFigureTransformer_configurationImpedanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationImpedanceFigure.setText("<...>");

this.add(fFigureTransformer_configurationImpedanceFigure);



fFigureTransformer_configurationResistance1Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationResistance1Figure.setText("<...>");

this.add(fFigureTransformer_configurationResistance1Figure);



fFigureTransformer_configurationReactance1Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationReactance1Figure.setText("<...>");

this.add(fFigureTransformer_configurationReactance1Figure);



fFigureTransformer_configurationImpedance1Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationImpedance1Figure.setText("<...>");

this.add(fFigureTransformer_configurationImpedance1Figure);



fFigureTransformer_configurationResistance2Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationResistance2Figure.setText("<...>");

this.add(fFigureTransformer_configurationResistance2Figure);



fFigureTransformer_configurationReactance2Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationReactance2Figure.setText("<...>");

this.add(fFigureTransformer_configurationReactance2Figure);



fFigureTransformer_configurationImpedance2Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationImpedance2Figure.setText("<...>");

this.add(fFigureTransformer_configurationImpedance2Figure);



fFigureTransformer_configurationShunt_resistanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationShunt_resistanceFigure.setText("<...>");

this.add(fFigureTransformer_configurationShunt_resistanceFigure);



fFigureTransformer_configurationShunt_reactanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationShunt_reactanceFigure.setText("<...>");

this.add(fFigureTransformer_configurationShunt_reactanceFigure);



fFigureTransformer_configurationShunt_impedanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureTransformer_configurationShunt_impedanceFigure.setText("<...>");

this.add(fFigureTransformer_configurationShunt_impedanceFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationNameFigure() {
		return fFigureTransformer_configurationNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationConnect_typeFigure() {
		return fFigureTransformer_configurationConnect_typeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationInstall_typeFigure() {
		return fFigureTransformer_configurationInstall_typeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationPrimary_voltageFigure() {
		return fFigureTransformer_configurationPrimary_voltageFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationSecondary_voltageFigure() {
		return fFigureTransformer_configurationSecondary_voltageFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationPower_ratingFigure() {
		return fFigureTransformer_configurationPower_ratingFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationPowerA_ratingFigure() {
		return fFigureTransformer_configurationPowerA_ratingFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationPowerB_ratingFigure() {
		return fFigureTransformer_configurationPowerB_ratingFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationPowerC_ratingFigure() {
		return fFigureTransformer_configurationPowerC_ratingFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationResistanceFigure() {
		return fFigureTransformer_configurationResistanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationReactanceFigure() {
		return fFigureTransformer_configurationReactanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationImpedanceFigure() {
		return fFigureTransformer_configurationImpedanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationResistance1Figure() {
		return fFigureTransformer_configurationResistance1Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationReactance1Figure() {
		return fFigureTransformer_configurationReactance1Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationImpedance1Figure() {
		return fFigureTransformer_configurationImpedance1Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationResistance2Figure() {
		return fFigureTransformer_configurationResistance2Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationReactance2Figure() {
		return fFigureTransformer_configurationReactance2Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationImpedance2Figure() {
		return fFigureTransformer_configurationImpedance2Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationShunt_resistanceFigure() {
		return fFigureTransformer_configurationShunt_resistanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationShunt_reactanceFigure() {
		return fFigureTransformer_configurationShunt_reactanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformer_configurationShunt_impedanceFigure() {
		return fFigureTransformer_configurationShunt_impedanceFigure;
	}


}


	
	}
