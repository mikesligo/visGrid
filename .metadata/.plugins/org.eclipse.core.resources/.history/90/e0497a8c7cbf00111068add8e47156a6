	package visGrid.diagram.edit.policies;

	/**
 * @generated
 */
public class GridCanonicalEditPolicy extends org.eclipse.gmf.runtime.diagram.ui.editpolicies.CanonicalEditPolicy {
	

		
		/**
 * @generated
 */
	protected void refreshOnActivate() {
		// Need to activate editpart children before invoking the canonical refresh for EditParts to add event listeners
		java.util.List<?> c = getHost().getChildren();
		for (int i = 0; i < c.size(); i++) {
			((org.eclipse.gef.EditPart) c.get(i)).activate();
		}
		super.refreshOnActivate();
	}

	
	/**
 * @generated
 */
	protected org.eclipse.emf.ecore.EStructuralFeature getFeatureToSynchronize() {
		return visGrid.VisGridPackage.eINSTANCE.getGrid_Connection();
	}
	
	/**
 * @generated
 */
@SuppressWarnings("rawtypes")

protected java.util.List getSemanticChildrenList() {
		org.eclipse.gmf.runtime.notation.View viewObject = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
	java.util.LinkedList<org.eclipse.emf.ecore.EObject> result = new java.util.LinkedList<org.eclipse.emf.ecore.EObject>();
	java.util.List<visGrid.diagram.part.VisGridNodeDescriptor> childDescriptors = visGrid.diagram.part.VisGridDiagramUpdater.getGrid_1000SemanticChildren(viewObject);
	for (visGrid.diagram.part.VisGridNodeDescriptor d : childDescriptors) {
		result.add(d.getModelElement());
	}
	return result;
	}

	/**
 * @generated
 */
protected boolean isOrphaned(java.util.Collection<org.eclipse.emf.ecore.EObject> semanticChildren, final org.eclipse.gmf.runtime.notation.View view) {
		return isMyDiagramElement(view) && !semanticChildren.contains(view.getElement());
}

	/**
 * @generated
 */
private boolean isMyDiagramElement(org.eclipse.gmf.runtime.notation.View view) {
		int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view);
		switch (visualID) {
		case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
		return true;
	}
	return false;
		}

	/**
 * @generated
 */
protected void refreshSemantic() {
	if (resolveSemanticElement() == null) {
		return;
	}
	java.util.LinkedList<org.eclipse.core.runtime.IAdaptable> createdViews = new java.util.LinkedList<org.eclipse.core.runtime.IAdaptable>();
			java.util.List<visGrid.diagram.part.VisGridNodeDescriptor> childDescriptors = visGrid.diagram.part.VisGridDiagramUpdater.getGrid_1000SemanticChildren((org.eclipse.gmf.runtime.notation.View) getHost().getModel());
		java.util.LinkedList<org.eclipse.gmf.runtime.notation.View> orphaned = new java.util.LinkedList<org.eclipse.gmf.runtime.notation.View>();
		// we care to check only views we recognize as ours
		java.util.LinkedList<org.eclipse.gmf.runtime.notation.View> knownViewChildren = new java.util.LinkedList<org.eclipse.gmf.runtime.notation.View>();
		for (org.eclipse.gmf.runtime.notation.View v : getViewChildren()) {
			if (isMyDiagramElement(v)) {
				knownViewChildren.add(v);
			}
					}
		// alternative to #cleanCanonicalSemanticChildren(getViewChildren(), semanticChildren)
				//
		// iteration happens over list of desired semantic elements, trying to find best matching View, while original CEP
		// iterates views, potentially losing view (size/bounds) information - i.e. if there are few views to reference same EObject, only last one 
		// to answer isOrphaned == true will be used for the domain element representation, see #cleanCanonicalSemanticChildren()
		for (java.util.Iterator<visGrid.diagram.part.VisGridNodeDescriptor> descriptorsIterator = childDescriptors.iterator(); descriptorsIterator.hasNext();) {
	visGrid.diagram.part.VisGridNodeDescriptor next = descriptorsIterator.next();
			String hint = visGrid.diagram.part.VisGridVisualIDRegistry.getType(next.getVisualID());
			java.util.LinkedList<org.eclipse.gmf.runtime.notation.View> perfectMatch = new java.util.LinkedList<org.eclipse.gmf.runtime.notation.View>(); // both semanticElement and hint match that of NodeDescriptor
						for (org.eclipse.gmf.runtime.notation.View childView : getViewChildren()) {
				org.eclipse.emf.ecore.EObject semanticElement = childView.getElement();
				if (next.getModelElement().equals(semanticElement)) {
					if (hint.equals(childView.getType())) {
						perfectMatch.add(childView);
						// actually, can stop iteration over view children here, but
						// may want to use not the first view but last one as a 'real' match (the way original CEP does
						// with its trick with viewToSemanticMap inside #cleanCanonicalSemanticChildren
										}
									}
			}
			if (perfectMatch.size() > 0) {
				descriptorsIterator.remove(); // precise match found no need to create anything for the NodeDescriptor
				// use only one view (first or last?), keep rest as orphaned for further consideration
				knownViewChildren.remove(perfectMatch.getFirst());
						}
		}
		// those left in knownViewChildren are subject to removal - they are our diagram elements we didn't find match to,
		// or those we have potential matches to, and thus need to be recreated, preserving size/location information.
		orphaned.addAll(knownViewChildren);
		//
				java.util.ArrayList<org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor> viewDescriptors = new java.util.ArrayList<org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor>(childDescriptors.size());		
		for (visGrid.diagram.part.VisGridNodeDescriptor next : childDescriptors) {
			String hint = visGrid.diagram.part.VisGridVisualIDRegistry.getType(next.getVisualID());
			org.eclipse.core.runtime.IAdaptable elementAdapter = new CanonicalElementAdapter(next.getModelElement(), hint);
			org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor descriptor = new org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest.ViewDescriptor(elementAdapter, org.eclipse.gmf.runtime.notation.Node.class, hint, org.eclipse.gmf.runtime.diagram.core.util.ViewUtil.APPEND, false, host().getDiagramPreferencesHint());
			viewDescriptors.add(descriptor);
				}

		boolean changed = deleteViews(orphaned.iterator());
		//
		org.eclipse.gmf.runtime.diagram.ui.requests.CreateViewRequest request = getCreateViewRequest(viewDescriptors);
		org.eclipse.gef.commands.Command cmd = getCreateViewCommand(request);
		if (cmd != null && cmd.canExecute() ) {
			org.eclipse.gmf.runtime.diagram.ui.commands.SetViewMutabilityCommand.makeMutable(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(host().getNotationView())).execute();
			executeCommand(cmd);
						@SuppressWarnings("unchecked")

			java.util.List<org.eclipse.core.runtime.IAdaptable> nl = (java.util.List<org.eclipse.core.runtime.IAdaptable>) request.getNewObject();
			createdViews.addAll(nl);
		}
		if (changed || createdViews.size() > 0) {
			postProcessRefreshSemantic(createdViews);
		}

	
		if (createdViews.size() > 1) {
		// perform a layout of the container
		org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand layoutCmd = new org.eclipse.gmf.runtime.diagram.ui.commands.DeferredLayoutCommand(host().getEditingDomain(), createdViews, host());
		executeCommand(new org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy(layoutCmd));
	}

	
	makeViewsImmutable(createdViews);
}
			}
