package visGrid.diagram.application;

/**
 * @generated
 */
public class DiagramEditorActionBarAdvisor extends org.eclipse.ui.application.ActionBarAdvisor {

	/**
 * @generated
 */
	private org.eclipse.ui.actions.ActionFactory.IWorkbenchAction lockToolBarAction;

	/**
 * @generated
 */
    private org.eclipse.ui.actions.ActionFactory.IWorkbenchAction toggleCoolbarAction;

	/**
 * @generated
 */
	public DiagramEditorActionBarAdvisor(org.eclipse.ui.application.IActionBarConfigurer configurer) {
		super(configurer);
	}

	/**
 * @generated
 */
	private org.eclipse.ui.IWorkbenchWindow getWindow() {
		return getActionBarConfigurer().getWindowConfigurer().getWindow();
	}

	/**
 * @generated
 */
	protected void makeActions(org.eclipse.ui.IWorkbenchWindow window) {
		toggleCoolbarAction = org.eclipse.ui.actions.ActionFactory.TOGGLE_COOLBAR.create(window);
        register(toggleCoolbarAction);
        lockToolBarAction = org.eclipse.ui.actions.ActionFactory.LOCK_TOOL_BAR.create(window);
        register(lockToolBarAction);
		
	register(org.eclipse.ui.actions.ActionFactory.CLOSE.create(window));

	register(org.eclipse.ui.actions.ActionFactory.CLOSE_ALL.create(window));

	register(org.eclipse.ui.actions.ActionFactory.SAVE.create(window));

	register(org.eclipse.ui.actions.ActionFactory.SAVE_AS.create(window));

	register(org.eclipse.ui.actions.ActionFactory.SAVE_ALL.create(window));

	register(org.eclipse.ui.actions.ActionFactory.QUIT.create(window));

	register(org.eclipse.ui.actions.ActionFactory.UNDO.create(window));

	register(org.eclipse.ui.actions.ActionFactory.REDO.create(window));

	register(org.eclipse.ui.actions.ActionFactory.CUT.create(window));

	register(org.eclipse.ui.actions.ActionFactory.COPY.create(window));

	register(org.eclipse.ui.actions.ActionFactory.PASTE.create(window));

	register(org.eclipse.ui.actions.ActionFactory.DELETE.create(window));

	register(org.eclipse.ui.actions.ActionFactory.SELECT_ALL.create(window));

	register(org.eclipse.ui.actions.ActionFactory.OPEN_NEW_WINDOW.create(window));

	register(org.eclipse.ui.actions.ActionFactory.PRINT.create(window));
	}

	/**
 * @generated
 */
	protected void fillMenuBar(org.eclipse.jface.action.IMenuManager menu) {
		
	
		{
		org.eclipse.jface.action.IMenuManager menuX = new  org.eclipse.jface.action.MenuManager(
		visGrid.diagram.part.Messages.ApplicationMenuName_File, org.eclipse.ui.IWorkbenchActionConstants.M_FILE);
		
	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.FILE_START));

		{
		org.eclipse.jface.action.IMenuManager menuXX = new  org.eclipse.jface.action.MenuManager(
		visGrid.diagram.part.Messages.ApplicationMenuName_New, "new");
		
	menuXX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menuX.add(menuXX);
	}
	
	menuX.add(new org.eclipse.jface.action.Separator());

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));

	menuX.add(new org.eclipse.jface.action.Separator());

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.CLOSE.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.CLOSE_ALL.getId()));

	menuX.add(new org.eclipse.jface.action.Separator());

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.SAVE.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.SAVE_AS.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.SAVE_ALL.getId()));

	menuX.add(new org.eclipse.jface.action.Separator());

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.QUIT.getId()));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.FILE_END));
		menu.add(menuX);
	}
	
		{
		org.eclipse.jface.action.IMenuManager menuX = new  org.eclipse.jface.action.MenuManager(
		visGrid.diagram.part.Messages.ApplicationMenuName_Edit, org.eclipse.ui.IWorkbenchActionConstants.M_EDIT);
		
	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.EDIT_START));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.UNDO.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.REDO.getId()));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.UNDO_EXT));

	menuX.add(new org.eclipse.jface.action.Separator());

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.CUT.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.COPY.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.PASTE.getId()));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.CUT_EXT));

	menuX.add(new org.eclipse.jface.action.Separator());

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.DELETE.getId()));

	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.SELECT_ALL.getId()));

	menuX.add(new org.eclipse.jface.action.Separator());

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.ADD_EXT));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.EDIT_END));

	menuX.add(new org.eclipse.jface.action.Separator(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menu.add(menuX);
	}
	
	menu.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));

		{
		org.eclipse.jface.action.IMenuManager menuX = new  org.eclipse.jface.action.MenuManager(
		visGrid.diagram.part.Messages.ApplicationMenuName_Window, org.eclipse.ui.IWorkbenchActionConstants.M_WINDOW);
		
	
	menuX.add(getAction(org.eclipse.ui.actions.ActionFactory.OPEN_NEW_WINDOW.getId()));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menu.add(menuX);
	}
	
		{
		org.eclipse.jface.action.IMenuManager menuX = new  org.eclipse.jface.action.MenuManager(
		visGrid.diagram.part.Messages.ApplicationMenuName_Help, org.eclipse.ui.IWorkbenchActionConstants.M_HELP);
		
	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.HELP_START));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.HELP_END));

	menuX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		menu.add(menuX);
	}
		}

	/**
 * @generated
 */
	protected void fillCoolBar(org.eclipse.jface.action.ICoolBarManager toolBar) {
		org.eclipse.jface.action.IMenuManager popUpMenu = new org.eclipse.jface.action.MenuManager();
		popUpMenu.add(new org.eclipse.jface.action.ActionContributionItem(lockToolBarAction));
		popUpMenu.add(new org.eclipse.jface.action.ActionContributionItem(toggleCoolbarAction));
		toolBar.setContextMenuManager(popUpMenu);
		
	
	toolBar.add(new org.eclipse.jface.action.GroupMarker("group.file"));

		{
		org.eclipse.jface.action.IToolBarManager toolBarX = new  org.eclipse.jface.action.ToolBarManager();
		
	toolBarX.add(new org.eclipse.jface.action.Separator(org.eclipse.ui.IWorkbenchActionConstants.NEW_GROUP));

	toolBarX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.NEW_EXT));

	toolBarX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.SAVE_GROUP));

	
	toolBarX.add(getAction(org.eclipse.ui.actions.ActionFactory.SAVE.getId()));

	toolBarX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.SAVE_EXT));

	
	toolBarX.add(getAction(org.eclipse.ui.actions.ActionFactory.PRINT.getId()));

	toolBarX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.PRINT_EXT));

	toolBarX.add(new org.eclipse.jface.action.Separator(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));
		toolBar.add(new org.eclipse.jface.action.ToolBarContributionItem(toolBarX, org.eclipse.ui.IWorkbenchActionConstants.TOOLBAR_FILE));
	}
	
	toolBar.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.MB_ADDITIONS));

	toolBar.add(new org.eclipse.jface.action.GroupMarker("group.nav"));

	toolBar.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.GROUP_EDITOR));

	toolBar.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.GROUP_HELP));

		{
		org.eclipse.jface.action.IToolBarManager toolBarX = new  org.eclipse.jface.action.ToolBarManager();
		
	toolBarX.add(new org.eclipse.jface.action.Separator(org.eclipse.ui.IWorkbenchActionConstants.GROUP_HELP));

	toolBarX.add(new org.eclipse.jface.action.GroupMarker(org.eclipse.ui.IWorkbenchActionConstants.GROUP_APP));
		toolBar.add(new org.eclipse.jface.action.ToolBarContributionItem(toolBarX, org.eclipse.ui.IWorkbenchActionConstants.TOOLBAR_HELP));
	}
		}

		/**
 * @generated
 */
	private static boolean openEditor(org.eclipse.ui.IWorkbench workbench, org.eclipse.emf.common.util.URI fileURI) {
		org.eclipse.ui.IWorkbenchWindow workbenchWindow = workbench.getActiveWorkbenchWindow();
		org.eclipse.ui.IWorkbenchPage page = workbenchWindow.getActivePage();
		org.eclipse.ui.IEditorDescriptor editorDescriptor =
			workbench.getEditorRegistry().getDefaultEditor(fileURI.toFileString());
		if (editorDescriptor == null) {
			org.eclipse.jface.dialogs.MessageDialog.openError(workbenchWindow.getShell(), 
                visGrid.diagram.part.Messages.DiagramEditorActionBarAdvisor_DefaultFileEditorTitle,
				org.eclipse.osgi.util.NLS.bind(
				    visGrid.diagram.part.Messages.DiagramEditorActionBarAdvisor_DefaultFileEditorMessage, 
				    fileURI.toFileString()));
			return false;
		} else {
			try {
				page.openEditor(new org.eclipse.emf.common.ui.URIEditorInput(fileURI), editorDescriptor.getId());
			} catch (org.eclipse.ui.PartInitException exception) {
				org.eclipse.jface.dialogs.MessageDialog.openError(
					workbenchWindow.getShell(), 
					visGrid.diagram.part.Messages.DiagramEditorActionBarAdvisor_DefaultEditorOpenErrorTitle,
					exception.getMessage());
				return false;
			}
		}
		return true;
	}

	
	/**
 * @generated
 */
	public static class NewDiagramAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		/**
 * @generated
 */
		public void run(org.eclipse.jface.action.IAction action) {
			visGrid.diagram.part.VisGridCreationWizard wizard =
				new visGrid.diagram.part.VisGridCreationWizard();
			wizard.init(getWindow().getWorkbench(), org.eclipse.jface.viewers.StructuredSelection.EMPTY);
			org.eclipse.jface.wizard.WizardDialog wizardDialog =
				new org.eclipse.jface.wizard.WizardDialog(getWindow().getShell(), wizard);
			wizardDialog.open();
		}
	}

	/**
 * @generated
 */
	public static class OpenURIAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		/**
 * @generated
 */
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog loadResourceDialog =
				new org.eclipse.emf.edit.ui.action.LoadResourceAction.LoadResourceDialog(getWindow().getShell());
			if (org.eclipse.jface.dialogs.Dialog.OK == loadResourceDialog.open()) {
				for (java.util.Iterator i = loadResourceDialog.getURIs().iterator(); i.hasNext();) {
					openEditor(getWindow().getWorkbench(), (org.eclipse.emf.common.util.URI) i.next());
				}
			}
		}
	}

	/**
 * @generated
 */
	public static class OpenAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		/**
 * @generated
 */
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.swt.widgets.FileDialog fileDialog =
				new org.eclipse.swt.widgets.FileDialog(getWindow().getShell(), org.eclipse.swt.SWT.OPEN);
			fileDialog.open();
			if (fileDialog.getFileName() != null && fileDialog.getFileName().length() > 0) {
				openEditor(getWindow().getWorkbench(), org.eclipse.emf.common.util.URI.createFileURI(
					fileDialog.getFilterPath() + java.io.File.separator + fileDialog.getFileName()));
			}
		}
	}
	/**
 * @generated
 */
	public static class AboutAction extends org.eclipse.emf.common.ui.action.WorkbenchWindowActionDelegate {

		/**
 * @generated
 */
		public void run(org.eclipse.jface.action.IAction action) {
			org.eclipse.jface.dialogs.MessageDialog.openInformation(getWindow().getShell(), 
                visGrid.diagram.part.Messages.DiagramEditorActionBarAdvisor_AboutDialogTitle,
                visGrid.diagram.part.Messages.DiagramEditorActionBarAdvisor_AboutDialogMessage
				);
		}
	}

	}
