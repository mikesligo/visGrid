	package visGrid.diagram.part;

	/**
 * @generated
 */
public class VisGridDiagramUpdater {
		
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridNodeDescriptor> getSemanticChildren(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.GridEditPart.VISUAL_ID:
	return getGrid_1000SemanticChildren(view);
	}
		return java.util.Collections.emptyList();
}
	
	/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridNodeDescriptor> getGrid_1000SemanticChildren(org.eclipse.gmf.runtime.notation.View view) {
		if (!view.isSetElement()) {
	return java.util.Collections.emptyList();
}
visGrid.Grid modelElement = (visGrid.Grid) view.getElement();
	java.util.LinkedList<visGrid.diagram.part.VisGridNodeDescriptor> result = new java.util.LinkedList<visGrid.diagram.part.VisGridNodeDescriptor>();
						for (java.util.Iterator<?> it = modelElement.getSolar().iterator(); it.hasNext();) {
		visGrid.Solar childElement = (visGrid.Solar) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getVolt_var_control().iterator(); it.hasNext();) {
		visGrid.Volt_var_control childElement = (visGrid.Volt_var_control) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getBilldump().iterator(); it.hasNext();) {
		visGrid.Billdump childElement = (visGrid.Billdump) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRestoration().iterator(); it.hasNext();) {
		visGrid.Restoration childElement = (visGrid.Restoration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMeter().iterator(); it.hasNext();) {
		visGrid.Meter childElement = (visGrid.Meter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFuse().iterator(); it.hasNext();) {
		visGrid.Fuse childElement = (visGrid.Fuse) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getHouse().iterator(); it.hasNext();) {
		visGrid.House childElement = (visGrid.House) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getGenerator().iterator(); it.hasNext();) {
		visGrid.Generator childElement = (visGrid.Generator) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getNode().iterator(); it.hasNext();) {
		visGrid.Node childElement = (visGrid.Node) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRange().iterator(); it.hasNext();) {
		visGrid.Range childElement = (visGrid.Range) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOccupantload().iterator(); it.hasNext();) {
		visGrid.Occupantload childElement = (visGrid.Occupantload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPlc().iterator(); it.hasNext();) {
		visGrid.Plc childElement = (visGrid.Plc) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFault_check().iterator(); it.hasNext();) {
		visGrid.Fault_check childElement = (visGrid.Fault_check) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getUnderground_line().iterator(); it.hasNext();) {
		visGrid.Underground_line childElement = (visGrid.Underground_line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getHistogram().iterator(); it.hasNext();) {
		visGrid.Histogram childElement = (visGrid.Histogram) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTransformer().iterator(); it.hasNext();) {
		visGrid.Transformer childElement = (visGrid.Transformer) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getEnergy_storage().iterator(); it.hasNext();) {
		visGrid.Energy_storage childElement = (visGrid.Energy_storage) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRegulator().iterator(); it.hasNext();) {
		visGrid.Regulator childElement = (visGrid.Regulator) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_line_configuration().iterator(); it.hasNext();) {
		visGrid.Triplex_line_configuration childElement = (visGrid.Triplex_line_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getEvcharger().iterator(); it.hasNext();) {
		visGrid.Evcharger childElement = (visGrid.Evcharger) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCapbank().iterator(); it.hasNext();) {
		visGrid.Capbank childElement = (visGrid.Capbank) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getStubauction().iterator(); it.hasNext();) {
		visGrid.Stubauction childElement = (visGrid.Stubauction) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTransformer_configuration().iterator(); it.hasNext();) {
		visGrid.Transformer_configuration childElement = (visGrid.Transformer_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getClimate().iterator(); it.hasNext();) {
		visGrid.Climate childElement = (visGrid.Climate) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPqload().iterator(); it.hasNext();) {
		visGrid.Pqload childElement = (visGrid.Pqload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_line_conductor().iterator(); it.hasNext();) {
		visGrid.Triplex_line_conductor childElement = (visGrid.Triplex_line_conductor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getClotheswasher().iterator(); it.hasNext();) {
		visGrid.Clotheswasher childElement = (visGrid.Clotheswasher) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRecorder().iterator(); it.hasNext();) {
		visGrid.Recorder childElement = (visGrid.Recorder) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLink().iterator(); it.hasNext();) {
		visGrid.Link childElement = (visGrid.Link) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSwitch().iterator(); it.hasNext();) {
		visGrid.Switch childElement = (visGrid.Switch) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRefrigerator().iterator(); it.hasNext();) {
		visGrid.Refrigerator childElement = (visGrid.Refrigerator) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_node().iterator(); it.hasNext();) {
		visGrid.Triplex_node childElement = (visGrid.Triplex_node) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_line().iterator(); it.hasNext();) {
		visGrid.Triplex_line childElement = (visGrid.Triplex_line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFrequency_gen().iterator(); it.hasNext();) {
		visGrid.Frequency_gen childElement = (visGrid.Frequency_gen) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getShaper().iterator(); it.hasNext();) {
		visGrid.Shaper childElement = (visGrid.Shaper) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getFreezer().iterator(); it.hasNext();) {
		visGrid.Freezer childElement = (visGrid.Freezer) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLine_configuration().iterator(); it.hasNext();) {
		visGrid.Line_configuration childElement = (visGrid.Line_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getWeather().iterator(); it.hasNext();) {
		visGrid.Weather childElement = (visGrid.Weather) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMicrowave().iterator(); it.hasNext();) {
		visGrid.Microwave childElement = (visGrid.Microwave) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRectifier().iterator(); it.hasNext();) {
		visGrid.Rectifier childElement = (visGrid.Rectifier) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLine().iterator(); it.hasNext();) {
		visGrid.Line childElement = (visGrid.Line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOverhead_line().iterator(); it.hasNext();) {
		visGrid.Overhead_line childElement = (visGrid.Overhead_line) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getZIPload().iterator(); it.hasNext();) {
		visGrid.ZIPload childElement = (visGrid.ZIPload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOverhead_line_conductor().iterator(); it.hasNext();) {
		visGrid.Overhead_line_conductor childElement = (visGrid.Overhead_line_conductor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getBattery().iterator(); it.hasNext();) {
		visGrid.Battery childElement = (visGrid.Battery) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLoad().iterator(); it.hasNext();) {
		visGrid.Load childElement = (visGrid.Load) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLine_spacing().iterator(); it.hasNext();) {
		visGrid.Line_spacing childElement = (visGrid.Line_spacing) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getVoltdump().iterator(); it.hasNext();) {
		visGrid.Voltdump childElement = (visGrid.Voltdump) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCapacitor().iterator(); it.hasNext();) {
		visGrid.Capacitor childElement = (visGrid.Capacitor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getController().iterator(); it.hasNext();) {
		visGrid.Controller childElement = (visGrid.Controller) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCollector().iterator(); it.hasNext();) {
		visGrid.Collector childElement = (visGrid.Collector) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getDryer().iterator(); it.hasNext();) {
		visGrid.Dryer childElement = (visGrid.Dryer) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getLights().iterator(); it.hasNext();) {
		visGrid.Lights childElement = (visGrid.Lights) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMotor().iterator(); it.hasNext();) {
		visGrid.Motor childElement = (visGrid.Motor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getCsv_reader().iterator(); it.hasNext();) {
		visGrid.Csv_reader childElement = (visGrid.Csv_reader) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPlugload().iterator(); it.hasNext();) {
		visGrid.Plugload childElement = (visGrid.Plugload) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getUnderground_line_conductor().iterator(); it.hasNext();) {
		visGrid.Underground_line_conductor childElement = (visGrid.Underground_line_conductor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getOffice().iterator(); it.hasNext();) {
		visGrid.Office childElement = (visGrid.Office) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRegulator_configuration().iterator(); it.hasNext();) {
		visGrid.Regulator_configuration childElement = (visGrid.Regulator_configuration) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getTriplex_meter().iterator(); it.hasNext();) {
		visGrid.Triplex_meter childElement = (visGrid.Triplex_meter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getAuction().iterator(); it.hasNext();) {
		visGrid.Auction childElement = (visGrid.Auction) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMicroturbine().iterator(); it.hasNext();) {
		visGrid.Microturbine childElement = (visGrid.Microturbine) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getDishwasher().iterator(); it.hasNext();) {
		visGrid.Dishwasher childElement = (visGrid.Dishwasher) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getRelay().iterator(); it.hasNext();) {
		visGrid.Relay childElement = (visGrid.Relay) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPower_electronics().iterator(); it.hasNext();) {
		visGrid.Power_electronics childElement = (visGrid.Power_electronics) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						{ visGrid.Diesel_dg childElement = modelElement.getDiesel_dg();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
}
	}
						for (java.util.Iterator<?> it = modelElement.getComm().iterator(); it.hasNext();) {
		visGrid.Comm childElement = (visGrid.Comm) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getHouse_a().iterator(); it.hasNext();) {
		visGrid.House_a childElement = (visGrid.House_a) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getResidential_enduse().iterator(); it.hasNext();) {
		visGrid.Residential_enduse childElement = (visGrid.Residential_enduse) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getDc_dc_converter().iterator(); it.hasNext();) {
		visGrid.Dc_dc_converter childElement = (visGrid.Dc_dc_converter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getInverter().iterator(); it.hasNext();) {
		visGrid.Inverter childElement = (visGrid.Inverter) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getController2().iterator(); it.hasNext();) {
		visGrid.Controller2 childElement = (visGrid.Controller2) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getWindturb_dg().iterator(); it.hasNext();) {
		visGrid.Windturb_dg childElement = (visGrid.Windturb_dg) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getMultizone().iterator(); it.hasNext();) {
		visGrid.Multizone childElement = (visGrid.Multizone) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSeries_reactor().iterator(); it.hasNext();) {
		visGrid.Series_reactor childElement = (visGrid.Series_reactor) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getSubstation().iterator(); it.hasNext();) {
		visGrid.Substation childElement = (visGrid.Substation) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getPlayer().iterator(); it.hasNext();) {
		visGrid.Player childElement = (visGrid.Player) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
						for (java.util.Iterator<?> it = modelElement.getWaterheater().iterator(); it.hasNext();) {
		visGrid.Waterheater childElement = (visGrid.Waterheater) it.next();
					int visualID = visGrid.diagram.part.VisGridVisualIDRegistry.getNodeVisualID(view, childElement);
			if (visualID == visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID) {
	result.add(new visGrid.diagram.part.VisGridNodeDescriptor(childElement, visualID));
	continue;
}
	}
			return result;
	}
	
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.GridEditPart.VISUAL_ID:
	return getGrid_1000ContainedLinks(view);
case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:
	return getSolar_2001ContainedLinks(view);
case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:
	return getVolt_var_control_2002ContainedLinks(view);
case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:
	return getBilldump_2003ContainedLinks(view);
case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:
	return getRestoration_2004ContainedLinks(view);
case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:
	return getMeter_2005ContainedLinks(view);
case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:
	return getFuse_2006ContainedLinks(view);
case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:
	return getHouse_2007ContainedLinks(view);
case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:
	return getGenerator_2008ContainedLinks(view);
case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:
	return getNode_2009ContainedLinks(view);
case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:
	return getRange_2010ContainedLinks(view);
case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:
	return getOccupantload_2011ContainedLinks(view);
case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:
	return getPlc_2012ContainedLinks(view);
case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:
	return getFault_check_2013ContainedLinks(view);
case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:
	return getUnderground_line_2014ContainedLinks(view);
case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:
	return getHistogram_2015ContainedLinks(view);
case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:
	return getTransformer_2016ContainedLinks(view);
case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:
	return getEnergy_storage_2017ContainedLinks(view);
case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:
	return getRegulator_2018ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:
	return getTriplex_line_configuration_2019ContainedLinks(view);
case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:
	return getEvcharger_2020ContainedLinks(view);
case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:
	return getCapbank_2021ContainedLinks(view);
case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:
	return getStubauction_2022ContainedLinks(view);
case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:
	return getTransformer_configuration_2023ContainedLinks(view);
case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:
	return getClimate_2024ContainedLinks(view);
case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:
	return getPqload_2025ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:
	return getTriplex_line_conductor_2026ContainedLinks(view);
case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:
	return getClotheswasher_2027ContainedLinks(view);
case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:
	return getRecorder_2028ContainedLinks(view);
case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:
	return getLink_2029ContainedLinks(view);
case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:
	return getSwitch_2030ContainedLinks(view);
case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:
	return getRefrigerator_2031ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:
	return getTriplex_node_2032ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:
	return getTriplex_line_2033ContainedLinks(view);
case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:
	return getFrequency_gen_2034ContainedLinks(view);
case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:
	return getShaper_2035ContainedLinks(view);
case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:
	return getFreezer_2036ContainedLinks(view);
case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:
	return getLine_configuration_2037ContainedLinks(view);
case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:
	return getWeather_2038ContainedLinks(view);
case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:
	return getMicrowave_2039ContainedLinks(view);
case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:
	return getRectifier_2040ContainedLinks(view);
case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:
	return getLine_2041ContainedLinks(view);
case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:
	return getOverhead_line_2042ContainedLinks(view);
case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:
	return getZIPload_2043ContainedLinks(view);
case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:
	return getOverhead_line_conductor_2044ContainedLinks(view);
case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:
	return getBattery_2045ContainedLinks(view);
case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:
	return getLoad_2046ContainedLinks(view);
case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:
	return getLine_spacing_2047ContainedLinks(view);
case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:
	return getVoltdump_2048ContainedLinks(view);
case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:
	return getCapacitor_2049ContainedLinks(view);
case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:
	return getController_2050ContainedLinks(view);
case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
	return getCollector_2051ContainedLinks(view);
case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:
	return getDryer_2052ContainedLinks(view);
case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:
	return getLights_2053ContainedLinks(view);
case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:
	return getMotor_2054ContainedLinks(view);
case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:
	return getCsv_reader_2055ContainedLinks(view);
case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:
	return getPlugload_2056ContainedLinks(view);
case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:
	return getUnderground_line_conductor_2057ContainedLinks(view);
case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:
	return getOffice_2058ContainedLinks(view);
case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:
	return getRegulator_configuration_2059ContainedLinks(view);
case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:
	return getTriplex_meter_2060ContainedLinks(view);
case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:
	return getAuction_2061ContainedLinks(view);
case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:
	return getMicroturbine_2062ContainedLinks(view);
case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:
	return getDishwasher_2063ContainedLinks(view);
case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:
	return getRelay_2064ContainedLinks(view);
case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:
	return getPower_electronics_2065ContainedLinks(view);
case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:
	return getDiesel_dg_2066ContainedLinks(view);
case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:
	return getComm_2067ContainedLinks(view);
case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:
	return getHouse_a_2068ContainedLinks(view);
case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:
	return getResidential_enduse_2069ContainedLinks(view);
case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:
	return getDc_dc_converter_2070ContainedLinks(view);
case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:
	return getInverter_2071ContainedLinks(view);
case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:
	return getController2_2072ContainedLinks(view);
case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:
	return getWindturb_dg_2073ContainedLinks(view);
case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:
	return getMultizone_2074ContainedLinks(view);
case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:
	return getSeries_reactor_2075ContainedLinks(view);
case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:
	return getSubstation_2076ContainedLinks(view);
case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:
	return getPlayer_2077ContainedLinks(view);
case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:
	return getWaterheater_2078ContainedLinks(view);
	}
		return java.util.Collections.emptyList();
}
	
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getIncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:
	return getSolar_2001IncomingLinks(view);
case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:
	return getVolt_var_control_2002IncomingLinks(view);
case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:
	return getBilldump_2003IncomingLinks(view);
case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:
	return getRestoration_2004IncomingLinks(view);
case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:
	return getMeter_2005IncomingLinks(view);
case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:
	return getFuse_2006IncomingLinks(view);
case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:
	return getHouse_2007IncomingLinks(view);
case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:
	return getGenerator_2008IncomingLinks(view);
case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:
	return getNode_2009IncomingLinks(view);
case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:
	return getRange_2010IncomingLinks(view);
case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:
	return getOccupantload_2011IncomingLinks(view);
case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:
	return getPlc_2012IncomingLinks(view);
case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:
	return getFault_check_2013IncomingLinks(view);
case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:
	return getUnderground_line_2014IncomingLinks(view);
case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:
	return getHistogram_2015IncomingLinks(view);
case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:
	return getTransformer_2016IncomingLinks(view);
case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:
	return getEnergy_storage_2017IncomingLinks(view);
case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:
	return getRegulator_2018IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:
	return getTriplex_line_configuration_2019IncomingLinks(view);
case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:
	return getEvcharger_2020IncomingLinks(view);
case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:
	return getCapbank_2021IncomingLinks(view);
case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:
	return getStubauction_2022IncomingLinks(view);
case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:
	return getTransformer_configuration_2023IncomingLinks(view);
case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:
	return getClimate_2024IncomingLinks(view);
case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:
	return getPqload_2025IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:
	return getTriplex_line_conductor_2026IncomingLinks(view);
case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:
	return getClotheswasher_2027IncomingLinks(view);
case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:
	return getRecorder_2028IncomingLinks(view);
case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:
	return getLink_2029IncomingLinks(view);
case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:
	return getSwitch_2030IncomingLinks(view);
case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:
	return getRefrigerator_2031IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:
	return getTriplex_node_2032IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:
	return getTriplex_line_2033IncomingLinks(view);
case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:
	return getFrequency_gen_2034IncomingLinks(view);
case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:
	return getShaper_2035IncomingLinks(view);
case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:
	return getFreezer_2036IncomingLinks(view);
case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:
	return getLine_configuration_2037IncomingLinks(view);
case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:
	return getWeather_2038IncomingLinks(view);
case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:
	return getMicrowave_2039IncomingLinks(view);
case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:
	return getRectifier_2040IncomingLinks(view);
case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:
	return getLine_2041IncomingLinks(view);
case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:
	return getOverhead_line_2042IncomingLinks(view);
case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:
	return getZIPload_2043IncomingLinks(view);
case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:
	return getOverhead_line_conductor_2044IncomingLinks(view);
case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:
	return getBattery_2045IncomingLinks(view);
case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:
	return getLoad_2046IncomingLinks(view);
case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:
	return getLine_spacing_2047IncomingLinks(view);
case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:
	return getVoltdump_2048IncomingLinks(view);
case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:
	return getCapacitor_2049IncomingLinks(view);
case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:
	return getController_2050IncomingLinks(view);
case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
	return getCollector_2051IncomingLinks(view);
case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:
	return getDryer_2052IncomingLinks(view);
case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:
	return getLights_2053IncomingLinks(view);
case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:
	return getMotor_2054IncomingLinks(view);
case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:
	return getCsv_reader_2055IncomingLinks(view);
case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:
	return getPlugload_2056IncomingLinks(view);
case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:
	return getUnderground_line_conductor_2057IncomingLinks(view);
case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:
	return getOffice_2058IncomingLinks(view);
case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:
	return getRegulator_configuration_2059IncomingLinks(view);
case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:
	return getTriplex_meter_2060IncomingLinks(view);
case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:
	return getAuction_2061IncomingLinks(view);
case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:
	return getMicroturbine_2062IncomingLinks(view);
case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:
	return getDishwasher_2063IncomingLinks(view);
case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:
	return getRelay_2064IncomingLinks(view);
case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:
	return getPower_electronics_2065IncomingLinks(view);
case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:
	return getDiesel_dg_2066IncomingLinks(view);
case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:
	return getComm_2067IncomingLinks(view);
case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:
	return getHouse_a_2068IncomingLinks(view);
case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:
	return getResidential_enduse_2069IncomingLinks(view);
case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:
	return getDc_dc_converter_2070IncomingLinks(view);
case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:
	return getInverter_2071IncomingLinks(view);
case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:
	return getController2_2072IncomingLinks(view);
case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:
	return getWindturb_dg_2073IncomingLinks(view);
case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:
	return getMultizone_2074IncomingLinks(view);
case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:
	return getSeries_reactor_2075IncomingLinks(view);
case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:
	return getSubstation_2076IncomingLinks(view);
case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:
	return getPlayer_2077IncomingLinks(view);
case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:
	return getWaterheater_2078IncomingLinks(view);
	}
		return java.util.Collections.emptyList();
}
	
		/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
		switch (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(view)) {
		case visGrid.diagram.edit.parts.SolarEditPart.VISUAL_ID:
	return getSolar_2001OutgoingLinks(view);
case visGrid.diagram.edit.parts.Volt_var_controlEditPart.VISUAL_ID:
	return getVolt_var_control_2002OutgoingLinks(view);
case visGrid.diagram.edit.parts.BilldumpEditPart.VISUAL_ID:
	return getBilldump_2003OutgoingLinks(view);
case visGrid.diagram.edit.parts.RestorationEditPart.VISUAL_ID:
	return getRestoration_2004OutgoingLinks(view);
case visGrid.diagram.edit.parts.MeterEditPart.VISUAL_ID:
	return getMeter_2005OutgoingLinks(view);
case visGrid.diagram.edit.parts.FuseEditPart.VISUAL_ID:
	return getFuse_2006OutgoingLinks(view);
case visGrid.diagram.edit.parts.HouseEditPart.VISUAL_ID:
	return getHouse_2007OutgoingLinks(view);
case visGrid.diagram.edit.parts.GeneratorEditPart.VISUAL_ID:
	return getGenerator_2008OutgoingLinks(view);
case visGrid.diagram.edit.parts.NodeEditPart.VISUAL_ID:
	return getNode_2009OutgoingLinks(view);
case visGrid.diagram.edit.parts.RangeEditPart.VISUAL_ID:
	return getRange_2010OutgoingLinks(view);
case visGrid.diagram.edit.parts.OccupantloadEditPart.VISUAL_ID:
	return getOccupantload_2011OutgoingLinks(view);
case visGrid.diagram.edit.parts.PlcEditPart.VISUAL_ID:
	return getPlc_2012OutgoingLinks(view);
case visGrid.diagram.edit.parts.Fault_checkEditPart.VISUAL_ID:
	return getFault_check_2013OutgoingLinks(view);
case visGrid.diagram.edit.parts.Underground_lineEditPart.VISUAL_ID:
	return getUnderground_line_2014OutgoingLinks(view);
case visGrid.diagram.edit.parts.HistogramEditPart.VISUAL_ID:
	return getHistogram_2015OutgoingLinks(view);
case visGrid.diagram.edit.parts.TransformerEditPart.VISUAL_ID:
	return getTransformer_2016OutgoingLinks(view);
case visGrid.diagram.edit.parts.Energy_storageEditPart.VISUAL_ID:
	return getEnergy_storage_2017OutgoingLinks(view);
case visGrid.diagram.edit.parts.RegulatorEditPart.VISUAL_ID:
	return getRegulator_2018OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_configurationEditPart.VISUAL_ID:
	return getTriplex_line_configuration_2019OutgoingLinks(view);
case visGrid.diagram.edit.parts.EvchargerEditPart.VISUAL_ID:
	return getEvcharger_2020OutgoingLinks(view);
case visGrid.diagram.edit.parts.CapbankEditPart.VISUAL_ID:
	return getCapbank_2021OutgoingLinks(view);
case visGrid.diagram.edit.parts.StubauctionEditPart.VISUAL_ID:
	return getStubauction_2022OutgoingLinks(view);
case visGrid.diagram.edit.parts.Transformer_configurationEditPart.VISUAL_ID:
	return getTransformer_configuration_2023OutgoingLinks(view);
case visGrid.diagram.edit.parts.ClimateEditPart.VISUAL_ID:
	return getClimate_2024OutgoingLinks(view);
case visGrid.diagram.edit.parts.PqloadEditPart.VISUAL_ID:
	return getPqload_2025OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_line_conductorEditPart.VISUAL_ID:
	return getTriplex_line_conductor_2026OutgoingLinks(view);
case visGrid.diagram.edit.parts.ClotheswasherEditPart.VISUAL_ID:
	return getClotheswasher_2027OutgoingLinks(view);
case visGrid.diagram.edit.parts.RecorderEditPart.VISUAL_ID:
	return getRecorder_2028OutgoingLinks(view);
case visGrid.diagram.edit.parts.LinkEditPart.VISUAL_ID:
	return getLink_2029OutgoingLinks(view);
case visGrid.diagram.edit.parts.SwitchEditPart.VISUAL_ID:
	return getSwitch_2030OutgoingLinks(view);
case visGrid.diagram.edit.parts.RefrigeratorEditPart.VISUAL_ID:
	return getRefrigerator_2031OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_nodeEditPart.VISUAL_ID:
	return getTriplex_node_2032OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_lineEditPart.VISUAL_ID:
	return getTriplex_line_2033OutgoingLinks(view);
case visGrid.diagram.edit.parts.Frequency_genEditPart.VISUAL_ID:
	return getFrequency_gen_2034OutgoingLinks(view);
case visGrid.diagram.edit.parts.ShaperEditPart.VISUAL_ID:
	return getShaper_2035OutgoingLinks(view);
case visGrid.diagram.edit.parts.FreezerEditPart.VISUAL_ID:
	return getFreezer_2036OutgoingLinks(view);
case visGrid.diagram.edit.parts.Line_configurationEditPart.VISUAL_ID:
	return getLine_configuration_2037OutgoingLinks(view);
case visGrid.diagram.edit.parts.WeatherEditPart.VISUAL_ID:
	return getWeather_2038OutgoingLinks(view);
case visGrid.diagram.edit.parts.MicrowaveEditPart.VISUAL_ID:
	return getMicrowave_2039OutgoingLinks(view);
case visGrid.diagram.edit.parts.RectifierEditPart.VISUAL_ID:
	return getRectifier_2040OutgoingLinks(view);
case visGrid.diagram.edit.parts.LineEditPart.VISUAL_ID:
	return getLine_2041OutgoingLinks(view);
case visGrid.diagram.edit.parts.Overhead_lineEditPart.VISUAL_ID:
	return getOverhead_line_2042OutgoingLinks(view);
case visGrid.diagram.edit.parts.ZIPloadEditPart.VISUAL_ID:
	return getZIPload_2043OutgoingLinks(view);
case visGrid.diagram.edit.parts.Overhead_line_conductorEditPart.VISUAL_ID:
	return getOverhead_line_conductor_2044OutgoingLinks(view);
case visGrid.diagram.edit.parts.BatteryEditPart.VISUAL_ID:
	return getBattery_2045OutgoingLinks(view);
case visGrid.diagram.edit.parts.LoadEditPart.VISUAL_ID:
	return getLoad_2046OutgoingLinks(view);
case visGrid.diagram.edit.parts.Line_spacingEditPart.VISUAL_ID:
	return getLine_spacing_2047OutgoingLinks(view);
case visGrid.diagram.edit.parts.VoltdumpEditPart.VISUAL_ID:
	return getVoltdump_2048OutgoingLinks(view);
case visGrid.diagram.edit.parts.CapacitorEditPart.VISUAL_ID:
	return getCapacitor_2049OutgoingLinks(view);
case visGrid.diagram.edit.parts.ControllerEditPart.VISUAL_ID:
	return getController_2050OutgoingLinks(view);
case visGrid.diagram.edit.parts.CollectorEditPart.VISUAL_ID:
	return getCollector_2051OutgoingLinks(view);
case visGrid.diagram.edit.parts.DryerEditPart.VISUAL_ID:
	return getDryer_2052OutgoingLinks(view);
case visGrid.diagram.edit.parts.LightsEditPart.VISUAL_ID:
	return getLights_2053OutgoingLinks(view);
case visGrid.diagram.edit.parts.MotorEditPart.VISUAL_ID:
	return getMotor_2054OutgoingLinks(view);
case visGrid.diagram.edit.parts.Csv_readerEditPart.VISUAL_ID:
	return getCsv_reader_2055OutgoingLinks(view);
case visGrid.diagram.edit.parts.PlugloadEditPart.VISUAL_ID:
	return getPlugload_2056OutgoingLinks(view);
case visGrid.diagram.edit.parts.Underground_line_conductorEditPart.VISUAL_ID:
	return getUnderground_line_conductor_2057OutgoingLinks(view);
case visGrid.diagram.edit.parts.OfficeEditPart.VISUAL_ID:
	return getOffice_2058OutgoingLinks(view);
case visGrid.diagram.edit.parts.Regulator_configurationEditPart.VISUAL_ID:
	return getRegulator_configuration_2059OutgoingLinks(view);
case visGrid.diagram.edit.parts.Triplex_meterEditPart.VISUAL_ID:
	return getTriplex_meter_2060OutgoingLinks(view);
case visGrid.diagram.edit.parts.AuctionEditPart.VISUAL_ID:
	return getAuction_2061OutgoingLinks(view);
case visGrid.diagram.edit.parts.MicroturbineEditPart.VISUAL_ID:
	return getMicroturbine_2062OutgoingLinks(view);
case visGrid.diagram.edit.parts.DishwasherEditPart.VISUAL_ID:
	return getDishwasher_2063OutgoingLinks(view);
case visGrid.diagram.edit.parts.RelayEditPart.VISUAL_ID:
	return getRelay_2064OutgoingLinks(view);
case visGrid.diagram.edit.parts.Power_electronicsEditPart.VISUAL_ID:
	return getPower_electronics_2065OutgoingLinks(view);
case visGrid.diagram.edit.parts.Diesel_dgEditPart.VISUAL_ID:
	return getDiesel_dg_2066OutgoingLinks(view);
case visGrid.diagram.edit.parts.CommEditPart.VISUAL_ID:
	return getComm_2067OutgoingLinks(view);
case visGrid.diagram.edit.parts.House_aEditPart.VISUAL_ID:
	return getHouse_a_2068OutgoingLinks(view);
case visGrid.diagram.edit.parts.Residential_enduseEditPart.VISUAL_ID:
	return getResidential_enduse_2069OutgoingLinks(view);
case visGrid.diagram.edit.parts.Dc_dc_converterEditPart.VISUAL_ID:
	return getDc_dc_converter_2070OutgoingLinks(view);
case visGrid.diagram.edit.parts.InverterEditPart.VISUAL_ID:
	return getInverter_2071OutgoingLinks(view);
case visGrid.diagram.edit.parts.Controller2EditPart.VISUAL_ID:
	return getController2_2072OutgoingLinks(view);
case visGrid.diagram.edit.parts.Windturb_dgEditPart.VISUAL_ID:
	return getWindturb_dg_2073OutgoingLinks(view);
case visGrid.diagram.edit.parts.MultizoneEditPart.VISUAL_ID:
	return getMultizone_2074OutgoingLinks(view);
case visGrid.diagram.edit.parts.Series_reactorEditPart.VISUAL_ID:
	return getSeries_reactor_2075OutgoingLinks(view);
case visGrid.diagram.edit.parts.SubstationEditPart.VISUAL_ID:
	return getSubstation_2076OutgoingLinks(view);
case visGrid.diagram.edit.parts.PlayerEditPart.VISUAL_ID:
	return getPlayer_2077OutgoingLinks(view);
case visGrid.diagram.edit.parts.WaterheaterEditPart.VISUAL_ID:
	return getWaterheater_2078OutgoingLinks(view);
	}
		return java.util.Collections.emptyList();
}
		
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGrid_1000ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSolar_2001ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVolt_var_control_2002ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBilldump_2003ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRestoration_2004ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMeter_2005ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFuse_2006ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_2007ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGenerator_2008ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getNode_2009ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRange_2010ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOccupantload_2011ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlc_2012ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFault_check_2013ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_2014ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHistogram_2015ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_2016ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEnergy_storage_2017ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_2018ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_configuration_2019ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEvcharger_2020ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapbank_2021ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getStubauction_2022ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_configuration_2023ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClimate_2024ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPqload_2025ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_conductor_2026ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClotheswasher_2027ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRecorder_2028ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLink_2029ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSwitch_2030ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRefrigerator_2031ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_node_2032ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_2033ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFrequency_gen_2034ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getShaper_2035ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFreezer_2036ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_configuration_2037ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWeather_2038ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicrowave_2039ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRectifier_2040ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_2041ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_2042ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getZIPload_2043ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_conductor_2044ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBattery_2045ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLoad_2046ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_spacing_2047ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVoltdump_2048ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapacitor_2049ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController_2050ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCollector_2051ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDryer_2052ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLights_2053ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMotor_2054ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCsv_reader_2055ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlugload_2056ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_conductor_2057ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOffice_2058ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_configuration_2059ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_meter_2060ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getAuction_2061ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicroturbine_2062ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDishwasher_2063ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRelay_2064ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPower_electronics_2065ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDiesel_dg_2066ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getComm_2067ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_a_2068ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getResidential_enduse_2069ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDc_dc_converter_2070ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getInverter_2071ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController2_2072ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWindturb_dg_2073ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMultizone_2074ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSeries_reactor_2075ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSubstation_2076ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlayer_2077ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWaterheater_2078ContainedLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
		
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSolar_2001IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVolt_var_control_2002IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBilldump_2003IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRestoration_2004IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMeter_2005IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFuse_2006IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_2007IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGenerator_2008IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getNode_2009IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRange_2010IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOccupantload_2011IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlc_2012IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFault_check_2013IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_2014IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHistogram_2015IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_2016IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEnergy_storage_2017IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_2018IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_configuration_2019IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEvcharger_2020IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapbank_2021IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getStubauction_2022IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_configuration_2023IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClimate_2024IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPqload_2025IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_conductor_2026IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClotheswasher_2027IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRecorder_2028IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLink_2029IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSwitch_2030IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRefrigerator_2031IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_node_2032IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_2033IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFrequency_gen_2034IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getShaper_2035IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFreezer_2036IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_configuration_2037IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWeather_2038IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicrowave_2039IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRectifier_2040IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_2041IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_2042IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getZIPload_2043IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_conductor_2044IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBattery_2045IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLoad_2046IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_spacing_2047IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVoltdump_2048IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapacitor_2049IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController_2050IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCollector_2051IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDryer_2052IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLights_2053IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMotor_2054IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCsv_reader_2055IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlugload_2056IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_conductor_2057IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOffice_2058IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_configuration_2059IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_meter_2060IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getAuction_2061IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicroturbine_2062IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDishwasher_2063IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRelay_2064IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPower_electronics_2065IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDiesel_dg_2066IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getComm_2067IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_a_2068IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getResidential_enduse_2069IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDc_dc_converter_2070IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getInverter_2071IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController2_2072IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWindturb_dg_2073IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMultizone_2074IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSeries_reactor_2075IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSubstation_2076IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlayer_2077IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWaterheater_2078IncomingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
		
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSolar_2001OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVolt_var_control_2002OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBilldump_2003OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRestoration_2004OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMeter_2005OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFuse_2006OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_2007OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getGenerator_2008OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getNode_2009OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRange_2010OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOccupantload_2011OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlc_2012OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFault_check_2013OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_2014OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHistogram_2015OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_2016OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEnergy_storage_2017OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_2018OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_configuration_2019OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getEvcharger_2020OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapbank_2021OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getStubauction_2022OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTransformer_configuration_2023OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClimate_2024OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPqload_2025OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_conductor_2026OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getClotheswasher_2027OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRecorder_2028OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLink_2029OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSwitch_2030OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRefrigerator_2031OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_node_2032OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_line_2033OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFrequency_gen_2034OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getShaper_2035OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getFreezer_2036OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_configuration_2037OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWeather_2038OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicrowave_2039OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRectifier_2040OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_2041OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_2042OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getZIPload_2043OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOverhead_line_conductor_2044OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getBattery_2045OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLoad_2046OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLine_spacing_2047OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getVoltdump_2048OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCapacitor_2049OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController_2050OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCollector_2051OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDryer_2052OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getLights_2053OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMotor_2054OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getCsv_reader_2055OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlugload_2056OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getUnderground_line_conductor_2057OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getOffice_2058OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRegulator_configuration_2059OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getTriplex_meter_2060OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getAuction_2061OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMicroturbine_2062OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDishwasher_2063OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getRelay_2064OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPower_electronics_2065OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDiesel_dg_2066OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getComm_2067OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getHouse_a_2068OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getResidential_enduse_2069OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getDc_dc_converter_2070OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getInverter_2071OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getController2_2072OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWindturb_dg_2073OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getMultizone_2074OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSeries_reactor_2075OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getSubstation_2076OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getPlayer_2077OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
	
/**
 * @generated
 */
public static java.util.List<visGrid.diagram.part.VisGridLinkDescriptor> getWaterheater_2078OutgoingLinks(org.eclipse.gmf.runtime.notation.View view) {
	return java.util.Collections.emptyList();
}
			
	}
