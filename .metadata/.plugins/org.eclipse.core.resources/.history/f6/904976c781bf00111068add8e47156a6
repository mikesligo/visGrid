package visGrid.diagram.edit.policies;

/**
 * @generated
 */
public class VisGridBaseItemSemanticEditPolicy extends org.eclipse.gmf.runtime.diagram.ui.editpolicies.SemanticEditPolicy {

		/**
 * Extended request data key to hold editpart visual id.
 * @generated
 */
	public static final String VISUAL_ID_KEY = "visual_id";  //$NON-NLS-1$

	/**
 * @generated
 */
	private final org.eclipse.gmf.runtime.emf.type.core.IElementType myElementType;
	
		/**
 * @generated
 */
	protected VisGridBaseItemSemanticEditPolicy(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
		myElementType = elementType;
	}

	/**
 * Extended request data key to hold editpart visual id.
 * Add visual id of edited editpart to extended data of the request
 * so command switch can decide what kind of diagram element is being edited.
 * It is done in those cases when it's not possible to deduce diagram
 * element kind from domain element.
 * 
 * @generated
 */
	public org.eclipse.gef.commands.Command getCommand(org.eclipse.gef.Request request) {
		if (request instanceof org.eclipse.gef.requests.ReconnectRequest) {
			Object view = ((org.eclipse.gef.requests.ReconnectRequest) request).getConnectionEditPart().getModel();
			if (view instanceof org.eclipse.gmf.runtime.notation.View) {
				Integer id = new Integer(visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID((org.eclipse.gmf.runtime.notation.View) view));
				request.getExtendedData().put(VISUAL_ID_KEY, id);
			}
		}
		return super.getCommand(request);
	}
	
	/**
 * Returns visual id from request parameters.
 * @generated
 */
	protected int getVisualID(org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest request) {
		Object id = request.getParameter(VISUAL_ID_KEY);
		return id instanceof Integer ? ((Integer) id).intValue() : -1;
	}

		/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getSemanticCommand(org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest request) {
	org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest completedRequest = completeRequest(request);
	org.eclipse.gef.commands.Command semanticCommand = getSemanticCommandSwitch(completedRequest);
	semanticCommand = getEditHelperCommand(completedRequest, semanticCommand);
	if (completedRequest instanceof org.eclipse.gmf.runtime.emf.type.core.requests.DestroyRequest) {
		org.eclipse.gmf.runtime.emf.type.core.requests.DestroyRequest destroyRequest = (org.eclipse.gmf.runtime.emf.type.core.requests.DestroyRequest) completedRequest;
		return shouldProceed(destroyRequest) ? addDeleteViewCommand(semanticCommand, destroyRequest) : null;
		}
		return semanticCommand;
	}
	
	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command addDeleteViewCommand(org.eclipse.gef.commands.Command mainCommand, org.eclipse.gmf.runtime.emf.type.core.requests.DestroyRequest completedRequest){
		org.eclipse.gef.commands.Command deleteViewCommand = getGEFWrapper(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), (org.eclipse.gmf.runtime.notation.View) getHost().getModel()));
		return mainCommand == null ? deleteViewCommand : mainCommand.chain(deleteViewCommand);
}
	
		/**
 * @generated
 */
	private org.eclipse.gef.commands.Command getEditHelperCommand(org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest request, org.eclipse.gef.commands.Command editPolicyCommand) {
		if (editPolicyCommand != null) {
			org.eclipse.gmf.runtime.common.core.command.ICommand command = editPolicyCommand instanceof org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy ? ((org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy) editPolicyCommand).getICommand() : new org.eclipse.gmf.runtime.diagram.ui.commands.CommandProxy(editPolicyCommand);
			request.setParameter(visGrid.diagram.edit.helpers.VisGridBaseEditHelper.EDIT_POLICY_COMMAND, command);
		}
		org.eclipse.gmf.runtime.emf.type.core.IElementType requestContextElementType = getContextElementType(request);
		request.setParameter(visGrid.diagram.edit.helpers.VisGridBaseEditHelper.CONTEXT_ELEMENT_TYPE, requestContextElementType);
		org.eclipse.gmf.runtime.common.core.command.ICommand command = requestContextElementType.getEditCommand(request);
		request.setParameter(visGrid.diagram.edit.helpers.VisGridBaseEditHelper.EDIT_POLICY_COMMAND, null);
		request.setParameter(visGrid.diagram.edit.helpers.VisGridBaseEditHelper.CONTEXT_ELEMENT_TYPE, null);
		if (command != null) {
			if (!(command instanceof org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand)) {
				command = new org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand(getEditingDomain(), command.getLabel()).compose(command);
			}
			return new org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy(command);
		}
		return editPolicyCommand;
	}
	
		/**
 * @generated
 */
	private org.eclipse.gmf.runtime.emf.type.core.IElementType getContextElementType(org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest request) {
		org.eclipse.gmf.runtime.emf.type.core.IElementType requestContextElementType = visGrid.diagram.providers.VisGridElementTypes.getElementType(getVisualID(request));
		return requestContextElementType != null ? requestContextElementType : myElementType;
	}
	
	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getSemanticCommandSwitch(org.eclipse.gmf.runtime.emf.type.core.requests.IEditCommandRequest req) {
	if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest) {
		return getCreateRelationshipCommand((org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest) {
		return getCreateCommand((org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest) {
		return getConfigureCommand((org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest) {
		return getDestroyElementCommand((org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest) {
		return getDestroyReferenceCommand((org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest) {
		return getDuplicateCommand((org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.GetEditContextRequest) {
		return getEditContextCommand((org.eclipse.gmf.runtime.emf.type.core.requests.GetEditContextRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.MoveRequest) {
		return getMoveCommand((org.eclipse.gmf.runtime.emf.type.core.requests.MoveRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest) {
		return getReorientReferenceRelationshipCommand((org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest) {
		return getReorientRelationshipCommand((org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest) req);
	} else if (req instanceof org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest) {
		return getSetCommand((org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest) req);
	}
	return null;
}
	
	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getConfigureCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ConfigureRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getSetCommand(org.eclipse.gmf.runtime.emf.type.core.requests.SetRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getEditContextCommand(org.eclipse.gmf.runtime.emf.type.core.requests.GetEditContextRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getDestroyElementCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getDestroyReferenceCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getDuplicateCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DuplicateElementsRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getMoveCommand(org.eclipse.gmf.runtime.emf.type.core.requests.MoveRequest req) {
	return null;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
	return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
}

	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getReorientRelationshipCommand(org.eclipse.gmf.runtime.emf.type.core.requests.ReorientRelationshipRequest req) {
	return org.eclipse.gef.commands.UnexecutableCommand.INSTANCE;
}
	
		/**
 * @generated
 */
	protected final org.eclipse.gef.commands.Command getGEFWrapper(org.eclipse.gmf.runtime.common.core.command.ICommand cmd) {
		return new org.eclipse.gmf.runtime.diagram.ui.commands.ICommandProxy(cmd);
	}

	/**
 * Returns editing domain from the host edit part.
 * @generated
 */
	protected org.eclipse.emf.transaction.TransactionalEditingDomain getEditingDomain() {
		return ((org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart) getHost()).getEditingDomain();
	}

		/**
 * Clean all shortcuts to the host element from the same diagram
 * @generated
 */
	protected void addDestroyShortcutsCommand(org.eclipse.gmf.runtime.common.core.command.ICompositeCommand cmd, org.eclipse.gmf.runtime.notation.View view) {
		assert view.getEAnnotation("Shortcut") == null; //$NON-NLS-1$
		for (java.util.Iterator it = view.getDiagram().getChildren().iterator(); it.hasNext();) {
			org.eclipse.gmf.runtime.notation.View nextView = (org.eclipse.gmf.runtime.notation.View) it.next();
			if (nextView.getEAnnotation("Shortcut") == null || !nextView.isSetElement() || nextView.getElement() != view.getElement()) { //$NON-NLS-1$
				continue;
			}
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), nextView));
		}
	}

	
	/**
 * @generated
 */
	public static LinkConstraints getLinkConstraints() {
		LinkConstraints cached = visGrid.diagram.part.VisGridDiagramEditorPlugin.getInstance().getLinkConstraints();
		if (cached == null) {
			visGrid.diagram.part.VisGridDiagramEditorPlugin.getInstance().setLinkConstraints(cached = new LinkConstraints());
		}
		return cached;
	}


/**
 * @generated
 */
public static class LinkConstraints {

	/**
 * @generated
 */
	LinkConstraints() {
		// use static method #getLinkConstraints() to access instance
	}

	
/**
 * @generated
 */
public boolean canCreateConnectionsMicrowave_4001(visGrid.Connections source, visGrid.Microwave target) {
	if (source != null) {
	if (source.getMicrowave().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsMicrowave_4001(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsClimate_4002(visGrid.Connections source, visGrid.Climate target) {
	if (source != null) {
	if (source.getClimate().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsClimate_4002(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTriplex_line_4003(visGrid.Connections source, visGrid.Triplex_line target) {
	if (source != null) {
	if (source.getTriplex_line().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTriplex_line_4003(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTriplex_meter_4004(visGrid.Connections source, visGrid.Triplex_meter target) {
	if (source != null) {
	if (source.getTriplex_meter().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTriplex_meter_4004(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsLink_4005(visGrid.Connections source, visGrid.Link target) {
	if (source != null) {
	if (source.getLink().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsLink_4005(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsClotheswasher_4006(visGrid.Connections source, visGrid.Clotheswasher target) {
	if (source != null) {
	if (source.getClotheswasher().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsClotheswasher_4006(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsZIPload_4007(visGrid.Connections source, visGrid.ZIPload target) {
	if (source != null) {
	if (source.getZIPload().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsZIPload_4007(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsOverhead_line_conductor_4008(visGrid.Connections source, visGrid.Overhead_line_conductor target) {
	if (source != null) {
	if (source.getOverhead_line_conductor().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsOverhead_line_conductor_4008(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsLine_spacing_4009(visGrid.Connections source, visGrid.Line_spacing target) {
	if (source != null) {
	if (source.getLine_spacing().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsLine_spacing_4009(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsInverter_4010(visGrid.Connections source, visGrid.Inverter target) {
	if (source != null) {
	if (source.getInverter().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsInverter_4010(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTransformer_configuration_4011(visGrid.Connections source, visGrid.Transformer_configuration target) {
	if (source != null) {
	if (source.getTransformer_configuration().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTransformer_configuration_4011(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsNode_4012(visGrid.Connections source, visGrid.Node target) {
	if (source != null) {
	if (source.getNode().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsNode_4012(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRefrigerator_4013(visGrid.Connections source, visGrid.Refrigerator target) {
	if (source != null) {
	if (source.getRefrigerator().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRefrigerator_4013(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsPlc_4014(visGrid.Connections source, visGrid.Plc target) {
	if (source != null) {
	if (source.getPlc().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsPlc_4014(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsController2_4015(visGrid.Connections source, visGrid.Controller2 target) {
	if (source != null) {
	if (source.getController2().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsController2_4015(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTriplex_line_configuration_4016(visGrid.Connections source, visGrid.Triplex_line_configuration target) {
	if (source != null) {
	if (source.getTriplex_line_configuration().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTriplex_line_configuration_4016(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTransformer_4017(visGrid.Connections source, visGrid.Transformer target) {
	if (source != null) {
	if (source.getTransformer().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTransformer_4017(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRectifier_4018(visGrid.Connections source, visGrid.Rectifier target) {
	if (source != null) {
	if (source.getRectifier().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRectifier_4018(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsVolt_var_control_4019(visGrid.Connections source, visGrid.Volt_var_control target) {
	if (source != null) {
	if (source.getVolt_var_control().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsVolt_var_control_4019(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsUnderground_line_conductor_4020(visGrid.Connections source, visGrid.Underground_line_conductor target) {
	if (source != null) {
	if (source.getUnderground_line_conductor().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsUnderground_line_conductor_4020(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsHouse_a_4021(visGrid.Connections source, visGrid.House_a target) {
	if (source != null) {
	if (source.getHouse_a().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsHouse_a_4021(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsLights_4022(visGrid.Connections source, visGrid.Lights target) {
	if (source != null) {
	if (source.getLights().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsLights_4022(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsWaterheater_4023(visGrid.Connections source, visGrid.Waterheater target) {
	if (source != null) {
	if (source.getWaterheater().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsWaterheater_4023(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsShaper_4024(visGrid.Connections source, visGrid.Shaper target) {
	if (source != null) {
	if (source.getShaper().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsShaper_4024(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsStubauction_4025(visGrid.Connections source, visGrid.Stubauction target) {
	if (source != null) {
	if (source.getStubauction().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsStubauction_4025(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsCsv_reader_4026(visGrid.Connections source, visGrid.Csv_reader target) {
	if (source != null) {
	if (source.getCsv_reader().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsCsv_reader_4026(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsDiesel_dg_4027(visGrid.Connections source, visGrid.Diesel_dg target) {
	if (source != null) {
	if (source.getDiesel_dg().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsDiesel_dg_4027(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsController_4028(visGrid.Connections source, visGrid.Controller target) {
	if (source != null) {
	if (source.getController().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsController_4028(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsLine_configuration_4029(visGrid.Connections source, visGrid.Line_configuration target) {
	if (source != null) {
	if (source.getLine_configuration().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsLine_configuration_4029(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsPqload_4030(visGrid.Connections source, visGrid.Pqload target) {
	if (source != null) {
	if (source.getPqload().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsPqload_4030(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRegulator_4031(visGrid.Connections source, visGrid.Regulator target) {
	if (source != null) {
	if (source.getRegulator().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRegulator_4031(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsDc_dc_converter_4032(visGrid.Connections source, visGrid.Dc_dc_converter target) {
	if (source != null) {
	if (source.getDc_dc_converter().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsDc_dc_converter_4032(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsOccupantload_4033(visGrid.Connections source, visGrid.Occupantload target) {
	if (source != null) {
	if (source.getOccupantload().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsOccupantload_4033(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsFuse_4034(visGrid.Connections source, visGrid.Fuse target) {
	if (source != null) {
	if (source.getFuse().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsFuse_4034(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsCapacitor_4035(visGrid.Connections source, visGrid.Capacitor target) {
	if (source != null) {
	if (source.getCapacitor().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsCapacitor_4035(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsBattery_4036(visGrid.Connections source, visGrid.Battery target) {
	if (source != null) {
	if (source.getBattery().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsBattery_4036(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsBilldump_4037(visGrid.Connections source, visGrid.Billdump target) {
	if (source != null) {
	if (source.getBilldump().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsBilldump_4037(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsLine_4038(visGrid.Connections source, visGrid.Line target) {
	if (source != null) {
	if (source.getLine().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsLine_4038(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsMeter_4039(visGrid.Connections source, visGrid.Meter target) {
	if (source != null) {
	if (source.getMeter().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsMeter_4039(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsOverhead_line_4040(visGrid.Connections source, visGrid.Overhead_line target) {
	if (source != null) {
	if (source.getOverhead_line().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsOverhead_line_4040(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRelay_4041(visGrid.Connections source, visGrid.Relay target) {
	if (source != null) {
	if (source.getRelay().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRelay_4041(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRecorder_4042(visGrid.Connections source, visGrid.Recorder target) {
	if (source != null) {
	if (source.getRecorder().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRecorder_4042(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsPlugload_4043(visGrid.Connections source, visGrid.Plugload target) {
	if (source != null) {
	if (source.getPlugload().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsPlugload_4043(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsWindturb_dg_4044(visGrid.Connections source, visGrid.Windturb_dg target) {
	if (source != null) {
	if (source.getWindturb_dg().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsWindturb_dg_4044(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsOffice_4045(visGrid.Connections source, visGrid.Office target) {
	if (source != null) {
	if (source.getOffice().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsOffice_4045(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsHistogram_4046(visGrid.Connections source, visGrid.Histogram target) {
	if (source != null) {
	if (source.getHistogram().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsHistogram_4046(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsCollector_4047(visGrid.Connections source, visGrid.Collector target) {
	if (source != null) {
	if (source.getCollector().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsCollector_4047(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsAuction_4048(visGrid.Connections source, visGrid.Auction target) {
	if (source != null) {
	if (source.getAuction().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsAuction_4048(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsEvcharger_4049(visGrid.Connections source, visGrid.Evcharger target) {
	if (source != null) {
	if (source.getEvcharger().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsEvcharger_4049(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsFreezer_4050(visGrid.Connections source, visGrid.Freezer target) {
	if (source != null) {
	if (source.getFreezer().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsFreezer_4050(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsMultizone_4051(visGrid.Connections source, visGrid.Multizone target) {
	if (source != null) {
	if (source.getMultizone().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsMultizone_4051(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsLoad_4052(visGrid.Connections source, visGrid.Load target) {
	if (source != null) {
	if (source.getLoad().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsLoad_4052(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsUnderground_line_4053(visGrid.Connections source, visGrid.Underground_line target) {
	if (source != null) {
	if (source.getUnderground_line().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsUnderground_line_4053(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsSubstation_4054(visGrid.Connections source, visGrid.Substation target) {
	if (source != null) {
	if (source.getSubstation().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsSubstation_4054(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsGenerator_4055(visGrid.Connections source, visGrid.Generator target) {
	if (source != null) {
	if (source.getGenerator().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsGenerator_4055(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRange_4056(visGrid.Connections source, visGrid.Range target) {
	if (source != null) {
	if (source.getRange().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRange_4056(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsPlayer_4057(visGrid.Connections source, visGrid.Player target) {
	if (source != null) {
	if (source.getPlayer().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsPlayer_4057(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsPower_electronics_4058(visGrid.Connections source, visGrid.Power_electronics target) {
	if (source != null) {
	if (source.getPower_electronics().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsPower_electronics_4058(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsFault_check_4059(visGrid.Connections source, visGrid.Fault_check target) {
	if (source != null) {
	if (source.getFault_check().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsFault_check_4059(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsEnergy_storage_4060(visGrid.Connections source, visGrid.Energy_storage target) {
	if (source != null) {
	if (source.getEnergy_storage().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsEnergy_storage_4060(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsDryer_4061(visGrid.Connections source, visGrid.Dryer target) {
	if (source != null) {
	if (source.getDryer().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsDryer_4061(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsSeries_reactor_4062(visGrid.Connections source, visGrid.Series_reactor target) {
	if (source != null) {
	if (source.getSeries_reactor().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsSeries_reactor_4062(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsComm_4063(visGrid.Connections source, visGrid.Comm target) {
	if (source != null) {
	if (source.getComm().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsComm_4063(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsCapbank_4064(visGrid.Connections source, visGrid.Capbank target) {
	if (source != null) {
	if (source.getCapbank().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsCapbank_4064(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsFrequency_gen_4065(visGrid.Connections source, visGrid.Frequency_gen target) {
	if (source != null) {
	if (source.getFrequency_gen().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsFrequency_gen_4065(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsMotor_4066(visGrid.Connections source, visGrid.Motor target) {
	if (source != null) {
	if (source.getMotor().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsMotor_4066(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsMicroturbine_4067(visGrid.Connections source, visGrid.Microturbine target) {
	if (source != null) {
	if (source.getMicroturbine().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsMicroturbine_4067(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsWeather_4068(visGrid.Connections source, visGrid.Weather target) {
	if (source != null) {
	if (source.getWeather().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsWeather_4068(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRegulator_configuration_4069(visGrid.Connections source, visGrid.Regulator_configuration target) {
	if (source != null) {
	if (source.getRegulator_configuration().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRegulator_configuration_4069(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsSwitch_4070(visGrid.Connections source, visGrid.Switch target) {
	if (source != null) {
	if (source.getSwitch().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsSwitch_4070(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsResidential_enduse_4071(visGrid.Connections source, visGrid.Residential_enduse target) {
	if (source != null) {
	if (source.getResidential_enduse().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsResidential_enduse_4071(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsSolar_4072(visGrid.Connections source, visGrid.Solar target) {
	if (source != null) {
	if (source.getSolar().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsSolar_4072(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsHouse_4073(visGrid.Connections source, visGrid.House target) {
	if (source != null) {
	if (source.getHouse().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsHouse_4073(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsVoltdump_4074(visGrid.Connections source, visGrid.Voltdump target) {
	if (source != null) {
	if (source.getVoltdump().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsVoltdump_4074(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsDishwasher_4075(visGrid.Connections source, visGrid.Dishwasher target) {
	if (source != null) {
	if (source.getDishwasher().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsDishwasher_4075(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTriplex_line_conductor_4076(visGrid.Connections source, visGrid.Triplex_line_conductor target) {
	if (source != null) {
	if (source.getTriplex_line_conductor().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTriplex_line_conductor_4076(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsRestoration_4077(visGrid.Connections source, visGrid.Restoration target) {
	if (source != null) {
	if (source.getRestoration().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsRestoration_4077(source, target);
}


/**
 * @generated
 */
public boolean canCreateConnectionsTriplex_node_4078(visGrid.Connections source, visGrid.Triplex_node target) {
	if (source != null) {
	if (source.getTriplex_node().contains(target)
) {
		return false;
	}
	}

	return canExistConnectionsTriplex_node_4078(source, target);
}

	
	/**
 * @generated
 */
	public boolean canExistConnectionsMicrowave_4001(visGrid.Connections source, visGrid.Microwave target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsClimate_4002(visGrid.Connections source, visGrid.Climate target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTriplex_line_4003(visGrid.Connections source, visGrid.Triplex_line target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTriplex_meter_4004(visGrid.Connections source, visGrid.Triplex_meter target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsLink_4005(visGrid.Connections source, visGrid.Link target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsClotheswasher_4006(visGrid.Connections source, visGrid.Clotheswasher target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsZIPload_4007(visGrid.Connections source, visGrid.ZIPload target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsOverhead_line_conductor_4008(visGrid.Connections source, visGrid.Overhead_line_conductor target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsLine_spacing_4009(visGrid.Connections source, visGrid.Line_spacing target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsInverter_4010(visGrid.Connections source, visGrid.Inverter target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTransformer_configuration_4011(visGrid.Connections source, visGrid.Transformer_configuration target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsNode_4012(visGrid.Connections source, visGrid.Node target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRefrigerator_4013(visGrid.Connections source, visGrid.Refrigerator target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsPlc_4014(visGrid.Connections source, visGrid.Plc target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsController2_4015(visGrid.Connections source, visGrid.Controller2 target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTriplex_line_configuration_4016(visGrid.Connections source, visGrid.Triplex_line_configuration target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTransformer_4017(visGrid.Connections source, visGrid.Transformer target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRectifier_4018(visGrid.Connections source, visGrid.Rectifier target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsVolt_var_control_4019(visGrid.Connections source, visGrid.Volt_var_control target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsUnderground_line_conductor_4020(visGrid.Connections source, visGrid.Underground_line_conductor target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsHouse_a_4021(visGrid.Connections source, visGrid.House_a target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsLights_4022(visGrid.Connections source, visGrid.Lights target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsWaterheater_4023(visGrid.Connections source, visGrid.Waterheater target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsShaper_4024(visGrid.Connections source, visGrid.Shaper target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsStubauction_4025(visGrid.Connections source, visGrid.Stubauction target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsCsv_reader_4026(visGrid.Connections source, visGrid.Csv_reader target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsDiesel_dg_4027(visGrid.Connections source, visGrid.Diesel_dg target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsController_4028(visGrid.Connections source, visGrid.Controller target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsLine_configuration_4029(visGrid.Connections source, visGrid.Line_configuration target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsPqload_4030(visGrid.Connections source, visGrid.Pqload target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRegulator_4031(visGrid.Connections source, visGrid.Regulator target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsDc_dc_converter_4032(visGrid.Connections source, visGrid.Dc_dc_converter target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsOccupantload_4033(visGrid.Connections source, visGrid.Occupantload target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsFuse_4034(visGrid.Connections source, visGrid.Fuse target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsCapacitor_4035(visGrid.Connections source, visGrid.Capacitor target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsBattery_4036(visGrid.Connections source, visGrid.Battery target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsBilldump_4037(visGrid.Connections source, visGrid.Billdump target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsLine_4038(visGrid.Connections source, visGrid.Line target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsMeter_4039(visGrid.Connections source, visGrid.Meter target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsOverhead_line_4040(visGrid.Connections source, visGrid.Overhead_line target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRelay_4041(visGrid.Connections source, visGrid.Relay target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRecorder_4042(visGrid.Connections source, visGrid.Recorder target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsPlugload_4043(visGrid.Connections source, visGrid.Plugload target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsWindturb_dg_4044(visGrid.Connections source, visGrid.Windturb_dg target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsOffice_4045(visGrid.Connections source, visGrid.Office target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsHistogram_4046(visGrid.Connections source, visGrid.Histogram target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsCollector_4047(visGrid.Connections source, visGrid.Collector target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsAuction_4048(visGrid.Connections source, visGrid.Auction target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsEvcharger_4049(visGrid.Connections source, visGrid.Evcharger target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsFreezer_4050(visGrid.Connections source, visGrid.Freezer target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsMultizone_4051(visGrid.Connections source, visGrid.Multizone target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsLoad_4052(visGrid.Connections source, visGrid.Load target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsUnderground_line_4053(visGrid.Connections source, visGrid.Underground_line target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsSubstation_4054(visGrid.Connections source, visGrid.Substation target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsGenerator_4055(visGrid.Connections source, visGrid.Generator target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRange_4056(visGrid.Connections source, visGrid.Range target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsPlayer_4057(visGrid.Connections source, visGrid.Player target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsPower_electronics_4058(visGrid.Connections source, visGrid.Power_electronics target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsFault_check_4059(visGrid.Connections source, visGrid.Fault_check target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsEnergy_storage_4060(visGrid.Connections source, visGrid.Energy_storage target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsDryer_4061(visGrid.Connections source, visGrid.Dryer target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsSeries_reactor_4062(visGrid.Connections source, visGrid.Series_reactor target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsComm_4063(visGrid.Connections source, visGrid.Comm target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsCapbank_4064(visGrid.Connections source, visGrid.Capbank target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsFrequency_gen_4065(visGrid.Connections source, visGrid.Frequency_gen target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsMotor_4066(visGrid.Connections source, visGrid.Motor target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsMicroturbine_4067(visGrid.Connections source, visGrid.Microturbine target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsWeather_4068(visGrid.Connections source, visGrid.Weather target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRegulator_configuration_4069(visGrid.Connections source, visGrid.Regulator_configuration target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsSwitch_4070(visGrid.Connections source, visGrid.Switch target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsResidential_enduse_4071(visGrid.Connections source, visGrid.Residential_enduse target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsSolar_4072(visGrid.Connections source, visGrid.Solar target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsHouse_4073(visGrid.Connections source, visGrid.House target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsVoltdump_4074(visGrid.Connections source, visGrid.Voltdump target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsDishwasher_4075(visGrid.Connections source, visGrid.Dishwasher target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTriplex_line_conductor_4076(visGrid.Connections source, visGrid.Triplex_line_conductor target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsRestoration_4077(visGrid.Connections source, visGrid.Restoration target) {
		return true;
	}

	/**
 * @generated
 */
	public boolean canExistConnectionsTriplex_node_4078(visGrid.Connections source, visGrid.Triplex_node target) {
		return true;
	}
}

	}
