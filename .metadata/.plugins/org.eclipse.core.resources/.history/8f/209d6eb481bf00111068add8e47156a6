package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class NodeEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2001;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public NodeEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.NodeItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new NodeFigure();
	}

		/**
 * @generated
 */
	public NodeFigure getPrimaryShape() {
		return (NodeFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.NodeNameEditPart) {
			((visGrid.diagram.edit.parts.NodeNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureNodeNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.NodeNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.NodeNameEditPart.VISUAL_ID));
		}
	

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnTarget() {
		java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(1);
				types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionsNode_4012);
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMATypesForSource(org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.ConnectionsNode_4012) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Connections_2047);
					}
				return types;
	}


		
	
	
	
/**
 * @generated
 */
public class NodeFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBustypeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBusflagsFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeReference_busFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeMaximum_voltage_errorFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeVoltage_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeVoltage_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeVoltage_CFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeVoltage_ABFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeVoltage_BCFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeVoltage_CAFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeCurrent_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeCurrent_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeCurrent_CFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodePower_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodePower_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodePower_CFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeShunt_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeShunt_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeShunt_CFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodePhasesFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeNominal_voltageFigure; 


	/**
	 * @generated
	 */
	public NodeFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureNodeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeNameFigure.setText("<...>");

this.add(fFigureNodeNameFigure);



fFigureNodeBustypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeBustypeFigure.setText("<...>");

this.add(fFigureNodeBustypeFigure);



fFigureNodeBusflagsFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeBusflagsFigure.setText("<...>");

this.add(fFigureNodeBusflagsFigure);



fFigureNodeReference_busFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeReference_busFigure.setText("<...>");

this.add(fFigureNodeReference_busFigure);



fFigureNodeMaximum_voltage_errorFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeMaximum_voltage_errorFigure.setText("<...>");

this.add(fFigureNodeMaximum_voltage_errorFigure);



fFigureNodeVoltage_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeVoltage_AFigure.setText("<...>");

this.add(fFigureNodeVoltage_AFigure);



fFigureNodeVoltage_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeVoltage_BFigure.setText("<...>");

this.add(fFigureNodeVoltage_BFigure);



fFigureNodeVoltage_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeVoltage_CFigure.setText("<...>");

this.add(fFigureNodeVoltage_CFigure);



fFigureNodeVoltage_ABFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeVoltage_ABFigure.setText("<...>");

this.add(fFigureNodeVoltage_ABFigure);



fFigureNodeVoltage_BCFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeVoltage_BCFigure.setText("<...>");

this.add(fFigureNodeVoltage_BCFigure);



fFigureNodeVoltage_CAFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeVoltage_CAFigure.setText("<...>");

this.add(fFigureNodeVoltage_CAFigure);



fFigureNodeCurrent_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeCurrent_AFigure.setText("<...>");

this.add(fFigureNodeCurrent_AFigure);



fFigureNodeCurrent_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeCurrent_BFigure.setText("<...>");

this.add(fFigureNodeCurrent_BFigure);



fFigureNodeCurrent_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeCurrent_CFigure.setText("<...>");

this.add(fFigureNodeCurrent_CFigure);



fFigureNodePower_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodePower_AFigure.setText("<...>");

this.add(fFigureNodePower_AFigure);



fFigureNodePower_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodePower_BFigure.setText("<...>");

this.add(fFigureNodePower_BFigure);



fFigureNodePower_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodePower_CFigure.setText("<...>");

this.add(fFigureNodePower_CFigure);



fFigureNodeShunt_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeShunt_AFigure.setText("<...>");

this.add(fFigureNodeShunt_AFigure);



fFigureNodeShunt_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeShunt_BFigure.setText("<...>");

this.add(fFigureNodeShunt_BFigure);



fFigureNodeShunt_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeShunt_CFigure.setText("<...>");

this.add(fFigureNodeShunt_CFigure);



fFigureNodePhasesFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodePhasesFigure.setText("<...>");

this.add(fFigureNodePhasesFigure);



fFigureNodeNominal_voltageFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureNodeNominal_voltageFigure.setText("<...>");

this.add(fFigureNodeNominal_voltageFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeNameFigure() {
		return fFigureNodeNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBustypeFigure() {
		return fFigureNodeBustypeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBusflagsFigure() {
		return fFigureNodeBusflagsFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeReference_busFigure() {
		return fFigureNodeReference_busFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeMaximum_voltage_errorFigure() {
		return fFigureNodeMaximum_voltage_errorFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeVoltage_AFigure() {
		return fFigureNodeVoltage_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeVoltage_BFigure() {
		return fFigureNodeVoltage_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeVoltage_CFigure() {
		return fFigureNodeVoltage_CFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeVoltage_ABFigure() {
		return fFigureNodeVoltage_ABFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeVoltage_BCFigure() {
		return fFigureNodeVoltage_BCFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeVoltage_CAFigure() {
		return fFigureNodeVoltage_CAFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeCurrent_AFigure() {
		return fFigureNodeCurrent_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeCurrent_BFigure() {
		return fFigureNodeCurrent_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeCurrent_CFigure() {
		return fFigureNodeCurrent_CFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodePower_AFigure() {
		return fFigureNodePower_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodePower_BFigure() {
		return fFigureNodePower_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodePower_CFigure() {
		return fFigureNodePower_CFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeShunt_AFigure() {
		return fFigureNodeShunt_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeShunt_BFigure() {
		return fFigureNodeShunt_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeShunt_CFigure() {
		return fFigureNodeShunt_CFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodePhasesFigure() {
		return fFigureNodePhasesFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeNominal_voltageFigure() {
		return fFigureNodeNominal_voltageFigure;
	}


}


	
	}
