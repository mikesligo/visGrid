	package visGrid.diagram.edit.policies;

/**
 * @generated
 */
public class ConnectionItemSemanticEditPolicy extends visGrid.diagram.edit.policies.VisGridBaseItemSemanticEditPolicy {

		/**
 * @generated
 */
	public ConnectionItemSemanticEditPolicy() {
				super(visGrid.diagram.providers.VisGridElementTypes.Connection_2054);
	}

	
	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getDestroyElementCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest req) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
	org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand cmd = new org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand(getEditingDomain(), null);
	cmd.setTransactionNestingEnabled(false);
		for (java.util.Iterator<?> it = view.getSourceEdges().iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.Edge outgoingLink = (org.eclipse.gmf.runtime.notation.Edge) it.next();
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRelayEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionCommEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionVolt_var_controlEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionLine_spacingEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionResidential_enduseEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionWindturb_dgEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionBatteryEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionAuctionEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionSwitchEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionMultizoneEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionWeatherEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTransformer_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionPlayerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionLinkEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionController2EditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionCsv_readerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionControllerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionDiesel_dgEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionLightsEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionInverterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTriplex_line_conductorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionFuseEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionMicroturbineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionUnderground_lineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionZIPloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionSubstationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionLine_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionPlcEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionGeneratorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionCollectorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionOccupantloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTransformerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRefrigeratorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionShaperEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionPqloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionMicrowaveEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTriplex_lineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTriplex_nodeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionDryerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionOverhead_lineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionPlugloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionHouse_aEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionHistogramEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionClotheswasherEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRestorationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionCapbankEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionFrequency_genEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionHouseEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRegulatorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRangeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionPower_electronicsEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRecorderEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionSolarEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRegulator_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionEvchargerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionRectifierEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionOfficeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionOverhead_line_conductorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionStubauctionEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionClimateEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionLineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTriplex_meterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionDc_dc_converterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionLoadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionCapacitorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionSeries_reactorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionMeterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionFault_checkEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionEnergy_storageEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionFreezerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionVoltdumpEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionMotorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionNodeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionBilldumpEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionWaterheaterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionUnderground_line_conductorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionDishwasherEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionTriplex_line_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
	}
	org.eclipse.emf.ecore.EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
	if (annotation == null) {
		// there are indirectly referenced children, need extra commands: false
		addDestroyShortcutsCommand(cmd, view);
		// delete host element
		cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand(req));
	} else {
		cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), view));
	}
	return getGEFWrapper(cmd.reduce());
}
					
/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	org.eclipse.gef.commands.Command command = req.getTarget() == null ?
			getStartCreateRelationshipCommand(req) : getCompleteCreateRelationshipCommand(req);
	return command != null ? command : super.getCreateRelationshipCommand(req);
}

/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getStartCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRelay_4001 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRelayCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionComm_4002 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCommCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionVolt_var_control_4003 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionVolt_var_controlCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLine_spacing_4004 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLine_spacingCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionResidential_enduse_4005 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionResidential_enduseCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionWindturb_dg_4006 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionWindturb_dgCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionBattery_4007 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionBatteryCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionAuction_4008 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionAuctionCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSwitch_4009 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSwitchCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMultizone_4010 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMultizoneCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionWeather_4011 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionWeatherCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTransformer_configuration_4012 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTransformer_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPlayer_4013 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPlayerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLink_4014 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLinkCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionController2_4015 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionController2CreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCsv_reader_4016 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCsv_readerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionController_4017 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionControllerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDiesel_dg_4018 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDiesel_dgCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLights_4019 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLightsCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionInverter_4020 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionInverterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_line_conductor_4021 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_line_conductorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFuse_4022 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFuseCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMicroturbine_4023 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMicroturbineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionUnderground_line_4024 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionUnderground_lineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionZIPload_4025 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionZIPloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSubstation_4026 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSubstationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLine_configuration_4027 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLine_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPlc_4028 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPlcCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionGenerator_4029 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionGeneratorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCollector_4030 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCollectorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOccupantload_4031 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOccupantloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTransformer_4032 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTransformerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRefrigerator_4033 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRefrigeratorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionShaper_4034 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionShaperCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPqload_4035 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPqloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMicrowave_4036 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMicrowaveCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_line_4037 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_lineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_node_4038 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_nodeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDryer_4039 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDryerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOverhead_line_4040 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOverhead_lineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPlugload_4041 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPlugloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionHouse_a_4042 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionHouse_aCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionHistogram_4043 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionHistogramCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionClotheswasher_4044 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionClotheswasherCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRestoration_4045 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRestorationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCapbank_4046 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCapbankCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFrequency_gen_4047 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFrequency_genCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionHouse_4048 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionHouseCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRegulator_4049 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRegulatorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRange_4050 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRangeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPower_electronics_4051 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPower_electronicsCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRecorder_4052 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRecorderCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSolar_4053 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSolarCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRegulator_configuration_4054 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRegulator_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionEvcharger_4055 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionEvchargerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRectifier_4056 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRectifierCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOffice_4057 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOfficeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOverhead_line_conductor_4058 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOverhead_line_conductorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionStubauction_4059 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionStubauctionCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionClimate_4060 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionClimateCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLine_4061 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_meter_4062 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_meterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDc_dc_converter_4063 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDc_dc_converterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLoad_4064 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLoadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCapacitor_4065 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCapacitorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSeries_reactor_4066 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSeries_reactorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMeter_4067 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMeterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFault_check_4068 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFault_checkCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionEnergy_storage_4069 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionEnergy_storageCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFreezer_4070 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFreezerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionVoltdump_4071 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionVoltdumpCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMotor_4072 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMotorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionNode_4073 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionNodeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionBilldump_4074 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionBilldumpCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionWaterheater_4075 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionWaterheaterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionUnderground_line_conductor_4076 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionUnderground_line_conductorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDishwasher_4077 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDishwasherCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_line_configuration_4078 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_line_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
	return null;
}

/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCompleteCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRelay_4001 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionComm_4002 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionVolt_var_control_4003 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLine_spacing_4004 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionResidential_enduse_4005 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionWindturb_dg_4006 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionBattery_4007 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionAuction_4008 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSwitch_4009 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMultizone_4010 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionWeather_4011 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTransformer_configuration_4012 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPlayer_4013 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLink_4014 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionController2_4015 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCsv_reader_4016 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionController_4017 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDiesel_dg_4018 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLights_4019 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionInverter_4020 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_line_conductor_4021 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFuse_4022 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMicroturbine_4023 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionUnderground_line_4024 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionZIPload_4025 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSubstation_4026 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLine_configuration_4027 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPlc_4028 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionGenerator_4029 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCollector_4030 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOccupantload_4031 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTransformer_4032 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRefrigerator_4033 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionShaper_4034 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPqload_4035 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMicrowave_4036 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_line_4037 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_node_4038 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDryer_4039 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOverhead_line_4040 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPlugload_4041 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionHouse_a_4042 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionHistogram_4043 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionClotheswasher_4044 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRestoration_4045 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCapbank_4046 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFrequency_gen_4047 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionHouse_4048 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRegulator_4049 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRange_4050 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionPower_electronics_4051 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRecorder_4052 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSolar_4053 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRegulator_configuration_4054 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionEvcharger_4055 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionRectifier_4056 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOffice_4057 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionOverhead_line_conductor_4058 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionStubauction_4059 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionClimate_4060 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLine_4061 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_meter_4062 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDc_dc_converter_4063 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionLoad_4064 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionCapacitor_4065 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionSeries_reactor_4066 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMeter_4067 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFault_check_4068 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionEnergy_storage_4069 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionFreezer_4070 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionVoltdump_4071 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionMotor_4072 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionNode_4073 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionBilldump_4074 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionWaterheater_4075 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionUnderground_line_conductor_4076 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionDishwasher_4077 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionTriplex_line_configuration_4078 == req.getElementType()) {
		return null;
	}
	return null;
}
					
/**
 * Returns command to reorient EReference based link. New link target or source
 * should be the domain model element associated with this node.
 * 
 * @generated
 */
protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
	switch (getVisualID(req)) {
	case visGrid.diagram.edit.parts.ConnectionRelayEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRelayReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionCommEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCommReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionVolt_var_controlEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionVolt_var_controlReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionLine_spacingEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLine_spacingReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionResidential_enduseEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionResidential_enduseReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionWindturb_dgEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionWindturb_dgReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionBatteryEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionBatteryReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionAuctionEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionAuctionReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionSwitchEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSwitchReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionMultizoneEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMultizoneReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionWeatherEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionWeatherReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTransformer_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTransformer_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionPlayerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPlayerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionLinkEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLinkReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionController2EditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionController2ReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionCsv_readerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCsv_readerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionControllerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionControllerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionDiesel_dgEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDiesel_dgReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionLightsEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLightsReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionInverterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionInverterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTriplex_line_conductorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_line_conductorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionFuseEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFuseReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionMicroturbineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMicroturbineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionUnderground_lineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionUnderground_lineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionZIPloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionZIPloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionSubstationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSubstationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionLine_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLine_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionPlcEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPlcReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionGeneratorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionGeneratorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionCollectorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCollectorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionOccupantloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOccupantloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTransformerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTransformerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRefrigeratorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRefrigeratorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionShaperEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionShaperReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionPqloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPqloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionMicrowaveEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMicrowaveReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTriplex_lineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_lineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTriplex_nodeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_nodeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionDryerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDryerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionOverhead_lineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOverhead_lineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionPlugloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPlugloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionHouse_aEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionHouse_aReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionHistogramEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionHistogramReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionClotheswasherEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionClotheswasherReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRestorationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRestorationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionCapbankEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCapbankReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionFrequency_genEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFrequency_genReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionHouseEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionHouseReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRegulatorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRegulatorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRangeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRangeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionPower_electronicsEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionPower_electronicsReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRecorderEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRecorderReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionSolarEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSolarReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRegulator_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRegulator_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionEvchargerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionEvchargerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionRectifierEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionRectifierReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionOfficeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOfficeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionOverhead_line_conductorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionOverhead_line_conductorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionStubauctionEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionStubauctionReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionClimateEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionClimateReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionLineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTriplex_meterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_meterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionDc_dc_converterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDc_dc_converterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionLoadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionLoadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionCapacitorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionCapacitorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionSeries_reactorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionSeries_reactorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionMeterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMeterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionFault_checkEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFault_checkReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionEnergy_storageEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionEnergy_storageReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionFreezerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionFreezerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionVoltdumpEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionVoltdumpReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionMotorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionMotorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionNodeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionNodeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionBilldumpEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionBilldumpReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionWaterheaterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionWaterheaterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionUnderground_line_conductorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionUnderground_line_conductorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionDishwasherEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionDishwasherReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionTriplex_line_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionTriplex_line_configurationReorientCommand(req));
	}
	return super.getReorientReferenceRelationshipCommand(req);
}
	
	}
