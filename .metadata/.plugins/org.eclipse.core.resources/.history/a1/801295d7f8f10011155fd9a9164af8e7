<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    package org.LiveGraph.settings;<a name="line.1"></a>
<FONT color="green">002</FONT>    <a name="line.2"></a>
<FONT color="green">003</FONT>    import java.util.ArrayList;<a name="line.3"></a>
<FONT color="green">004</FONT>    import java.util.List;<a name="line.4"></a>
<FONT color="green">005</FONT>    <a name="line.5"></a>
<FONT color="green">006</FONT>    /**<a name="line.6"></a>
<FONT color="green">007</FONT>     * Base class for all settings classes which can hadle observers to listen to<a name="line.7"></a>
<FONT color="green">008</FONT>     * settings events. This class handles all observer and event handling.<a name="line.8"></a>
<FONT color="green">009</FONT>     * <a name="line.9"></a>
<FONT color="green">010</FONT>     * &lt;p style="font-size:smaller;"&gt;This product includes software developed by the<a name="line.10"></a>
<FONT color="green">011</FONT>     *    &lt;strong&gt;LiveGraph&lt;/strong&gt; project and its contributors.&lt;br /&gt;<a name="line.11"></a>
<FONT color="green">012</FONT>     *    (&lt;a href="http://www.live-graph.org" target="_blank"&gt;http://www.live-graph.org&lt;/a&gt;)&lt;br /&gt;<a name="line.12"></a>
<FONT color="green">013</FONT>     *    Copyright (c) 2007 G. Paperin.&lt;br /&gt;<a name="line.13"></a>
<FONT color="green">014</FONT>     *    All rights reserved.<a name="line.14"></a>
<FONT color="green">015</FONT>     * &lt;/p&gt;<a name="line.15"></a>
<FONT color="green">016</FONT>     * &lt;p style="font-size:smaller;"&gt;File: ObservableSettings.java&lt;/p&gt; <a name="line.16"></a>
<FONT color="green">017</FONT>     * &lt;p style="font-size:smaller;"&gt;Redistribution and use in source and binary forms, with or<a name="line.17"></a>
<FONT color="green">018</FONT>     *    without modification, are permitted provided that the following terms and conditions are met:<a name="line.18"></a>
<FONT color="green">019</FONT>     * &lt;/p&gt;<a name="line.19"></a>
<FONT color="green">020</FONT>     * &lt;p style="font-size:smaller;"&gt;1. Redistributions of source code must retain the above<a name="line.20"></a>
<FONT color="green">021</FONT>     *    acknowledgement of the LiveGraph project and its web-site, the above copyright notice,<a name="line.21"></a>
<FONT color="green">022</FONT>     *    this list of conditions and the following disclaimer.&lt;br /&gt;<a name="line.22"></a>
<FONT color="green">023</FONT>     *    2. Redistributions in binary form must reproduce the above acknowledgement of the<a name="line.23"></a>
<FONT color="green">024</FONT>     *    LiveGraph project and its web-site, the above copyright notice, this list of conditions<a name="line.24"></a>
<FONT color="green">025</FONT>     *    and the following disclaimer in the documentation and/or other materials provided with<a name="line.25"></a>
<FONT color="green">026</FONT>     *    the distribution.&lt;br /&gt;<a name="line.26"></a>
<FONT color="green">027</FONT>     *    3. All advertising materials mentioning features or use of this software or any derived<a name="line.27"></a>
<FONT color="green">028</FONT>     *    software must display the following acknowledgement:&lt;br /&gt;<a name="line.28"></a>
<FONT color="green">029</FONT>     *    &lt;em&gt;This product includes software developed by the LiveGraph project and its<a name="line.29"></a>
<FONT color="green">030</FONT>     *    contributors.&lt;br /&gt;(http://www.live-graph.org)&lt;/em&gt;&lt;br /&gt;<a name="line.30"></a>
<FONT color="green">031</FONT>     *    4. All advertising materials distributed in form of HTML pages or any other technology<a name="line.31"></a>
<FONT color="green">032</FONT>     *    permitting active hyper-links that mention features or use of this software or any<a name="line.32"></a>
<FONT color="green">033</FONT>     *    derived software must display the acknowledgment specified in condition 3 of this<a name="line.33"></a>
<FONT color="green">034</FONT>     *    agreement, and in addition, include a visible and working hyper-link to the LiveGraph<a name="line.34"></a>
<FONT color="green">035</FONT>     *    homepage (http://www.live-graph.org).<a name="line.35"></a>
<FONT color="green">036</FONT>     * &lt;/p&gt;<a name="line.36"></a>
<FONT color="green">037</FONT>     * &lt;p style="font-size:smaller;"&gt;THIS SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY<a name="line.37"></a>
<FONT color="green">038</FONT>     *    OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF<a name="line.38"></a>
<FONT color="green">039</FONT>     *    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  NONINFRINGEMENT. IN NO EVENT SHALL<a name="line.39"></a>
<FONT color="green">040</FONT>     *    THE AUTHORS, CONTRIBUTORS OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<a name="line.40"></a>
<FONT color="green">041</FONT>     *    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  FROM, OUT OF OR<a name="line.41"></a>
<FONT color="green">042</FONT>     *    IN CONNECTION WITH THE SOFTWARE OR THE USE OR  OTHER DEALINGS IN THE SOFTWARE.<a name="line.42"></a>
<FONT color="green">043</FONT>     * &lt;/p&gt;<a name="line.43"></a>
<FONT color="green">044</FONT>     * <a name="line.44"></a>
<FONT color="green">045</FONT>     * @author Greg Paperin (&lt;a href="http://www.paperin.org" target="_blank"&gt;http://www.paperin.org&lt;/a&gt;)<a name="line.45"></a>
<FONT color="green">046</FONT>     * @version {@value org.LiveGraph.LiveGraph#version}<a name="line.46"></a>
<FONT color="green">047</FONT>     */<a name="line.47"></a>
<FONT color="green">048</FONT>    public class ObservableSettings {<a name="line.48"></a>
<FONT color="green">049</FONT>    <a name="line.49"></a>
<FONT color="green">050</FONT>    private List&lt;SettingsObserver&gt; observers = new ArrayList&lt;SettingsObserver&gt;(); <a name="line.50"></a>
<FONT color="green">051</FONT>    <a name="line.51"></a>
<FONT color="green">052</FONT>    public boolean addObserver(SettingsObserver observer) {<a name="line.52"></a>
<FONT color="green">053</FONT>            if (hasObserver(observer))<a name="line.53"></a>
<FONT color="green">054</FONT>                    return false;<a name="line.54"></a>
<FONT color="green">055</FONT>            return observers.add(observer);<a name="line.55"></a>
<FONT color="green">056</FONT>    }<a name="line.56"></a>
<FONT color="green">057</FONT>    <a name="line.57"></a>
<FONT color="green">058</FONT>    public boolean hasObserver(SettingsObserver observer) {<a name="line.58"></a>
<FONT color="green">059</FONT>            return observers.contains(observer);    <a name="line.59"></a>
<FONT color="green">060</FONT>    }<a name="line.60"></a>
<FONT color="green">061</FONT>    <a name="line.61"></a>
<FONT color="green">062</FONT>    public boolean removeObserver(SettingsObserver observer) {<a name="line.62"></a>
<FONT color="green">063</FONT>            return observers.remove(observer);<a name="line.63"></a>
<FONT color="green">064</FONT>    }<a name="line.64"></a>
<FONT color="green">065</FONT>    <a name="line.65"></a>
<FONT color="green">066</FONT>    public int countObservers() {<a name="line.66"></a>
<FONT color="green">067</FONT>            return observers.size();<a name="line.67"></a>
<FONT color="green">068</FONT>    }<a name="line.68"></a>
<FONT color="green">069</FONT>    <a name="line.69"></a>
<FONT color="green">070</FONT>    public void notifyObservers(Object info) {<a name="line.70"></a>
<FONT color="green">071</FONT>            ErrorWhileSettingHasChangedProcessingException err = null;<a name="line.71"></a>
<FONT color="green">072</FONT>            for (SettingsObserver observer : observers) {<a name="line.72"></a>
<FONT color="green">073</FONT>                    try {<a name="line.73"></a>
<FONT color="green">074</FONT>                            observer.settingHasChanged(this, info);<a name="line.74"></a>
<FONT color="green">075</FONT>                    } catch (ErrorWhileSettingHasChangedProcessingException e) {<a name="line.75"></a>
<FONT color="green">076</FONT>                            if (!e.getDontBreakObserverNotification())<a name="line.76"></a>
<FONT color="green">077</FONT>                                    throw e;<a name="line.77"></a>
<FONT color="green">078</FONT>                            if (null == err)<a name="line.78"></a>
<FONT color="green">079</FONT>                                    err = e;<a name="line.79"></a>
<FONT color="green">080</FONT>                    }<a name="line.80"></a>
<FONT color="green">081</FONT>            }<a name="line.81"></a>
<FONT color="green">082</FONT>            if (null != err)<a name="line.82"></a>
<FONT color="green">083</FONT>                    throw err;<a name="line.83"></a>
<FONT color="green">084</FONT>    }<a name="line.84"></a>
<FONT color="green">085</FONT>    <a name="line.85"></a>
<FONT color="green">086</FONT>    public void notifyObservers() {<a name="line.86"></a>
<FONT color="green">087</FONT>            notifyObservers(null);<a name="line.87"></a>
<FONT color="green">088</FONT>    }<a name="line.88"></a>
<FONT color="green">089</FONT>    <a name="line.89"></a>
<FONT color="green">090</FONT>    }<a name="line.90"></a>




























































</PRE>
</BODY>
</HTML>
