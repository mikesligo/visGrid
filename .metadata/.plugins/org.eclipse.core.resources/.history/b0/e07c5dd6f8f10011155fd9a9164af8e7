<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0) on Sun Jun 03 18:12:11 EST 2007 -->
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<TITLE>
UpdateInvoker
</TITLE>

<META NAME="date" CONTENT="2007-06-03">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../LiveGraph-JavaDoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="UpdateInvoker";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/UpdateInvoker.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<a href=http://www.live-graph.org target=_blank>LiveGraph</a><br />data visualisation and analysis framework</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/LiveGraph/dataCache/DataStreamToCacheReader.html" title="class in org.LiveGraph.dataCache"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/LiveGraph/dataCache/UpdateInvoker.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="UpdateInvoker.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.LiveGraph.dataCache</FONT>
<BR>
Class UpdateInvoker</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.LiveGraph.dataCache.UpdateInvoker</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.lang.Runnable, <A HREF="../../../org/LiveGraph/settings/SettingsObserver.html" title="interface in org.LiveGraph.settings">SettingsObserver</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.58"><B>UpdateInvoker</B></A><DT>extends java.lang.Object<DT>implements java.lang.Runnable, <A HREF="../../../org/LiveGraph/settings/SettingsObserver.html" title="interface in org.LiveGraph.settings">SettingsObserver</A></DL>
</PRE>

<P>
An object of this class is used to triger updates from a data input stream
 into a <A HREF="../../../org/LiveGraph/dataCache/DataCache.html" title="class in org.LiveGraph.dataCache"><CODE>DataCache</CODE></A> at regular intervals.
 
 <p style="font-size:smaller;">This product includes software developed by the
    <strong>LiveGraph</strong> project and its contributors.<br />
    (<a href="http://www.live-graph.org" target="_blank">http://www.live-graph.org</a>)<br />
    Copyright (c) 2007 G. Paperin.<br />
    All rights reserved.
 </p>
 <p style="font-size:smaller;">File: UpdateInvoker.java</p> 
 <p style="font-size:smaller;">Redistribution and use in source and binary forms, with or
    without modification, are permitted provided that the following terms and conditions are met:
 </p>
 <p style="font-size:smaller;">1. Redistributions of source code must retain the above
    acknowledgement of the LiveGraph project and its web-site, the above copyright notice,
    this list of conditions and the following disclaimer.<br />
    2. Redistributions in binary form must reproduce the above acknowledgement of the
    LiveGraph project and its web-site, the above copyright notice, this list of conditions
    and the following disclaimer in the documentation and/or other materials provided with
    the distribution.<br />
    3. All advertising materials mentioning features or use of this software or any derived
    software must display the following acknowledgement:<br />
    <em>This product includes software developed by the LiveGraph project and its
    contributors.<br />(http://www.live-graph.org)</em><br />
    4. All advertising materials distributed in form of HTML pages or any other technology
    permitting active hyper-links that mention features or use of this software or any
    derived software must display the acknowledgment specified in condition 3 of this
    agreement, and in addition, include a visible and working hyper-link to the LiveGraph
    homepage (http://www.live-graph.org).
 </p>
 <p style="font-size:smaller;">THIS SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY
    OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS, CONTRIBUTORS OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  FROM, OUT OF OR
    IN CONNECTION WITH THE SOFTWARE OR THE USE OR  OTHER DEALINGS IN THE SOFTWARE.
 </p>
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD><A HREF="../../../org/LiveGraph/LiveGraph.html#version">"1.1.0"</A></DD>
<DT><B>Author:</B></DT>
  <DD>Greg Paperin (<a href="http://www.paperin.org" target="_blank">http://www.paperin.org</a>)</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../org/LiveGraph/dataCache/DataCache.html" title="class in org.LiveGraph.dataCache">DataCache</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#dataCache">dataCache</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cache to hold the data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.io.File</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#dataFile">dataFile</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data file from which to update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../org/LiveGraph/dataCache/DataStreamToCacheReader.html" title="class in org.LiveGraph.dataCache">DataStreamToCacheReader</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#dataReader">dataReader</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The data reader for the input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#defaultTimeTickLength">defaultTimeTickLength</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;How long to sleep for when updates are to be invoked automatically.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#dontCache">dontCache</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Whether cache must be reset before each read.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.lang.Thread</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#fileReadingThread">fileReadingThread</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread actually performing the update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#interval">interval</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Interval between updates in milliseconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#lastUpdateTime">lastUpdateTime</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System milliseconds at last update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#mustQuit">mustQuit</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Whether the invoker thread should wind up at the next possibility.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.util.List&lt;<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#observers">observers</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List of observers.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#remainingMillis">remainingMillis</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remaining milliseconds till the next update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#restingTimeTickLength">restingTimeTickLength</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;How long to sleep for when updates are to be invoked manually.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#sinceUpdateTime">sinceUpdateTime</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Milliseconds since last update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#timeTickLength">timeTickLength</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The sleep length betweek ticks at which this invoker can react to events and send
 mesages.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#updateInProgress">updateInProgress</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Whether an update is currently running.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#UpdateInvoker()">UpdateInvoker</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new invoker.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#addObserver(org.LiveGraph.dataCache.UpdateInvokerObserver)">addObserver</A></B>(<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&nbsp;observer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add an observer to this invoker.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#closeReader()">closeReader</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes the current data reader.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#countObervers()">countObervers</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Count observers.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#createDataReader()">createDataReader</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a reader on the currently set data input file and resets the cache.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#DataFileSettings_DataFile(org.LiveGraph.settings.DataFileSettings)">DataFileSettings_DataFile</A></B>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adjusts the file used by this invoker in response to a corresponding change in the
 data file settings.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#DataFileSettings_DoNotCacheData(org.LiveGraph.settings.DataFileSettings)">DataFileSettings_DoNotCacheData</A></B>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adjusts the cache resetting option used by this invoker in response to a corresponding change in the
 data file settings.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#DataFileSettings_ShowOnlyTailData(org.LiveGraph.settings.DataFileSettings)">DataFileSettings_ShowOnlyTailData</A></B>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adjusts the cache mode used by this invoker in response to a corresponding change in the
 data file settings.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#DataFileSettings_UpdateFrequency(org.LiveGraph.settings.DataFileSettings)">DataFileSettings_UpdateFrequency</A></B>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adjusts the update frequency used by this invoker in response to a corresponding change in the
 data file settings.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#getInterval()">getInterval</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The length of the interval between data updates.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#getRemainingMillis()">getRemainingMillis</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Time to next update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#hasObserver(org.LiveGraph.dataCache.UpdateInvokerObserver)">hasObserver</A></B>(<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&nbsp;observer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check for the specified observer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#isUpdateInProgress()">isUpdateInProgress</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Whether an update is currently running.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#notifyObserversTimerTick()">notifyObserversTimerTick</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies this invoker's observers that this observer has waken up to process events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#notifyObserversUpdateFinished(java.lang.String)">notifyObserversUpdateFinished</A></B>(java.lang.String&nbsp;errorMsg)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies this invoker's observers that an update has finished.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#notifyObserversUpdateStarted()">notifyObserversUpdateStarted</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies this invoker's observers that an update was triggered.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#removeObserver(org.LiveGraph.dataCache.UpdateInvokerObserver)">removeObserver</A></B>(<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&nbsp;observer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes an observer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#run()">run</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Main invoker loop:
 call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#timeTick()"><CODE>timeTick()</CODE></A>;
 if it is time for the next update, call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#update()"><CODE>update()</CODE></A>;
 call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#timeTick()"><CODE>timeTick()</CODE></A> again and continue the loop until <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#mustQuit"><CODE>mustQuit</CODE></A> is set to true;
 call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#tidyUp()"><CODE>tidyUp()</CODE></A> before quitting.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setDataCache(org.LiveGraph.dataCache.DataCache)">setDataCache</A></B>(<A HREF="../../../org/LiveGraph/dataCache/DataCache.html" title="class in org.LiveGraph.dataCache">DataCache</A>&nbsp;cache)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies the data cache to which the data read on the next update will be written.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setDataFile(java.io.File)">setDataFile</A></B>(java.io.File&nbsp;file)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the file from which the next update will be read and resets the data cache.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setDataFile(java.lang.String)">setDataFile</A></B>(java.lang.String&nbsp;fileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the file from which the next update will be read and resets the data cache.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setDontCacheData(boolean)">setDontCacheData</A></B>(boolean&nbsp;state)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets whether the cache should be reset before each update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setInterval(long)">setInterval</A></B>(long&nbsp;interval)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the length of the interval between automatic data updates in milliseconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setMustQuit(boolean)">setMustQuit</A></B>(boolean&nbsp;val)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used to notify this invoker that is must stop running at the next possibility.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#settingHasChanged(org.LiveGraph.settings.DataFileSettings, java.lang.String)">settingHasChanged</A></B>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings,
                                   java.lang.String&nbsp;info)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;When the application's data file settings change which method is called in order
 to update the internal state accordingly.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#settingHasChanged(org.LiveGraph.settings.ObservableSettings, java.lang.Object)">settingHasChanged</A></B>(<A HREF="../../../org/LiveGraph/settings/ObservableSettings.html" title="class in org.LiveGraph.settings">ObservableSettings</A>&nbsp;settings,
                                   java.lang.Object&nbsp;info)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dispatches settings change events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#setUpdateInProgress(boolean)">setUpdateInProgress</A></B>(boolean&nbsp;state)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the internal <code>updateInProgress</code> state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#tidyUp()">tidyUp</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Winds up the operations by closing the current data reader.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#timeTick()">timeTick</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send the this invoker to sleep for <code>timeTickLength</code> milliseconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#update()">update</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Executes the next update from the current input file into the current data cache.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="defaultTimeTickLength"><!-- --></A><H3>
defaultTimeTickLength</H3>
<PRE>
private static final long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.63"><B>defaultTimeTickLength</B></A></PRE>
<DL>
<DD>How long to sleep for when updates are to be invoked automatically.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.LiveGraph.dataCache.UpdateInvoker.defaultTimeTickLength">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="restingTimeTickLength"><!-- --></A><H3>
restingTimeTickLength</H3>
<PRE>
private static final long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.68"><B>restingTimeTickLength</B></A></PRE>
<DL>
<DD>How long to sleep for when updates are to be invoked manually.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../constant-values.html#org.LiveGraph.dataCache.UpdateInvoker.restingTimeTickLength">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="dataReader"><!-- --></A><H3>
dataReader</H3>
<PRE>
private <A HREF="../../../org/LiveGraph/dataCache/DataStreamToCacheReader.html" title="class in org.LiveGraph.dataCache">DataStreamToCacheReader</A> <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.74"><B>dataReader</B></A></PRE>
<DL>
<DD>The data reader for the input stream.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="dataCache"><!-- --></A><H3>
dataCache</H3>
<PRE>
private <A HREF="../../../org/LiveGraph/dataCache/DataCache.html" title="class in org.LiveGraph.dataCache">DataCache</A> <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.79"><B>dataCache</B></A></PRE>
<DL>
<DD>Cache to hold the data.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="dataFile"><!-- --></A><H3>
dataFile</H3>
<PRE>
private java.io.File <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.84"><B>dataFile</B></A></PRE>
<DL>
<DD>Data file from which to update.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="dontCache"><!-- --></A><H3>
dontCache</H3>
<PRE>
private boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.89"><B>dontCache</B></A></PRE>
<DL>
<DD>Whether cache must be reset before each read.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="interval"><!-- --></A><H3>
interval</H3>
<PRE>
private long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.95"><B>interval</B></A></PRE>
<DL>
<DD>Interval between updates in milliseconds.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="updateInProgress"><!-- --></A><H3>
updateInProgress</H3>
<PRE>
private boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.100"><B>updateInProgress</B></A></PRE>
<DL>
<DD>Whether an update is currently running.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="mustQuit"><!-- --></A><H3>
mustQuit</H3>
<PRE>
private boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.105"><B>mustQuit</B></A></PRE>
<DL>
<DD>Whether the invoker thread should wind up at the next possibility.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="timeTickLength"><!-- --></A><H3>
timeTickLength</H3>
<PRE>
private long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.111"><B>timeTickLength</B></A></PRE>
<DL>
<DD>The sleep length betweek ticks at which this invoker can react to events and send
 mesages.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="remainingMillis"><!-- --></A><H3>
remainingMillis</H3>
<PRE>
private long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.116"><B>remainingMillis</B></A></PRE>
<DL>
<DD>Remaining milliseconds till the next update.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="lastUpdateTime"><!-- --></A><H3>
lastUpdateTime</H3>
<PRE>
private long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.121"><B>lastUpdateTime</B></A></PRE>
<DL>
<DD>System milliseconds at last update.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="sinceUpdateTime"><!-- --></A><H3>
sinceUpdateTime</H3>
<PRE>
private long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.126"><B>sinceUpdateTime</B></A></PRE>
<DL>
<DD>Milliseconds since last update.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="fileReadingThread"><!-- --></A><H3>
fileReadingThread</H3>
<PRE>
private java.lang.Thread <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.131"><B>fileReadingThread</B></A></PRE>
<DL>
<DD>Thread actually performing the update.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="observers"><!-- --></A><H3>
observers</H3>
<PRE>
private java.util.List&lt;<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&gt; <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.137"><B>observers</B></A></PRE>
<DL>
<DD>List of observers.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="UpdateInvoker()"><!-- --></A><H3>
UpdateInvoker</H3>
<PRE>
public <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.142"><B>UpdateInvoker</B></A>()</PRE>
<DL>
<DD>Constructs a new invoker.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setDataFile(java.io.File)"><!-- --></A><H3>
setDataFile</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.167"><B>setDataFile</B></A>(java.io.File&nbsp;file)
                 throws java.io.FileNotFoundException</PRE>
<DL>
<DD>Sets the file from which the next update will be read and resets the data cache.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>file</CODE> - File from which to read the data from now on.
<DT><B>Throws:</B>
<DD><CODE>java.io.FileNotFoundException</CODE> - If no such file exists.
<DD><CODE>java.lang.IllegalStateException</CODE> - If no valid data cache is set.</DL>
</DD>
</DL>
<HR>

<A NAME="setDataFile(java.lang.String)"><!-- --></A><H3>
setDataFile</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.185"><B>setDataFile</B></A>(java.lang.String&nbsp;fileName)
                 throws java.io.FileNotFoundException</PRE>
<DL>
<DD>Sets the file from which the next update will be read and resets the data cache.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fileName</CODE> - File from which to read the data from now on.
<DT><B>Throws:</B>
<DD><CODE>java.io.FileNotFoundException</CODE> - If no such file exists.
<DD><CODE>java.lang.IllegalStateException</CODE> - If no valid data cache is set.</DL>
</DD>
</DL>
<HR>

<A NAME="setDontCacheData(boolean)"><!-- --></A><H3>
setDontCacheData</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.197"><B>setDontCacheData</B></A>(boolean&nbsp;state)</PRE>
<DL>
<DD>Sets whether the cache should be reset before each update.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>state</CODE> - Indicates whether the cache should be reset before each update.</DL>
</DD>
</DL>
<HR>

<A NAME="setDataCache(org.LiveGraph.dataCache.DataCache)"><!-- --></A><H3>
setDataCache</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.206"><B>setDataCache</B></A>(<A HREF="../../../org/LiveGraph/dataCache/DataCache.html" title="class in org.LiveGraph.dataCache">DataCache</A>&nbsp;cache)</PRE>
<DL>
<DD>Specifies the data cache to which the data read on the next update will be written.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>cache</CODE> - The data cache to use from now on.</DL>
</DD>
</DL>
<HR>

<A NAME="setInterval(long)"><!-- --></A><H3>
setInterval</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.219"><B>setInterval</B></A>(long&nbsp;interval)</PRE>
<DL>
<DD>Sets the length of the interval between automatic data updates in milliseconds.
 If <code>interval &lt;= 0</code> the update will not be triggered automatically.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interval</CODE> - The length of the interval between automatic data updates in milliseconds
 (if <code>interval &lt;= 0</code> the update will not be triggered automatically).</DL>
</DD>
</DL>
<HR>

<A NAME="createDataReader()"><!-- --></A><H3>
createDataReader</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.231"><B>createDataReader</B></A>()
                       throws java.io.FileNotFoundException</PRE>
<DL>
<DD>Creates a reader on the currently set data input file and resets the cache.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.FileNotFoundException</CODE> - If the input file does not exist.</DL>
</DD>
</DL>
<HR>

<A NAME="getInterval()"><!-- --></A><H3>
getInterval</H3>
<PRE>
public long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.256"><B>getInterval</B></A>()</PRE>
<DL>
<DD>The length of the interval between data updates.
 If <code>interval &lt;= 0</code> the update will not be triggered automatically.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The length of the interval between automatic data updates in milliseconds;
 a value <code>interval &lt;= 0</code> indicated that no updates will be triggered automatically.</DL>
</DD>
</DL>
<HR>

<A NAME="update()"><!-- --></A><H3>
update</H3>
<PRE>
public boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.266"><B>update</B></A>()</PRE>
<DL>
<DD>Executes the next update from the current input file into the current data cache.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if the update was started successfully, <code>false</code> if the
 update could not be started (possibly, because a previous update was still in progress).</DL>
</DD>
</DL>
<HR>

<A NAME="addObserver(org.LiveGraph.dataCache.UpdateInvokerObserver)"><!-- --></A><H3>
addObserver</H3>
<PRE>
public boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.319"><B>addObserver</B></A>(<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&nbsp;observer)</PRE>
<DL>
<DD>Add an observer to this invoker.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>observer</CODE> - Observer to add.
<DT><B>Returns:</B><DD>Whether the observer was really added because it was not there yet.</DL>
</DD>
</DL>
<HR>

<A NAME="hasObserver(org.LiveGraph.dataCache.UpdateInvokerObserver)"><!-- --></A><H3>
hasObserver</H3>
<PRE>
public boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.331"><B>hasObserver</B></A>(<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&nbsp;observer)</PRE>
<DL>
<DD>Check for the specified observer.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>observer</CODE> - An observer.
<DT><B>Returns:</B><DD>Whether the specified observer is in the observer list.</DL>
</DD>
</DL>
<HR>

<A NAME="removeObserver(org.LiveGraph.dataCache.UpdateInvokerObserver)"><!-- --></A><H3>
removeObserver</H3>
<PRE>
public boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.341"><B>removeObserver</B></A>(<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache">UpdateInvokerObserver</A>&nbsp;observer)</PRE>
<DL>
<DD>Removes an observer.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>observer</CODE> - An observer.
<DT><B>Returns:</B><DD>Whether the observer was successfully removed.</DL>
</DD>
</DL>
<HR>

<A NAME="countObervers()"><!-- --></A><H3>
countObervers</H3>
<PRE>
public int <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.350"><B>countObervers</B></A>()</PRE>
<DL>
<DD>Count observers.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Current number of observers.</DL>
</DD>
</DL>
<HR>

<A NAME="notifyObserversTimerTick()"><!-- --></A><H3>
notifyObserversTimerTick</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.359"><B>notifyObserversTimerTick</B></A>()</PRE>
<DL>
<DD>Notifies this invoker's observers that this observer has waken up to process events.
 This gives listeners displaying various information about this invoker a chance to
 update their state.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="notifyObserversUpdateStarted()"><!-- --></A><H3>
notifyObserversUpdateStarted</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.367"><B>notifyObserversUpdateStarted</B></A>()</PRE>
<DL>
<DD>Notifies this invoker's observers that an update was triggered.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="notifyObserversUpdateFinished(java.lang.String)"><!-- --></A><H3>
notifyObserversUpdateFinished</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.378"><B>notifyObserversUpdateFinished</B></A>(java.lang.String&nbsp;errorMsg)</PRE>
<DL>
<DD>Notifies this invoker's observers that an update has finished.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errorMsg</CODE> - Describes any problems during the update. If there were no problems
 <code>errorMsg</code> will be <code>null</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="setMustQuit(boolean)"><!-- --></A><H3>
setMustQuit</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.388"><B>setMustQuit</B></A>(boolean&nbsp;val)</PRE>
<DL>
<DD>Used to notify this invoker that is must stop running at the next possibility.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>val</CODE> - Whether this invoker should stop running at the next possibility.</DL>
</DD>
</DL>
<HR>

<A NAME="getRemainingMillis()"><!-- --></A><H3>
getRemainingMillis</H3>
<PRE>
public long <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.397"><B>getRemainingMillis</B></A>()</PRE>
<DL>
<DD>Time to next update.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Number of milliseconds left until the next update.</DL>
</DD>
</DL>
<HR>

<A NAME="isUpdateInProgress()"><!-- --></A><H3>
isUpdateInProgress</H3>
<PRE>
public boolean <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.405"><B>isUpdateInProgress</B></A>()</PRE>
<DL>
<DD>Whether an update is currently running.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Whether an update is currently running.</DL>
</DD>
</DL>
<HR>

<A NAME="setUpdateInProgress(boolean)"><!-- --></A><H3>
setUpdateInProgress</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.413"><B>setUpdateInProgress</B></A>(boolean&nbsp;state)</PRE>
<DL>
<DD>Sets the internal <code>updateInProgress</code> state.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>state</CODE> - The new state.</DL>
</DD>
</DL>
<HR>

<A NAME="closeReader()"><!-- --></A><H3>
closeReader</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.420"><B>closeReader</B></A>()</PRE>
<DL>
<DD>Closes the current data reader.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="tidyUp()"><!-- --></A><H3>
tidyUp</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.432"><B>tidyUp</B></A>()</PRE>
<DL>
<DD>Winds up the operations by closing the current data reader.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="timeTick()"><!-- --></A><H3>
timeTick</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.442"><B>timeTick</B></A>()</PRE>
<DL>
<DD>Send the this invoker to sleep for <code>timeTickLength</code> milliseconds.
 When it wakes it, internal time state is updated an the observers notified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="run()"><!-- --></A><H3>
run</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.460"><B>run</B></A>()</PRE>
<DL>
<DD>Main invoker loop:
 call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#timeTick()"><CODE>timeTick()</CODE></A>;
 if it is time for the next update, call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#update()"><CODE>update()</CODE></A>;
 call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#timeTick()"><CODE>timeTick()</CODE></A> again and continue the loop until <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#mustQuit"><CODE>mustQuit</CODE></A> is set to true;
 call <A HREF="../../../org/LiveGraph/dataCache/UpdateInvoker.html#tidyUp()"><CODE>tidyUp()</CODE></A> before quitting.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>run</CODE> in interface <CODE>java.lang.Runnable</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="settingHasChanged(org.LiveGraph.settings.ObservableSettings, java.lang.Object)"><!-- --></A><H3>
settingHasChanged</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.476"><B>settingHasChanged</B></A>(<A HREF="../../../org/LiveGraph/settings/ObservableSettings.html" title="class in org.LiveGraph.settings">ObservableSettings</A>&nbsp;settings,
                              java.lang.Object&nbsp;info)</PRE>
<DL>
<DD>Dispatches settings change events.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/LiveGraph/settings/SettingsObserver.html#settingHasChanged(org.LiveGraph.settings.ObservableSettings, java.lang.Object)">settingHasChanged</A></CODE> in interface <CODE><A HREF="../../../org/LiveGraph/settings/SettingsObserver.html" title="interface in org.LiveGraph.settings">SettingsObserver</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>settings</CODE> - The settings object that was changed.<DD><CODE>info</CODE> - Is used to further specify the change. Usually this is a
 <code>String</code> containing the name of the changed setting.</DL>
</DD>
</DL>
<HR>

<A NAME="settingHasChanged(org.LiveGraph.settings.DataFileSettings, java.lang.String)"><!-- --></A><H3>
settingHasChanged</H3>
<PRE>
public void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.494"><B>settingHasChanged</B></A>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings,
                              java.lang.String&nbsp;info)</PRE>
<DL>
<DD>When the application's data file settings change which method is called in order
 to update the internal state accordingly.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>settings</CODE> - Application's data file settings.<DD><CODE>info</CODE> - Describes the change event.</DL>
</DD>
</DL>
<HR>

<A NAME="DataFileSettings_DataFile(org.LiveGraph.settings.DataFileSettings)"><!-- --></A><H3>
DataFileSettings_DataFile</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.561"><B>DataFileSettings_DataFile</B></A>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</PRE>
<DL>
<DD>Adjusts the file used by this invoker in response to a corresponding change in the
 data file settings.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>settings</CODE> - The data file settigs.</DL>
</DD>
</DL>
<HR>

<A NAME="DataFileSettings_UpdateFrequency(org.LiveGraph.settings.DataFileSettings)"><!-- --></A><H3>
DataFileSettings_UpdateFrequency</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.578"><B>DataFileSettings_UpdateFrequency</B></A>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</PRE>
<DL>
<DD>Adjusts the update frequency used by this invoker in response to a corresponding change in the
 data file settings.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>settings</CODE> - The data file settigs.</DL>
</DD>
</DL>
<HR>

<A NAME="DataFileSettings_DoNotCacheData(org.LiveGraph.settings.DataFileSettings)"><!-- --></A><H3>
DataFileSettings_DoNotCacheData</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.588"><B>DataFileSettings_DoNotCacheData</B></A>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</PRE>
<DL>
<DD>Adjusts the cache resetting option used by this invoker in response to a corresponding change in the
 data file settings.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>settings</CODE> - The data file settigs.</DL>
</DD>
</DL>
<HR>

<A NAME="DataFileSettings_ShowOnlyTailData(org.LiveGraph.settings.DataFileSettings)"><!-- --></A><H3>
DataFileSettings_ShowOnlyTailData</H3>
<PRE>
private void <A HREF="../../../src-html/org/LiveGraph/dataCache/UpdateInvoker.html#line.598"><B>DataFileSettings_ShowOnlyTailData</B></A>(<A HREF="../../../org/LiveGraph/settings/DataFileSettings.html" title="class in org.LiveGraph.settings">DataFileSettings</A>&nbsp;settings)</PRE>
<DL>
<DD>Adjusts the cache mode used by this invoker in response to a corresponding change in the
 data file settings.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>settings</CODE> - The data file settigs.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/UpdateInvoker.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<table><tr align=right>
								<td><a href=http://www.live-graph.org target=_blank>LiveGraph</a><br />data visualisation and analysis framework</td>
								<td><a href=http://sourceforge.net/projects/live-graph/ title=LiveGraph&nbsp;is&nbsp;a&nbsp;member&nbsp;of&nbsp;SourceForge.net target=_blank><img src=http://sflogo.sourceforge.net/sflogo.php?group_id=191061&amp;type=1 title=LiveGraph&nbsp;is&nbsp;a&nbsp;member&nbsp;of&nbsp;SourceForge.net alt=LiveGraph&nbsp;is&nbsp;a&nbsp;member&nbsp;of&nbsp;SourceForge.net width=88 height=31 border=0 /></a></td>
								<td><a href=http://sourceforge.net/donate/index.php?group_id=191061 target=_blank title=Donate&nbsp;to&nbsp;LiveGraph><img src=http://images.sourceforge.net/images/project-support.jpg width=88 height=32 border=0 alt=Donate&nbsp;to&nbsp;LiveGraph title=Donate&nbsp;to&nbsp;LiveGraph /></a></td>
							</tr></table>
							<script src=http://www.google-analytics.com/urchin.js type=text/javascript></script>
							<script type=text/javascript>
								<!--
									_uacct = UA-1766210-1;
									urchinTracker();
								// -->
							</script>
						</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/LiveGraph/dataCache/DataStreamToCacheReader.html" title="class in org.LiveGraph.dataCache"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/LiveGraph/dataCache/UpdateInvokerObserver.html" title="interface in org.LiveGraph.dataCache"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/LiveGraph/dataCache/UpdateInvoker.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="UpdateInvoker.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
