package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class AuctionEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2050;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public AuctionEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.AuctionItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new AuctionFigure();
	}

		/**
 * @generated
 */
	public AuctionFigure getPrimaryShape() {
		return (AuctionFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.AuctionNameEditPart) {
			((visGrid.diagram.edit.parts.AuctionNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureAuctionNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.AuctionNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.AuctionNameEditPart.VISUAL_ID));
		}
	
		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnSource() {
		java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(1);
				types.add(visGrid.diagram.providers.VisGridElementTypes.AuctionConnection_4006);
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnSourceAndTarget(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
							if (targetEditPart instanceof visGrid.diagram.edit.parts.ConnectionsEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.AuctionConnection_4006);
		}
							return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMATypesForTarget(org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.AuctionConnection_4006) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Connections_2055);
					}
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnTarget() {
		java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(3);
				types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionsAuction_4081);
				types.add(visGrid.diagram.providers.VisGridElementTypes.ClimateChild_4084);
				types.add(visGrid.diagram.providers.VisGridElementTypes.Csv_readerChild_4096);
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMATypesForSource(org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.ConnectionsAuction_4081) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Connections_2055);
					}
		 else 		if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.ClimateChild_4084) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Climate_2016);
					}
		 else 		if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.Csv_readerChild_4096) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Csv_reader_2070);
					}
				return types;
	}


		
	
	
	
/**
 * @generated
 */
public class AuctionFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionTypeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionUnitFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionPeriodFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionLatencyFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionMarket_idFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionLast__QFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionLast__PFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionNext__QFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionNext__PFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionAvg24Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionStd24Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionAvg72Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionStd72Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionAvg168Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionStd168Figure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionNetworkFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAuctionVerboseFigure; 


	/**
	 * @generated
	 */
	public AuctionFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureAuctionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionNameFigure.setText("<...>");

this.add(fFigureAuctionNameFigure);



fFigureAuctionTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionTypeFigure.setText("<...>");

this.add(fFigureAuctionTypeFigure);



fFigureAuctionUnitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionUnitFigure.setText("<...>");

this.add(fFigureAuctionUnitFigure);



fFigureAuctionPeriodFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionPeriodFigure.setText("<...>");

this.add(fFigureAuctionPeriodFigure);



fFigureAuctionLatencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionLatencyFigure.setText("<...>");

this.add(fFigureAuctionLatencyFigure);



fFigureAuctionMarket_idFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionMarket_idFigure.setText("<...>");

this.add(fFigureAuctionMarket_idFigure);



fFigureAuctionLast__QFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionLast__QFigure.setText("<...>");

this.add(fFigureAuctionLast__QFigure);



fFigureAuctionLast__PFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionLast__PFigure.setText("<...>");

this.add(fFigureAuctionLast__PFigure);



fFigureAuctionNext__QFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionNext__QFigure.setText("<...>");

this.add(fFigureAuctionNext__QFigure);



fFigureAuctionNext__PFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionNext__PFigure.setText("<...>");

this.add(fFigureAuctionNext__PFigure);



fFigureAuctionAvg24Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionAvg24Figure.setText("<...>");

this.add(fFigureAuctionAvg24Figure);



fFigureAuctionStd24Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionStd24Figure.setText("<...>");

this.add(fFigureAuctionStd24Figure);



fFigureAuctionAvg72Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionAvg72Figure.setText("<...>");

this.add(fFigureAuctionAvg72Figure);



fFigureAuctionStd72Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionStd72Figure.setText("<...>");

this.add(fFigureAuctionStd72Figure);



fFigureAuctionAvg168Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionAvg168Figure.setText("<...>");

this.add(fFigureAuctionAvg168Figure);



fFigureAuctionStd168Figure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionStd168Figure.setText("<...>");

this.add(fFigureAuctionStd168Figure);



fFigureAuctionNetworkFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionNetworkFigure.setText("<...>");

this.add(fFigureAuctionNetworkFigure);



fFigureAuctionVerboseFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureAuctionVerboseFigure.setText("<...>");

this.add(fFigureAuctionVerboseFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionNameFigure() {
		return fFigureAuctionNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionTypeFigure() {
		return fFigureAuctionTypeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionUnitFigure() {
		return fFigureAuctionUnitFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionPeriodFigure() {
		return fFigureAuctionPeriodFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionLatencyFigure() {
		return fFigureAuctionLatencyFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionMarket_idFigure() {
		return fFigureAuctionMarket_idFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionLast__QFigure() {
		return fFigureAuctionLast__QFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionLast__PFigure() {
		return fFigureAuctionLast__PFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionNext__QFigure() {
		return fFigureAuctionNext__QFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionNext__PFigure() {
		return fFigureAuctionNext__PFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionAvg24Figure() {
		return fFigureAuctionAvg24Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionStd24Figure() {
		return fFigureAuctionStd24Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionAvg72Figure() {
		return fFigureAuctionAvg72Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionStd72Figure() {
		return fFigureAuctionStd72Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionAvg168Figure() {
		return fFigureAuctionAvg168Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionStd168Figure() {
		return fFigureAuctionStd168Figure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionNetworkFigure() {
		return fFigureAuctionNetworkFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAuctionVerboseFigure() {
		return fFigureAuctionVerboseFigure;
	}


}


	
	}
