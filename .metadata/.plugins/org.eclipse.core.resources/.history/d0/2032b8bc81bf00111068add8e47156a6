	package visGrid.diagram.edit.policies;

/**
 * @generated
 */
public class ConnectionsItemSemanticEditPolicy extends visGrid.diagram.edit.policies.VisGridBaseItemSemanticEditPolicy {

		/**
 * @generated
 */
	public ConnectionsItemSemanticEditPolicy() {
				super(visGrid.diagram.providers.VisGridElementTypes.Connections_2047);
	}

	
	/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getDestroyElementCommand(org.eclipse.gmf.runtime.emf.type.core.requests.DestroyElementRequest req) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) getHost().getModel();
	org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand cmd = new org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand(getEditingDomain(), null);
	cmd.setTransactionNestingEnabled(false);
		for (java.util.Iterator<?> it = view.getSourceEdges().iterator(); it.hasNext();) {
		org.eclipse.gmf.runtime.notation.Edge outgoingLink = (org.eclipse.gmf.runtime.notation.Edge) it.next();
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsMicrowaveEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsClimateEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTriplex_lineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTriplex_meterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsLinkEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsClotheswasherEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsZIPloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsOverhead_line_conductorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsLine_spacingEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsInverterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTransformer_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsNodeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRefrigeratorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsPlcEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsController2EditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTriplex_line_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTransformerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRectifierEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsVolt_var_controlEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsUnderground_line_conductorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsHouse_aEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsLightsEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsWaterheaterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsShaperEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsStubauctionEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsCsv_readerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsDiesel_dgEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsControllerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsLine_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsPqloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRegulatorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsDc_dc_converterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsOccupantloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsFuseEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsCapacitorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsBatteryEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsBilldumpEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsLineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsMeterEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsOverhead_lineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRelayEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRecorderEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsPlugloadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsWindturb_dgEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsOfficeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsHistogramEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsCollectorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsAuctionEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsEvchargerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsFreezerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsMultizoneEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsLoadEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsUnderground_lineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsSubstationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsGeneratorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRangeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsPlayerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsPower_electronicsEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsFault_checkEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsEnergy_storageEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsDryerEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsSeries_reactorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsCommEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsCapbankEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsFrequency_genEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsMotorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsMicroturbineEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsWeatherEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRegulator_configurationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsSwitchEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsResidential_enduseEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsSolarEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsHouseEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsVoltdumpEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsDishwasherEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTriplex_line_conductorEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsRestorationEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
		if (visGrid.diagram.part.VisGridVisualIDRegistry.getVisualID(outgoingLink) == visGrid.diagram.edit.parts.ConnectionsTriplex_nodeEditPart.VISUAL_ID) {
			org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest r = new org.eclipse.gmf.runtime.emf.type.core.requests.DestroyReferenceRequest(outgoingLink.getSource().getElement(), null, outgoingLink.getTarget().getElement(), false);
			cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyReferenceCommand(r));
			cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), outgoingLink));
			continue;
		}
	}
	org.eclipse.emf.ecore.EAnnotation annotation = view.getEAnnotation("Shortcut"); //$NON-NLS-1$
	if (annotation == null) {
		// there are indirectly referenced children, need extra commands: false
		addDestroyShortcutsCommand(cmd, view);
		// delete host element
		cmd.add(new org.eclipse.gmf.runtime.emf.type.core.commands.DestroyElementCommand(req));
	} else {
		cmd.add(new org.eclipse.gmf.runtime.diagram.core.commands.DeleteCommand(getEditingDomain(), view));
	}
	return getGEFWrapper(cmd.reduce());
}
					
/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	org.eclipse.gef.commands.Command command = req.getTarget() == null ?
			getStartCreateRelationshipCommand(req) : getCompleteCreateRelationshipCommand(req);
	return command != null ? command : super.getCreateRelationshipCommand(req);
}

/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getStartCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicrowave_4001 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMicrowaveCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsClimate_4002 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsClimateCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_4003 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_lineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_meter_4004 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_meterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLink_4005 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLinkCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsClotheswasher_4006 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsClotheswasherCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsZIPload_4007 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsZIPloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_conductor_4008 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOverhead_line_conductorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_spacing_4009 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLine_spacingCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsInverter_4010 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsInverterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_configuration_4011 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTransformer_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsNode_4012 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsNodeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRefrigerator_4013 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRefrigeratorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlc_4014 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPlcCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsController2_4015 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsController2CreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_configuration_4016 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_line_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_4017 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTransformerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRectifier_4018 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRectifierCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsVolt_var_control_4019 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsVolt_var_controlCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_conductor_4020 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsUnderground_line_conductorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_a_4021 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsHouse_aCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLights_4022 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLightsCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsWaterheater_4023 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsWaterheaterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsShaper_4024 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsShaperCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsStubauction_4025 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsStubauctionCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCsv_reader_4026 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCsv_readerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDiesel_dg_4027 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDiesel_dgCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsController_4028 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsControllerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_configuration_4029 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLine_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPqload_4030 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPqloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_4031 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRegulatorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDc_dc_converter_4032 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDc_dc_converterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOccupantload_4033 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOccupantloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFuse_4034 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFuseCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapacitor_4035 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCapacitorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsBattery_4036 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsBatteryCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsBilldump_4037 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsBilldumpCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_4038 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMeter_4039 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMeterCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_4040 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOverhead_lineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRelay_4041 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRelayCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRecorder_4042 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRecorderCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlugload_4043 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPlugloadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsWindturb_dg_4044 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsWindturb_dgCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOffice_4045 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOfficeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsHistogram_4046 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsHistogramCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCollector_4047 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCollectorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsAuction_4048 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsAuctionCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsEvcharger_4049 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsEvchargerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFreezer_4050 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFreezerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMultizone_4051 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMultizoneCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLoad_4052 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLoadCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_4053 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsUnderground_lineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSubstation_4054 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSubstationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsGenerator_4055 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsGeneratorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRange_4056 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRangeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlayer_4057 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPlayerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPower_electronics_4058 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPower_electronicsCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFault_check_4059 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFault_checkCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsEnergy_storage_4060 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsEnergy_storageCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDryer_4061 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDryerCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSeries_reactor_4062 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSeries_reactorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsComm_4063 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCommCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapbank_4064 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCapbankCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFrequency_gen_4065 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFrequency_genCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMotor_4066 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMotorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicroturbine_4067 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMicroturbineCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsWeather_4068 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsWeatherCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_configuration_4069 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRegulator_configurationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSwitch_4070 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSwitchCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsResidential_enduse_4071 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsResidential_enduseCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSolar_4072 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSolarCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_4073 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsHouseCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsVoltdump_4074 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsVoltdumpCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDishwasher_4075 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDishwasherCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_conductor_4076 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_line_conductorCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRestoration_4077 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRestorationCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_node_4078 == req.getElementType()) {
		return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_nodeCreateCommand(req,
					req.getSource(), req.getTarget()
			));
	}
	return null;
}

/**
 * @generated
 */
protected org.eclipse.gef.commands.Command getCompleteCreateRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.CreateRelationshipRequest req) {
	if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicrowave_4001 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsClimate_4002 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_4003 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_meter_4004 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLink_4005 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsClotheswasher_4006 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsZIPload_4007 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_conductor_4008 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_spacing_4009 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsInverter_4010 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_configuration_4011 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsNode_4012 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRefrigerator_4013 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlc_4014 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsController2_4015 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_configuration_4016 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTransformer_4017 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRectifier_4018 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsVolt_var_control_4019 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_conductor_4020 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_a_4021 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLights_4022 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsWaterheater_4023 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsShaper_4024 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsStubauction_4025 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCsv_reader_4026 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDiesel_dg_4027 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsController_4028 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_configuration_4029 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPqload_4030 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_4031 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDc_dc_converter_4032 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOccupantload_4033 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFuse_4034 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapacitor_4035 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsBattery_4036 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsBilldump_4037 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLine_4038 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMeter_4039 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOverhead_line_4040 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRelay_4041 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRecorder_4042 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlugload_4043 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsWindturb_dg_4044 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsOffice_4045 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsHistogram_4046 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCollector_4047 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsAuction_4048 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsEvcharger_4049 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFreezer_4050 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMultizone_4051 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsLoad_4052 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsUnderground_line_4053 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSubstation_4054 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsGenerator_4055 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRange_4056 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPlayer_4057 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsPower_electronics_4058 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFault_check_4059 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsEnergy_storage_4060 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDryer_4061 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSeries_reactor_4062 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsComm_4063 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsCapbank_4064 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsFrequency_gen_4065 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMotor_4066 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsMicroturbine_4067 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsWeather_4068 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRegulator_configuration_4069 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSwitch_4070 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsResidential_enduse_4071 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsSolar_4072 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsHouse_4073 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsVoltdump_4074 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsDishwasher_4075 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_line_conductor_4076 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsRestoration_4077 == req.getElementType()) {
		return null;
	}
if (visGrid.diagram.providers.VisGridElementTypes.ConnectionsTriplex_node_4078 == req.getElementType()) {
		return null;
	}
	return null;
}
					
/**
 * Returns command to reorient EReference based link. New link target or source
 * should be the domain model element associated with this node.
 * 
 * @generated
 */
protected org.eclipse.gef.commands.Command getReorientReferenceRelationshipCommand(
		org.eclipse.gmf.runtime.emf.type.core.requests.ReorientReferenceRelationshipRequest req) {
	switch (getVisualID(req)) {
	case visGrid.diagram.edit.parts.ConnectionsMicrowaveEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMicrowaveReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsClimateEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsClimateReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTriplex_lineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_lineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTriplex_meterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_meterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsLinkEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLinkReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsClotheswasherEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsClotheswasherReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsZIPloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsZIPloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsOverhead_line_conductorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOverhead_line_conductorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsLine_spacingEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLine_spacingReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsInverterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsInverterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTransformer_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTransformer_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsNodeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsNodeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRefrigeratorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRefrigeratorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsPlcEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPlcReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsController2EditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsController2ReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTriplex_line_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_line_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTransformerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTransformerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRectifierEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRectifierReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsVolt_var_controlEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsVolt_var_controlReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsUnderground_line_conductorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsUnderground_line_conductorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsHouse_aEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsHouse_aReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsLightsEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLightsReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsWaterheaterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsWaterheaterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsShaperEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsShaperReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsStubauctionEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsStubauctionReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsCsv_readerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCsv_readerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsDiesel_dgEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDiesel_dgReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsControllerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsControllerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsLine_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLine_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsPqloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPqloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRegulatorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRegulatorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsDc_dc_converterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDc_dc_converterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsOccupantloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOccupantloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsFuseEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFuseReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsCapacitorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCapacitorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsBatteryEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsBatteryReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsBilldumpEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsBilldumpReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsLineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsMeterEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMeterReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsOverhead_lineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOverhead_lineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRelayEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRelayReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRecorderEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRecorderReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsPlugloadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPlugloadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsWindturb_dgEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsWindturb_dgReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsOfficeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsOfficeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsHistogramEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsHistogramReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsCollectorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCollectorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsAuctionEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsAuctionReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsEvchargerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsEvchargerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsFreezerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFreezerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsMultizoneEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMultizoneReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsLoadEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsLoadReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsUnderground_lineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsUnderground_lineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsSubstationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSubstationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsGeneratorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsGeneratorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRangeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRangeReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsPlayerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPlayerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsPower_electronicsEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsPower_electronicsReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsFault_checkEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFault_checkReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsEnergy_storageEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsEnergy_storageReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsDryerEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDryerReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsSeries_reactorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSeries_reactorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsCommEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCommReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsCapbankEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsCapbankReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsFrequency_genEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsFrequency_genReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsMotorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMotorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsMicroturbineEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsMicroturbineReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsWeatherEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsWeatherReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRegulator_configurationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRegulator_configurationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsSwitchEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSwitchReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsResidential_enduseEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsResidential_enduseReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsSolarEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsSolarReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsHouseEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsHouseReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsVoltdumpEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsVoltdumpReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsDishwasherEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsDishwasherReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTriplex_line_conductorEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_line_conductorReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsRestorationEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsRestorationReorientCommand(req));
case visGrid.diagram.edit.parts.ConnectionsTriplex_nodeEditPart.VISUAL_ID:
	return getGEFWrapper(new visGrid.diagram.edit.commands.ConnectionsTriplex_nodeReorientCommand(req));
	}
	return super.getReorientReferenceRelationshipCommand(req);
}
	
	}
