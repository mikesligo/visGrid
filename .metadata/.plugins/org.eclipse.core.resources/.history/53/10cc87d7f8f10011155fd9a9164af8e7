<HTML>
<BODY BGCOLOR="white">
<PRE>
<FONT color="green">001</FONT>    package org.LiveGraph.plot;<a name="line.1"></a>
<FONT color="green">002</FONT>    <a name="line.2"></a>
<FONT color="green">003</FONT>    import java.awt.Color;<a name="line.3"></a>
<FONT color="green">004</FONT>    import java.awt.Graphics;<a name="line.4"></a>
<FONT color="green">005</FONT>    import java.awt.image.BufferedImage;<a name="line.5"></a>
<FONT color="green">006</FONT>    import java.io.File;<a name="line.6"></a>
<FONT color="green">007</FONT>    import java.io.IOException;<a name="line.7"></a>
<FONT color="green">008</FONT>    import java.util.Iterator;<a name="line.8"></a>
<FONT color="green">009</FONT>    <a name="line.9"></a>
<FONT color="green">010</FONT>    import javax.imageio.ImageIO;<a name="line.10"></a>
<FONT color="green">011</FONT>    import javax.imageio.ImageWriter;<a name="line.11"></a>
<FONT color="green">012</FONT>    import javax.imageio.stream.ImageOutputStream;<a name="line.12"></a>
<FONT color="green">013</FONT>    import javax.swing.JOptionPane;<a name="line.13"></a>
<FONT color="green">014</FONT>    <a name="line.14"></a>
<FONT color="green">015</FONT>    import org.LiveGraph.LiveGraph;<a name="line.15"></a>
<FONT color="green">016</FONT>    import org.LiveGraph.gui.ExportImageDialog;<a name="line.16"></a>
<FONT color="green">017</FONT>    <a name="line.17"></a>
<FONT color="green">018</FONT>    import com.softnetConsult.utils.exceptions.ThrowableTools;<a name="line.18"></a>
<FONT color="green">019</FONT>    <a name="line.19"></a>
<FONT color="green">020</FONT>    /**<a name="line.20"></a>
<FONT color="green">021</FONT>     * Encapsulates the logic of graph image exports.<a name="line.21"></a>
<FONT color="green">022</FONT>     * <a name="line.22"></a>
<FONT color="green">023</FONT>     * &lt;p&gt;&lt;strong&gt;LiveGraph&lt;/strong&gt; (http://www.live-graph.org).&lt;/p&gt;<a name="line.23"></a>
<FONT color="green">024</FONT>     * &lt;p&gt;Copyright (c) 2007 by G. Paperin.&lt;/p&gt;<a name="line.24"></a>
<FONT color="green">025</FONT>     * &lt;p&gt;File: GraphExporter.java&lt;/p&gt; <a name="line.25"></a>
<FONT color="green">026</FONT>     * &lt;p style="font-size:smaller;"&gt;Redistribution and use in source and binary forms, with or<a name="line.26"></a>
<FONT color="green">027</FONT>     *    without modification, are permitted provided that the following terms and conditions are met:<a name="line.27"></a>
<FONT color="green">028</FONT>     * &lt;/p&gt;<a name="line.28"></a>
<FONT color="green">029</FONT>     * &lt;p style="font-size:smaller;"&gt;1. Redistributions of source code must retain the above<a name="line.29"></a>
<FONT color="green">030</FONT>     *    acknowledgement of the LiveGraph project and its web-site, the above copyright notice,<a name="line.30"></a>
<FONT color="green">031</FONT>     *    this list of conditions and the following disclaimer.&lt;br /&gt;<a name="line.31"></a>
<FONT color="green">032</FONT>     *    2. Redistributions in binary form must reproduce the above acknowledgement of the<a name="line.32"></a>
<FONT color="green">033</FONT>     *    LiveGraph project and its web-site, the above copyright notice, this list of conditions<a name="line.33"></a>
<FONT color="green">034</FONT>     *    and the following disclaimer in the documentation and/or other materials provided with<a name="line.34"></a>
<FONT color="green">035</FONT>     *    the distribution.&lt;br /&gt;<a name="line.35"></a>
<FONT color="green">036</FONT>     *    3. All advertising materials mentioning features or use of this software or any derived<a name="line.36"></a>
<FONT color="green">037</FONT>     *    software must display the following acknowledgement:&lt;br /&gt;<a name="line.37"></a>
<FONT color="green">038</FONT>     *    &lt;em&gt;This product includes software developed by the LiveGraph project and its<a name="line.38"></a>
<FONT color="green">039</FONT>     *    contributors.&lt;br /&gt;(http://www.live-graph.org)&lt;/em&gt;&lt;br /&gt;<a name="line.39"></a>
<FONT color="green">040</FONT>     *    4. All advertising materials distributed in form of HTML pages or any other technology<a name="line.40"></a>
<FONT color="green">041</FONT>     *    permitting active hyper-links that mention features or use of this software or any<a name="line.41"></a>
<FONT color="green">042</FONT>     *    derived software must display the acknowledgment specified in condition 3 of this<a name="line.42"></a>
<FONT color="green">043</FONT>     *    agreement, and in addition, include a visible and working hyper-link to the LiveGraph<a name="line.43"></a>
<FONT color="green">044</FONT>     *    homepage (http://www.live-graph.org).<a name="line.44"></a>
<FONT color="green">045</FONT>     * &lt;/p&gt;<a name="line.45"></a>
<FONT color="green">046</FONT>     * &lt;p style="font-size:smaller;"&gt;THIS SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY<a name="line.46"></a>
<FONT color="green">047</FONT>     *    OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF<a name="line.47"></a>
<FONT color="green">048</FONT>     *    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND  NONINFRINGEMENT. IN NO EVENT SHALL<a name="line.48"></a>
<FONT color="green">049</FONT>     *    THE AUTHORS, CONTRIBUTORS OR COPYRIGHT  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<a name="line.49"></a>
<FONT color="green">050</FONT>     *    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  FROM, OUT OF OR<a name="line.50"></a>
<FONT color="green">051</FONT>     *    IN CONNECTION WITH THE SOFTWARE OR THE USE OR  OTHER DEALINGS IN THE SOFTWARE.<a name="line.51"></a>
<FONT color="green">052</FONT>     * &lt;/p&gt;<a name="line.52"></a>
<FONT color="green">053</FONT>     * <a name="line.53"></a>
<FONT color="green">054</FONT>     * @author Greg Paperin (http://www.paperin.org)<a name="line.54"></a>
<FONT color="green">055</FONT>     * @version {@value org.LiveGraph.LiveGraph#version}<a name="line.55"></a>
<FONT color="green">056</FONT>     */<a name="line.56"></a>
<FONT color="green">057</FONT>    public class GraphExporter {<a name="line.57"></a>
<FONT color="green">058</FONT>    <a name="line.58"></a>
<FONT color="green">059</FONT>    /**<a name="line.59"></a>
<FONT color="green">060</FONT>     * Graph plotter.<a name="line.60"></a>
<FONT color="green">061</FONT>     */<a name="line.61"></a>
<FONT color="green">062</FONT>    private Plotter plotter = null;<a name="line.62"></a>
<FONT color="green">063</FONT>    <a name="line.63"></a>
<FONT color="green">064</FONT>    /**<a name="line.64"></a>
<FONT color="green">065</FONT>     * Export settings dialog.<a name="line.65"></a>
<FONT color="green">066</FONT>     */<a name="line.66"></a>
<FONT color="green">067</FONT>    private ExportImageDialog dialog = null;<a name="line.67"></a>
<FONT color="green">068</FONT>    <a name="line.68"></a>
<FONT color="green">069</FONT>    /**<a name="line.69"></a>
<FONT color="green">070</FONT>     * Creates a new exporter.<a name="line.70"></a>
<FONT color="green">071</FONT>     * @param plotter Tghe plotter to use with this exporter.<a name="line.71"></a>
<FONT color="green">072</FONT>     */<a name="line.72"></a>
<FONT color="green">073</FONT>    public GraphExporter(Plotter plotter) {<a name="line.73"></a>
<FONT color="green">074</FONT>            this.plotter = plotter;<a name="line.74"></a>
<FONT color="green">075</FONT>            this.dialog = new ExportImageDialog(this); <a name="line.75"></a>
<FONT color="green">076</FONT>    }<a name="line.76"></a>
<FONT color="green">077</FONT>    <a name="line.77"></a>
<FONT color="green">078</FONT>    /**<a name="line.78"></a>
<FONT color="green">079</FONT>     * Initiates an export by showing the options dialog.<a name="line.79"></a>
<FONT color="green">080</FONT>     * If the dialog is confirmed, it will call-back this exporter to finish the image creation.<a name="line.80"></a>
<FONT color="green">081</FONT>     */<a name="line.81"></a>
<FONT color="green">082</FONT>    public void exportGraph() {<a name="line.82"></a>
<FONT color="green">083</FONT>            dialog.setVisible(true);<a name="line.83"></a>
<FONT color="green">084</FONT>    }<a name="line.84"></a>
<FONT color="green">085</FONT>    <a name="line.85"></a>
<FONT color="green">086</FONT>    /**<a name="line.86"></a>
<FONT color="green">087</FONT>     * Plots the graph and exports the image to a file.<a name="line.87"></a>
<FONT color="green">088</FONT>     * <a name="line.88"></a>
<FONT color="green">089</FONT>     * @param imgWidth Width of the exported image in pixel.<a name="line.89"></a>
<FONT color="green">090</FONT>     * @param imgHeight Height of the exported image in pixel.<a name="line.90"></a>
<FONT color="green">091</FONT>     * @param imgMIMEType MIME type of the exported image.<a name="line.91"></a>
<FONT color="green">092</FONT>     * @param imgFile File of the exported image.<a name="line.92"></a>
<FONT color="green">093</FONT>     */<a name="line.93"></a>
<FONT color="green">094</FONT>    public void doExportGraph(int imgWidth, int imgHeight, String imgMIMEType, File imgFile) {<a name="line.94"></a>
<FONT color="green">095</FONT>            <a name="line.95"></a>
<FONT color="green">096</FONT>            Iterator&lt;ImageWriter&gt; writers = ImageIO.getImageWritersByMIMEType(imgMIMEType);<a name="line.96"></a>
<FONT color="green">097</FONT>            if (!writers.hasNext()) {<a name="line.97"></a>
<FONT color="green">098</FONT>                    JOptionPane.showMessageDialog(null, "Cannot obtain image writer for MIME-type \""<a name="line.98"></a>
<FONT color="green">099</FONT>                                                                                      + imgMIMEType + "\".",<a name="line.99"></a>
<FONT color="green">100</FONT>                                                                              "Error during image export", JOptionPane.ERROR_MESSAGE);<a name="line.100"></a>
<FONT color="green">101</FONT>                    return;<a name="line.101"></a>
<FONT color="green">102</FONT>            }<a name="line.102"></a>
<FONT color="green">103</FONT>            ImageWriter writer = writers.next();<a name="line.103"></a>
<FONT color="green">104</FONT>            ImageOutputStream imgOut = null;<a name="line.104"></a>
<FONT color="green">105</FONT>            try {<a name="line.105"></a>
<FONT color="green">106</FONT>                    imgOut = ImageIO.createImageOutputStream(imgFile);<a name="line.106"></a>
<FONT color="green">107</FONT>                    writer.setOutput(imgOut);<a name="line.107"></a>
<FONT color="green">108</FONT>            } catch (IOException e) {<a name="line.108"></a>
<FONT color="green">109</FONT>                    LiveGraph.application().logErrorLn(ThrowableTools.stackTraceToString(e));<a name="line.109"></a>
<FONT color="green">110</FONT>                    JOptionPane.showMessageDialog(null, "Could not create image output stream.",<a name="line.110"></a>
<FONT color="green">111</FONT>                                                                              "Error during image export", JOptionPane.ERROR_MESSAGE);<a name="line.111"></a>
<FONT color="green">112</FONT>                    return;<a name="line.112"></a>
<FONT color="green">113</FONT>            }<a name="line.113"></a>
<FONT color="green">114</FONT>            <a name="line.114"></a>
<FONT color="green">115</FONT>            BufferedImage img = new BufferedImage(imgWidth, imgHeight, BufferedImage.TYPE_INT_RGB);<a name="line.115"></a>
<FONT color="green">116</FONT>            Graphics g = img.getGraphics();<a name="line.116"></a>
<FONT color="green">117</FONT>            g.setColor(Color.WHITE);<a name="line.117"></a>
<FONT color="green">118</FONT>            g.fillRect(0, 0, imgWidth, imgHeight);<a name="line.118"></a>
<FONT color="green">119</FONT>            <a name="line.119"></a>
<FONT color="green">120</FONT>            int oldPlotW = plotter.getScreenWidth();        <a name="line.120"></a>
<FONT color="green">121</FONT>            int oldPlotH = plotter.getScreenHeight();<a name="line.121"></a>
<FONT color="green">122</FONT>            plotter.setScreenSize(imgWidth, imgHeight);<a name="line.122"></a>
<FONT color="green">123</FONT>            plotter.paint(g);<a name="line.123"></a>
<FONT color="green">124</FONT>            plotter.setScreenSize(oldPlotW, oldPlotH);<a name="line.124"></a>
<FONT color="green">125</FONT>            <a name="line.125"></a>
<FONT color="green">126</FONT>            try {<a name="line.126"></a>
<FONT color="green">127</FONT>                    writer.write(img);<a name="line.127"></a>
<FONT color="green">128</FONT>                    imgOut.close();<a name="line.128"></a>
<FONT color="green">129</FONT>                    writer = null;<a name="line.129"></a>
<FONT color="green">130</FONT>            } catch (IOException e) {<a name="line.130"></a>
<FONT color="green">131</FONT>                    LiveGraph.application().logErrorLn(ThrowableTools.stackTraceToString(e));<a name="line.131"></a>
<FONT color="green">132</FONT>                    JOptionPane.showMessageDialog(null, "Could not write to image.",<a name="line.132"></a>
<FONT color="green">133</FONT>                                                                              "Error during image export", JOptionPane.ERROR_MESSAGE);<a name="line.133"></a>
<FONT color="green">134</FONT>            } catch(IllegalArgumentException e) {<a name="line.134"></a>
<FONT color="green">135</FONT>                    LiveGraph.application().logErrorLn(ThrowableTools.stackTraceToString(e));<a name="line.135"></a>
<FONT color="green">136</FONT>                    JOptionPane.showMessageDialog(null, e.getMessage() + "\n\nTry choosing another image type.\n ",<a name="line.136"></a>
<FONT color="green">137</FONT>                                                                              "Error during image export", JOptionPane.ERROR_MESSAGE);<a name="line.137"></a>
<FONT color="green">138</FONT>            }<a name="line.138"></a>
<FONT color="green">139</FONT>    }<a name="line.139"></a>
<FONT color="green">140</FONT>    <a name="line.140"></a>
<FONT color="green">141</FONT>    /**<a name="line.141"></a>
<FONT color="green">142</FONT>     * Disposes of all GUI objects encapsulated in this exporter.<a name="line.142"></a>
<FONT color="green">143</FONT>     */<a name="line.143"></a>
<FONT color="green">144</FONT>    public void disposeInternalGUI() {<a name="line.144"></a>
<FONT color="green">145</FONT>            dialog.dispose();<a name="line.145"></a>
<FONT color="green">146</FONT>    }<a name="line.146"></a>
<FONT color="green">147</FONT>    <a name="line.147"></a>
<FONT color="green">148</FONT>    }<a name="line.148"></a>




























































</PRE>
</BODY>
</HTML>
