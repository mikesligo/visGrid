package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class BatteryEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2075;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public BatteryEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.BatteryItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new BatteryFigure();
	}

		/**
 * @generated
 */
	public BatteryFigure getPrimaryShape() {
		return (BatteryFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.BatteryNameEditPart) {
			((visGrid.diagram.edit.parts.BatteryNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureBatteryNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.BatteryNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.BatteryNameEditPart.VISUAL_ID));
		}
	



		
	
	
	
/**
 * @generated
 */
public class BatteryFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryGenerator_modeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryGenerator_statusFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryRfb_sizeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryPower_typeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryPower_set_highFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryPower_set_lowFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryRinternalFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryV_MaxFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryI_MaxFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryE_MaxFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryEnergyFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryEfficiencyFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryBase_efficiencyFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryRated_kVAFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryV_OutFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryI_OutFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryVA_OutFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryV_InFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryI_InFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryV_InternalFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryI_InternalFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryI_PrevFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBatteryPhasesFigure; 


	/**
	 * @generated
	 */
	public BatteryFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureBatteryNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryNameFigure.setText("<...>");

this.add(fFigureBatteryNameFigure);



fFigureBatteryGenerator_modeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryGenerator_modeFigure.setText("<...>");

this.add(fFigureBatteryGenerator_modeFigure);



fFigureBatteryGenerator_statusFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryGenerator_statusFigure.setText("<...>");

this.add(fFigureBatteryGenerator_statusFigure);



fFigureBatteryRfb_sizeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryRfb_sizeFigure.setText("<...>");

this.add(fFigureBatteryRfb_sizeFigure);



fFigureBatteryPower_typeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryPower_typeFigure.setText("<...>");

this.add(fFigureBatteryPower_typeFigure);



fFigureBatteryPower_set_highFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryPower_set_highFigure.setText("<...>");

this.add(fFigureBatteryPower_set_highFigure);



fFigureBatteryPower_set_lowFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryPower_set_lowFigure.setText("<...>");

this.add(fFigureBatteryPower_set_lowFigure);



fFigureBatteryRinternalFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryRinternalFigure.setText("<...>");

this.add(fFigureBatteryRinternalFigure);



fFigureBatteryV_MaxFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryV_MaxFigure.setText("<...>");

this.add(fFigureBatteryV_MaxFigure);



fFigureBatteryI_MaxFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryI_MaxFigure.setText("<...>");

this.add(fFigureBatteryI_MaxFigure);



fFigureBatteryE_MaxFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryE_MaxFigure.setText("<...>");

this.add(fFigureBatteryE_MaxFigure);



fFigureBatteryEnergyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryEnergyFigure.setText("<...>");

this.add(fFigureBatteryEnergyFigure);



fFigureBatteryEfficiencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryEfficiencyFigure.setText("<...>");

this.add(fFigureBatteryEfficiencyFigure);



fFigureBatteryBase_efficiencyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryBase_efficiencyFigure.setText("<...>");

this.add(fFigureBatteryBase_efficiencyFigure);



fFigureBatteryRated_kVAFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryRated_kVAFigure.setText("<...>");

this.add(fFigureBatteryRated_kVAFigure);



fFigureBatteryV_OutFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryV_OutFigure.setText("<...>");

this.add(fFigureBatteryV_OutFigure);



fFigureBatteryI_OutFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryI_OutFigure.setText("<...>");

this.add(fFigureBatteryI_OutFigure);



fFigureBatteryVA_OutFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryVA_OutFigure.setText("<...>");

this.add(fFigureBatteryVA_OutFigure);



fFigureBatteryV_InFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryV_InFigure.setText("<...>");

this.add(fFigureBatteryV_InFigure);



fFigureBatteryI_InFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryI_InFigure.setText("<...>");

this.add(fFigureBatteryI_InFigure);



fFigureBatteryV_InternalFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryV_InternalFigure.setText("<...>");

this.add(fFigureBatteryV_InternalFigure);



fFigureBatteryI_InternalFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryI_InternalFigure.setText("<...>");

this.add(fFigureBatteryI_InternalFigure);



fFigureBatteryI_PrevFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryI_PrevFigure.setText("<...>");

this.add(fFigureBatteryI_PrevFigure);



fFigureBatteryPhasesFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureBatteryPhasesFigure.setText("<...>");

this.add(fFigureBatteryPhasesFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryNameFigure() {
		return fFigureBatteryNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryGenerator_modeFigure() {
		return fFigureBatteryGenerator_modeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryGenerator_statusFigure() {
		return fFigureBatteryGenerator_statusFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryRfb_sizeFigure() {
		return fFigureBatteryRfb_sizeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryPower_typeFigure() {
		return fFigureBatteryPower_typeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryPower_set_highFigure() {
		return fFigureBatteryPower_set_highFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryPower_set_lowFigure() {
		return fFigureBatteryPower_set_lowFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryRinternalFigure() {
		return fFigureBatteryRinternalFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryV_MaxFigure() {
		return fFigureBatteryV_MaxFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryI_MaxFigure() {
		return fFigureBatteryI_MaxFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryE_MaxFigure() {
		return fFigureBatteryE_MaxFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryEnergyFigure() {
		return fFigureBatteryEnergyFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryEfficiencyFigure() {
		return fFigureBatteryEfficiencyFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryBase_efficiencyFigure() {
		return fFigureBatteryBase_efficiencyFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryRated_kVAFigure() {
		return fFigureBatteryRated_kVAFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryV_OutFigure() {
		return fFigureBatteryV_OutFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryI_OutFigure() {
		return fFigureBatteryI_OutFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryVA_OutFigure() {
		return fFigureBatteryVA_OutFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryV_InFigure() {
		return fFigureBatteryV_InFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryI_InFigure() {
		return fFigureBatteryI_InFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryV_InternalFigure() {
		return fFigureBatteryV_InternalFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryI_InternalFigure() {
		return fFigureBatteryI_InternalFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryI_PrevFigure() {
		return fFigureBatteryI_PrevFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBatteryPhasesFigure() {
		return fFigureBatteryPhasesFigure;
	}


}


	
	}
