package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class Regulator_configurationEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2026;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public Regulator_configurationEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.Regulator_configurationItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new Regulator_configurationFigure();
	}

		/**
 * @generated
 */
	public Regulator_configurationFigure getPrimaryShape() {
		return (Regulator_configurationFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.Regulator_configurationNameEditPart) {
			((visGrid.diagram.edit.parts.Regulator_configurationNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureRegulator_configurationNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.Regulator_configurationNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.Regulator_configurationNameEditPart.VISUAL_ID));
		}
	



		
	
	
	
/**
 * @generated
 */
public class Regulator_configurationFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationConnect_typeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationBand_centerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationBand_widthFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationTime_delayFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationDwell_timeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationRaise_tapsFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationLower_tapsFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCurrent_transducer_ratioFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationPower_transducer_ratioFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCompensator_r_setting_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCompensator_r_setting_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCompensator_r_setting_CFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCompensator_x_setting_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCompensator_x_setting_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCompensator_x_setting_CFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationCT_phaseFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationPT_phaseFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationRegulationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationControl_levelFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationControlFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationTypeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationTap_pos_AFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationTap_pos_BFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRegulator_configurationTap_pos_CFigure; 


	/**
	 * @generated
	 */
	public Regulator_configurationFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureRegulator_configurationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationNameFigure.setText("<...>");

this.add(fFigureRegulator_configurationNameFigure);



fFigureRegulator_configurationConnect_typeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationConnect_typeFigure.setText("<...>");

this.add(fFigureRegulator_configurationConnect_typeFigure);



fFigureRegulator_configurationBand_centerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationBand_centerFigure.setText("<...>");

this.add(fFigureRegulator_configurationBand_centerFigure);



fFigureRegulator_configurationBand_widthFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationBand_widthFigure.setText("<...>");

this.add(fFigureRegulator_configurationBand_widthFigure);



fFigureRegulator_configurationTime_delayFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationTime_delayFigure.setText("<...>");

this.add(fFigureRegulator_configurationTime_delayFigure);



fFigureRegulator_configurationDwell_timeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationDwell_timeFigure.setText("<...>");

this.add(fFigureRegulator_configurationDwell_timeFigure);



fFigureRegulator_configurationRaise_tapsFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationRaise_tapsFigure.setText("<...>");

this.add(fFigureRegulator_configurationRaise_tapsFigure);



fFigureRegulator_configurationLower_tapsFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationLower_tapsFigure.setText("<...>");

this.add(fFigureRegulator_configurationLower_tapsFigure);



fFigureRegulator_configurationCurrent_transducer_ratioFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCurrent_transducer_ratioFigure.setText("<...>");

this.add(fFigureRegulator_configurationCurrent_transducer_ratioFigure);



fFigureRegulator_configurationPower_transducer_ratioFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationPower_transducer_ratioFigure.setText("<...>");

this.add(fFigureRegulator_configurationPower_transducer_ratioFigure);



fFigureRegulator_configurationCompensator_r_setting_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCompensator_r_setting_AFigure.setText("<...>");

this.add(fFigureRegulator_configurationCompensator_r_setting_AFigure);



fFigureRegulator_configurationCompensator_r_setting_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCompensator_r_setting_BFigure.setText("<...>");

this.add(fFigureRegulator_configurationCompensator_r_setting_BFigure);



fFigureRegulator_configurationCompensator_r_setting_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCompensator_r_setting_CFigure.setText("<...>");

this.add(fFigureRegulator_configurationCompensator_r_setting_CFigure);



fFigureRegulator_configurationCompensator_x_setting_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCompensator_x_setting_AFigure.setText("<...>");

this.add(fFigureRegulator_configurationCompensator_x_setting_AFigure);



fFigureRegulator_configurationCompensator_x_setting_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCompensator_x_setting_BFigure.setText("<...>");

this.add(fFigureRegulator_configurationCompensator_x_setting_BFigure);



fFigureRegulator_configurationCompensator_x_setting_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCompensator_x_setting_CFigure.setText("<...>");

this.add(fFigureRegulator_configurationCompensator_x_setting_CFigure);



fFigureRegulator_configurationCT_phaseFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationCT_phaseFigure.setText("<...>");

this.add(fFigureRegulator_configurationCT_phaseFigure);



fFigureRegulator_configurationPT_phaseFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationPT_phaseFigure.setText("<...>");

this.add(fFigureRegulator_configurationPT_phaseFigure);



fFigureRegulator_configurationRegulationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationRegulationFigure.setText("<...>");

this.add(fFigureRegulator_configurationRegulationFigure);



fFigureRegulator_configurationControl_levelFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationControl_levelFigure.setText("<...>");

this.add(fFigureRegulator_configurationControl_levelFigure);



fFigureRegulator_configurationControlFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationControlFigure.setText("<...>");

this.add(fFigureRegulator_configurationControlFigure);



fFigureRegulator_configurationTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationTypeFigure.setText("<...>");

this.add(fFigureRegulator_configurationTypeFigure);



fFigureRegulator_configurationTap_pos_AFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationTap_pos_AFigure.setText("<...>");

this.add(fFigureRegulator_configurationTap_pos_AFigure);



fFigureRegulator_configurationTap_pos_BFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationTap_pos_BFigure.setText("<...>");

this.add(fFigureRegulator_configurationTap_pos_BFigure);



fFigureRegulator_configurationTap_pos_CFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureRegulator_configurationTap_pos_CFigure.setText("<...>");

this.add(fFigureRegulator_configurationTap_pos_CFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationNameFigure() {
		return fFigureRegulator_configurationNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationConnect_typeFigure() {
		return fFigureRegulator_configurationConnect_typeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationBand_centerFigure() {
		return fFigureRegulator_configurationBand_centerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationBand_widthFigure() {
		return fFigureRegulator_configurationBand_widthFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationTime_delayFigure() {
		return fFigureRegulator_configurationTime_delayFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationDwell_timeFigure() {
		return fFigureRegulator_configurationDwell_timeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationRaise_tapsFigure() {
		return fFigureRegulator_configurationRaise_tapsFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationLower_tapsFigure() {
		return fFigureRegulator_configurationLower_tapsFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCurrent_transducer_ratioFigure() {
		return fFigureRegulator_configurationCurrent_transducer_ratioFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationPower_transducer_ratioFigure() {
		return fFigureRegulator_configurationPower_transducer_ratioFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCompensator_r_setting_AFigure() {
		return fFigureRegulator_configurationCompensator_r_setting_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCompensator_r_setting_BFigure() {
		return fFigureRegulator_configurationCompensator_r_setting_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCompensator_r_setting_CFigure() {
		return fFigureRegulator_configurationCompensator_r_setting_CFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCompensator_x_setting_AFigure() {
		return fFigureRegulator_configurationCompensator_x_setting_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCompensator_x_setting_BFigure() {
		return fFigureRegulator_configurationCompensator_x_setting_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCompensator_x_setting_CFigure() {
		return fFigureRegulator_configurationCompensator_x_setting_CFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationCT_phaseFigure() {
		return fFigureRegulator_configurationCT_phaseFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationPT_phaseFigure() {
		return fFigureRegulator_configurationPT_phaseFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationRegulationFigure() {
		return fFigureRegulator_configurationRegulationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationControl_levelFigure() {
		return fFigureRegulator_configurationControl_levelFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationControlFigure() {
		return fFigureRegulator_configurationControlFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationTypeFigure() {
		return fFigureRegulator_configurationTypeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationTap_pos_AFigure() {
		return fFigureRegulator_configurationTap_pos_AFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationTap_pos_BFigure() {
		return fFigureRegulator_configurationTap_pos_BFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRegulator_configurationTap_pos_CFigure() {
		return fFigureRegulator_configurationTap_pos_CFigure;
	}


}


	
	}
