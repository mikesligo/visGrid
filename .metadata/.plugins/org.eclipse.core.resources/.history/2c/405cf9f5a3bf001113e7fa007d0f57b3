package visGrid.diagram.edit.parts;

/**
 * @generated
 */
public class DryerEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ShapeNodeEditPart  {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 2060;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure contentPane;

	/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure primaryShape;
	
		/**
 * @generated
 */
	public DryerEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
				super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new visGrid.diagram.edit.policies.DryerItemSemanticEditPolicy());
						installEditPolicy(org.eclipse.gef.EditPolicy.LAYOUT_ROLE, createLayoutEditPolicy());
			// XXX need an SCR to runtime to have another abstract superclass that would let children add reasonable editpolicies
	// removeEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.CONNECTION_HANDLES_ROLE);
	}
	
		/**
 * @generated
 */
	protected org.eclipse.gef.editpolicies.LayoutEditPolicy createLayoutEditPolicy() {
			
		org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy lep = new org.eclipse.gmf.runtime.diagram.ui.editpolicies.FlowLayoutEditPolicy() {
			
			protected org.eclipse.gef.commands.Command createAddCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command createMoveChildCommand(org.eclipse.gef.EditPart child, org.eclipse.gef.EditPart after) {
				return null;
			}

			protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gef.requests.CreateRequest request) {
				return null;
			}
		};
		return lep;
		}
	
		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure createNodeShape() {
		return primaryShape = new DryerFigure();
	}

		/**
 * @generated
 */
	public DryerFigure getPrimaryShape() {
		return (DryerFigure) primaryShape;
	}
	
		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.DryerNameEditPart) {
			((visGrid.diagram.edit.parts.DryerNameEditPart) childEditPart).setLabel(getPrimaryShape().getFigureDryerNameFigure());
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
		if (childEditPart instanceof visGrid.diagram.edit.parts.DryerNameEditPart) {
			return true;
		}
		return false;
	}

		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, -1);
	}

		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)){
			return;
		}
		super.removeChildVisual(childEditPart);
	}

		/**
 * @generated
 */
	protected org.eclipse.draw2d.IFigure getContentPaneFor(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart editPart) {
				return getContentPane();
	}

			
		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodePlate() {
		org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure result = new org.eclipse.gmf.runtime.gef.ui.figures.DefaultSizeNodeFigure(40, 40);
				return result;
	}
	
						
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	protected org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure createNodeFigure() {
		org.eclipse.gmf.runtime.gef.ui.figures.NodeFigure figure = createNodePlate();
		figure.setLayoutManager(new org.eclipse.draw2d.StackLayout());
		org.eclipse.draw2d.IFigure shape = createNodeShape();
		figure.add(shape);
		contentPane = setupContentPane(shape);
		return figure;
	}
	
		/**
 * Default implementation treats passed figure as content pane.
 * Respects layout one may have set for generated figure.
 * @param nodeShape instance of generated figure class
 * @generated
 */
	protected org.eclipse.draw2d.IFigure setupContentPane(org.eclipse.draw2d.IFigure nodeShape) {
					if (nodeShape.getLayoutManager() == null) {
									org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout layout =new org.eclipse.gmf.runtime.draw2d.ui.figures.ConstrainedToolbarLayout();
					layout.setSpacing(5);
					nodeShape.setLayoutManager(layout);
							}
				return nodeShape; // use nodeShape itself as contentPane
	}
	
		/**
 * @generated
 */
	public org.eclipse.draw2d.IFigure getContentPane() {
		if (contentPane != null) {
			return contentPane;
		}
		return super.getContentPane();
	}

		/**
 * @generated
 */
	protected void setForegroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setForegroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setBackgroundColor(org.eclipse.swt.graphics.Color color) {
		if (primaryShape != null) {
			primaryShape.setBackgroundColor(color);
		}
	}

		/**
 * @generated
 */
	protected void setLineWidth(int width) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineWidth(width);
		}
	}

		/**
 * @generated
 */
	protected void setLineType(int style) {
		if (primaryShape instanceof org.eclipse.draw2d.Shape) {
			((org.eclipse.draw2d.Shape) primaryShape).setLineStyle(style);
		}
	}

				/**
 * @generated
 */
		public org.eclipse.gef.EditPart getPrimaryChildEditPart() {
			return getChildBySemanticHint(visGrid.diagram.part.VisGridVisualIDRegistry.getType(visGrid.diagram.edit.parts.DryerNameEditPart.VISUAL_ID));
		}
	
		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnSource() {
		java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(1);
				types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnSourceAndTarget(org.eclipse.gmf.runtime.diagram.ui.editparts.IGraphicalEditPart targetEditPart) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
							if (targetEditPart instanceof visGrid.diagram.edit.parts.Line_configurationEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.AuctionEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.CapacitorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Regulator_configurationEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.House_aEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.HouseEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.InverterEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.LineEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RefrigeratorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.TransformerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.LinkEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.MicroturbineEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.StubauctionEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.FuseEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RangeEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Series_reactorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Line_spacingEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.OfficeEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Power_electronicsEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.SolarEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Volt_var_controlEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.PlayerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.BatteryEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.LoadEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Underground_line_conductorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RegulatorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Underground_lineEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.LightsEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Overhead_lineEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Triplex_line_conductorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.ShaperEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.FreezerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Triplex_nodeEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.ClimateEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.PqloadEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.PlugloadEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.PlcEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Fault_checkEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.GeneratorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.MultizoneEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Windturb_dgEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.BilldumpEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Controller2EditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.WaterheaterEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.ClotheswasherEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.DishwasherEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.ZIPloadEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.WeatherEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Residential_enduseEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RestorationEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Frequency_genEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.CommEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.SubstationEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Triplex_line_configurationEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RecorderEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Energy_storageEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Transformer_configurationEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.ControllerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.MeterEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.DryerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.SwitchEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RectifierEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.CapbankEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Overhead_line_conductorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.OccupantloadEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Triplex_meterEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.CollectorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Csv_readerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.VoltdumpEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.EvchargerEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.NodeEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Triplex_lineEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.RelayEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.MotorEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.MicrowaveEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.HistogramEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Dc_dc_converterEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
					if (targetEditPart instanceof visGrid.diagram.edit.parts.Diesel_dgEditPart) {
			types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
		}
							return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMATypesForTarget(org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Line_configuration_2001);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Auction_2002);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Capacitor_2003);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Regulator_configuration_2004);
						types.add(visGrid.diagram.providers.VisGridElementTypes.House_a_2005);
						types.add(visGrid.diagram.providers.VisGridElementTypes.House_2006);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Inverter_2007);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Line_2008);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Refrigerator_2009);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Transformer_2010);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Link_2011);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Microturbine_2012);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Stubauction_2013);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Fuse_2014);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Range_2015);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Series_reactor_2016);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Line_spacing_2017);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Office_2018);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Power_electronics_2019);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Solar_2020);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Volt_var_control_2021);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Player_2022);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Battery_2023);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Load_2024);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Underground_line_conductor_2025);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Regulator_2026);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Underground_line_2027);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Lights_2028);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Overhead_line_2029);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_conductor_2030);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Shaper_2031);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Freezer_2032);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_node_2033);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Climate_2034);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Pqload_2035);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Plugload_2036);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Plc_2037);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Fault_check_2038);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Generator_2039);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Multizone_2040);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Windturb_dg_2041);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Billdump_2042);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Controller2_2043);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Waterheater_2044);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Clotheswasher_2045);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Dishwasher_2046);
						types.add(visGrid.diagram.providers.VisGridElementTypes.ZIPload_2047);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Weather_2048);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Residential_enduse_2049);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Restoration_2050);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Frequency_gen_2051);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Comm_2052);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Substation_2053);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_configuration_2054);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Recorder_2055);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Energy_storage_2056);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Transformer_configuration_2057);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Controller_2058);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Meter_2059);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Dryer_2060);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Switch_2061);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Rectifier_2062);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Capbank_2063);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Overhead_line_conductor_2064);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Occupantload_2065);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_meter_2066);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Collector_2067);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Csv_reader_2068);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Voltdump_2069);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Evcharger_2070);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Node_2071);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_2072);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Relay_2073);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Motor_2074);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Microwave_2075);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Histogram_2076);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Dc_dc_converter_2077);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Diesel_dg_2078);
					}
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMARelTypesOnTarget() {
		java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.ArrayList<org.eclipse.gmf.runtime.emf.type.core.IElementType>(1);
				types.add(visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001);
				return types;
	}

		/**
 * @generated
 */
	public java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> getMATypesForSource(org.eclipse.gmf.runtime.emf.type.core.IElementType relationshipType) {
		java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType> types = new java.util.LinkedList<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
				if (relationshipType == visGrid.diagram.providers.VisGridElementTypes.ConnectionConnections_4001) {
						types.add(visGrid.diagram.providers.VisGridElementTypes.Line_configuration_2001);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Auction_2002);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Capacitor_2003);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Regulator_configuration_2004);
						types.add(visGrid.diagram.providers.VisGridElementTypes.House_a_2005);
						types.add(visGrid.diagram.providers.VisGridElementTypes.House_2006);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Inverter_2007);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Line_2008);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Refrigerator_2009);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Transformer_2010);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Link_2011);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Microturbine_2012);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Stubauction_2013);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Fuse_2014);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Range_2015);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Series_reactor_2016);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Line_spacing_2017);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Office_2018);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Power_electronics_2019);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Solar_2020);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Volt_var_control_2021);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Player_2022);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Battery_2023);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Load_2024);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Underground_line_conductor_2025);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Regulator_2026);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Underground_line_2027);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Lights_2028);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Overhead_line_2029);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_conductor_2030);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Shaper_2031);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Freezer_2032);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_node_2033);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Climate_2034);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Pqload_2035);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Plugload_2036);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Plc_2037);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Fault_check_2038);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Generator_2039);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Multizone_2040);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Windturb_dg_2041);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Billdump_2042);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Controller2_2043);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Waterheater_2044);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Clotheswasher_2045);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Dishwasher_2046);
						types.add(visGrid.diagram.providers.VisGridElementTypes.ZIPload_2047);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Weather_2048);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Residential_enduse_2049);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Restoration_2050);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Frequency_gen_2051);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Comm_2052);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Substation_2053);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_configuration_2054);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Recorder_2055);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Energy_storage_2056);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Transformer_configuration_2057);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Controller_2058);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Meter_2059);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Dryer_2060);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Switch_2061);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Rectifier_2062);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Capbank_2063);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Overhead_line_conductor_2064);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Occupantload_2065);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_meter_2066);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Collector_2067);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Csv_reader_2068);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Voltdump_2069);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Evcharger_2070);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Node_2071);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Triplex_line_2072);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Relay_2073);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Motor_2074);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Microwave_2075);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Histogram_2076);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Dc_dc_converter_2077);
						types.add(visGrid.diagram.providers.VisGridElementTypes.Diesel_dg_2078);
					}
				return types;
	}


		
	
	
	
/**
 * @generated
 */
public class DryerFigure extends org.eclipse.draw2d.RectangleFigure {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerNameFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerMotor_powerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerCoil_powerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerCircuit_splitFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerDemandFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerQueueFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerStall_voltageFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerStart_voltageFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerStall_impedanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerTrip_delayFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerReset_delayFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerStateFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerShapeFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerLoadFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerEnergyFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerPowerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerPeak_demandFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerHeatgainFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerHeatgain_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerCurrent_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerImpedance_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerPower_fractionFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerPower_factorFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerConstant_powerFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerConstant_currentFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerConstant_admittanceFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerVoltage_factorFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerConfigurationFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDryerOverrideFigure; 


	/**
	 * @generated
	 */
	public DryerFigure() {
		
	org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();
	layoutThis.setStretchMinorAxis(false);
	layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);

	layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP
);
	layoutThis.setMajorSpacing(5);
	layoutThis.setMinorSpacing(5);
	layoutThis.setHorizontal(true);

	this.setLayoutManager(layoutThis);

				createContents();
	}
	/**
	 * @generated
	 */
	private void createContents(){


fFigureDryerNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerNameFigure.setText("<...>");

this.add(fFigureDryerNameFigure);



fFigureDryerMotor_powerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerMotor_powerFigure.setText("<...>");

this.add(fFigureDryerMotor_powerFigure);



fFigureDryerCoil_powerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerCoil_powerFigure.setText("<...>");

this.add(fFigureDryerCoil_powerFigure);



fFigureDryerCircuit_splitFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerCircuit_splitFigure.setText("<...>");

this.add(fFigureDryerCircuit_splitFigure);



fFigureDryerDemandFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerDemandFigure.setText("<...>");

this.add(fFigureDryerDemandFigure);



fFigureDryerQueueFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerQueueFigure.setText("<...>");

this.add(fFigureDryerQueueFigure);



fFigureDryerStall_voltageFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerStall_voltageFigure.setText("<...>");

this.add(fFigureDryerStall_voltageFigure);



fFigureDryerStart_voltageFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerStart_voltageFigure.setText("<...>");

this.add(fFigureDryerStart_voltageFigure);



fFigureDryerStall_impedanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerStall_impedanceFigure.setText("<...>");

this.add(fFigureDryerStall_impedanceFigure);



fFigureDryerTrip_delayFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerTrip_delayFigure.setText("<...>");

this.add(fFigureDryerTrip_delayFigure);



fFigureDryerReset_delayFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerReset_delayFigure.setText("<...>");

this.add(fFigureDryerReset_delayFigure);



fFigureDryerStateFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerStateFigure.setText("<...>");

this.add(fFigureDryerStateFigure);



fFigureDryerShapeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerShapeFigure.setText("<...>");

this.add(fFigureDryerShapeFigure);



fFigureDryerLoadFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerLoadFigure.setText("<...>");

this.add(fFigureDryerLoadFigure);



fFigureDryerEnergyFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerEnergyFigure.setText("<...>");

this.add(fFigureDryerEnergyFigure);



fFigureDryerPowerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerPowerFigure.setText("<...>");

this.add(fFigureDryerPowerFigure);



fFigureDryerPeak_demandFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerPeak_demandFigure.setText("<...>");

this.add(fFigureDryerPeak_demandFigure);



fFigureDryerHeatgainFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerHeatgainFigure.setText("<...>");

this.add(fFigureDryerHeatgainFigure);



fFigureDryerHeatgain_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerHeatgain_fractionFigure.setText("<...>");

this.add(fFigureDryerHeatgain_fractionFigure);



fFigureDryerCurrent_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerCurrent_fractionFigure.setText("<...>");

this.add(fFigureDryerCurrent_fractionFigure);



fFigureDryerImpedance_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerImpedance_fractionFigure.setText("<...>");

this.add(fFigureDryerImpedance_fractionFigure);



fFigureDryerPower_fractionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerPower_fractionFigure.setText("<...>");

this.add(fFigureDryerPower_fractionFigure);



fFigureDryerPower_factorFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerPower_factorFigure.setText("<...>");

this.add(fFigureDryerPower_factorFigure);



fFigureDryerConstant_powerFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerConstant_powerFigure.setText("<...>");

this.add(fFigureDryerConstant_powerFigure);



fFigureDryerConstant_currentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerConstant_currentFigure.setText("<...>");

this.add(fFigureDryerConstant_currentFigure);



fFigureDryerConstant_admittanceFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerConstant_admittanceFigure.setText("<...>");

this.add(fFigureDryerConstant_admittanceFigure);



fFigureDryerVoltage_factorFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerVoltage_factorFigure.setText("<...>");

this.add(fFigureDryerVoltage_factorFigure);



fFigureDryerConfigurationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerConfigurationFigure.setText("<...>");

this.add(fFigureDryerConfigurationFigure);



fFigureDryerOverrideFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();
fFigureDryerOverrideFigure.setText("<...>");

this.add(fFigureDryerOverrideFigure);


	}





	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerNameFigure() {
		return fFigureDryerNameFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerMotor_powerFigure() {
		return fFigureDryerMotor_powerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerCoil_powerFigure() {
		return fFigureDryerCoil_powerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerCircuit_splitFigure() {
		return fFigureDryerCircuit_splitFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerDemandFigure() {
		return fFigureDryerDemandFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerQueueFigure() {
		return fFigureDryerQueueFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerStall_voltageFigure() {
		return fFigureDryerStall_voltageFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerStart_voltageFigure() {
		return fFigureDryerStart_voltageFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerStall_impedanceFigure() {
		return fFigureDryerStall_impedanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerTrip_delayFigure() {
		return fFigureDryerTrip_delayFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerReset_delayFigure() {
		return fFigureDryerReset_delayFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerStateFigure() {
		return fFigureDryerStateFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerShapeFigure() {
		return fFigureDryerShapeFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerLoadFigure() {
		return fFigureDryerLoadFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerEnergyFigure() {
		return fFigureDryerEnergyFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerPowerFigure() {
		return fFigureDryerPowerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerPeak_demandFigure() {
		return fFigureDryerPeak_demandFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerHeatgainFigure() {
		return fFigureDryerHeatgainFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerHeatgain_fractionFigure() {
		return fFigureDryerHeatgain_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerCurrent_fractionFigure() {
		return fFigureDryerCurrent_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerImpedance_fractionFigure() {
		return fFigureDryerImpedance_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerPower_fractionFigure() {
		return fFigureDryerPower_fractionFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerPower_factorFigure() {
		return fFigureDryerPower_factorFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerConstant_powerFigure() {
		return fFigureDryerConstant_powerFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerConstant_currentFigure() {
		return fFigureDryerConstant_currentFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerConstant_admittanceFigure() {
		return fFigureDryerConstant_admittanceFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerVoltage_factorFigure() {
		return fFigureDryerVoltage_factorFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerConfigurationFigure() {
		return fFigureDryerConfigurationFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDryerOverrideFigure() {
		return fFigureDryerOverrideFigure;
	}


}


	
	}
